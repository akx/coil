{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/render.tsx","webpack:///./src/modules/registry.ts","webpack:///./src/modules/MatrixUtils.ts","webpack:///./src/modules/TransformVariables.ts","webpack:///./src/modules/PresentationVariables.ts","webpack:///./src/modules/Module.tsx","webpack:///./src/NodeConfig.tsx","webpack:///./src/components/Icon.tsx","webpack:///./src/components/GlobalToolbar.tsx","webpack:///./src/Status.tsx","webpack:///./src/managers/TreeManager.tsx","webpack:///./src/components/TreeToolbar.tsx","webpack:///./src/evaluator.ts","webpack:///./src/RandomGenerator.ts","webpack:///./src/Context.tsx","webpack:///./src/components/NodeConfigView.tsx","webpack:///./src/components/NodeTree.tsx","webpack:///./src/modules/modify/Xform.tsx","webpack:///./src/modules/modify/RemoveChildren.tsx","webpack:///./src/modules/array/RectArray.tsx","webpack:///./src/modules/prim/Rect.tsx","webpack:///./src/dumbMemoize.ts","webpack:///./src/modules/prim/Ngon.tsx","webpack:///./src/modules/array/LinearArray.tsx","webpack:///./src/modules/prim/Ellipse.tsx","webpack:///./src/modules/modify/Choose.tsx","webpack:///./src/App.tsx","webpack:///./src/index.tsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","registry_1","renderNode","context","nodeConfig","default","Error","status","addVariables","id","variables","render","subcontext","e","console","error","renderNodesInto","targetArray","nodes","renderedElts","Choose_1","Ellipse_1","LinearArray_1","Ngon_1","Rect_1","RectArray_1","RemoveChildren_1","Xform_1","registry","Choose","Ellipse","LinearArray","Ngon","Rect","RectArray","RemoveChildren","Xform","keys","forEach","displayName","transformation_matrix_1","multiply","m1","m2","a","b","f","makeMatrix","_a","x","y","sx","sy","matrix","translate","isFinite","rotateDEG","scale","splitMatrixAndProps","props","newProps","assign","group","type","getVariableDefaults","defaults","v","UniversalVariables","Module_1","lodash_1","generateId","Math","floor","random","toString","duplicate","walk","config","cloneDeep","children","map","configure","moduleName","React","path","createElement","__assign","xmlns","viewBox","Icon_1","cx","GlobalToolbarIcons","fileTree","save","GlobalToolbar","_super","__extends","_this","this","tabs","icon","className","active","activeTab","title","onClick","onChangeTab","Component","Status","nodeErrors","nodeVariables","addError","nodeId","getErrorsForNode","getVariablesForNode","Set","add","Array","from","sort","NodeConfig_1","TreeManager","tree","nodeCache","treeUpdateListeners","replaceTree","newTree","updateNodeCache","invokeTreeUpdateListeners","newNodeCache","node","parent","child","setImmediate","listener","getNodeOrNull","cacheEntry","getNodeCacheEntry","getNodeParentOrNull","getNode","getNodeParent","check","replaceOrEmsiblingNode","nodeToReplace","newNodes","replace","childList","childIndex","indexOf","args","concat","getTree","addTreeUpdateListener","changeNodeVariable","variableName","addChildNode","parentNodeId","newNode","addChildInternal","parentNode","wrapNode","wrappedNode","wrappedNodeParent","wrapperNode","deleteNode","withHierarchy","doomedNode","doomedNodeParent","addSiblingNode","nodeParent","moveNode","sourceNodeId","newParentNodeId","sourceNode","sourceNodeParent","copyNode","targetNodeId","copiedNode","react_simple_dropdown_1","nodeAcceptsChildren","acceptsChildren","TreeToolbar","arguments","dropdowns","handleAddNode","method","treeManager","selectedNode","hideDropdowns","handleDeleteNode","values","dropdown","hide","childMode","childText","allowAddSibling","disabled","ref","instance","wrap","DropdownTrigger","DropdownContent","filter","href","addChild","addSibling","event","shiftKey","preventDefault","expressionFnCache","evaluateExpression","expression","namespace","startsWith","Function","test","parseFloat","seedString","seed","string","charCodeAt","hashString","RandomGenerator_1","evaluator_1","render_1","_evaluate","tag","errorDefault","err","warn","Context","idPrefix","defaultNamespace","prepareNamespace","forNode","newVariables","mergedVariables","min","max","rng","evaluateFromNodeConfig","val","undefined","additionalVariables","creator","memoizeOnFirstInvocation","rand","evaluate","evaluateAll","expressionMap","evaluated","evaluateNodeConfig","getId","suffix","renderChildren","VariableConfigRow","variable","onChange","extraControls","input","handleChange","target","choices","NodeConfigView","variableDefinitions","variablesByGroup","groupBy","Fragment","colSpan","join","TreeNode","onSelectNode","onRepositionNode","draggable","stopPropagation","onDragStart","dataTransfer","clearData","setData","effectAllowed","onDragOver","dropEffect","types","altKey","onDrop","getData","copy","TreeLevel","nodeConfigs","currentTarget","TransformVariables_1","MatrixUtils_1","opacity","transform","toSVG","indexVariable","filterContext","keepExpression","keep","index","SQRT_THREE","sqrt","SQRT_THREE_OVER_TWO","_b","numberX","numberY","variableX","variableY","hex","round","PresentationVariables_1","width","height","fn","memo","memoizedFn","_i","argsStr","__spread","dumbMemoize_1","TWO_PI","PI","generatePathString","vertices","radius1","radius2","tilt1","tilt2","radius","angle","cos","sin","isNaN","toFixed","number","nNumber","radiusX","radiusY","fill","cy","rx","ry","parseInt","NodeTree_1","NodeConfigView_1","Context_1","TreeToolbar_1","TreeManager_1","Status_1","GlobalToolbar_1","DEFAULT_NODE_CONFIGS","App","state","selectedNodeId","rendered","setState","onChangeNodeVariable","newValue","forceUpdate","tabId","componentDidMount","renderDrawing","rootPseudoNode","selectedNodeConfig","configContent","ReactDOM","App_1","wrapper","document","body","appendChild"],"mappings":"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","file":"main.92971cd8.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([60,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import {NodeConfig} from \"./NodeConfig\";\nimport registry from \"./modules/registry\";\nimport Context from \"./Context\";\nimport Module from \"./modules/Module\";\n\nexport function renderNode(context: Context, nodeConfig: NodeConfig) {\n  const module: Module = registry[nodeConfig.module];\n  if (!module) {\n    throw new Error(`not registered ${nodeConfig.module}`);\n  }\n  try {\n    context.status.addVariables(nodeConfig.id, context.variables);\n    return module.render(context.subcontext(nodeConfig, {}, nodeConfig.id));\n  } catch (e) {\n    console.error(e);\n    return [];\n  }\n}\n\nexport function renderNodesInto(targetArray: Array<any>, nodes: NodeConfig[], context: Context) {\n  for(var i = 0; i < nodes.length; i++) {\n    const renderedElts = renderNode(context, nodes[i]);\n    for(var j = 0; j < renderedElts.length; j++) {\n      targetArray.push(renderedElts[j]);\n    }\n  }\n}\n","import Choose from './modify/Choose';\nimport Ellipse from './prim/Ellipse';\nimport LinearArray from './array/LinearArray';\nimport Module from './Module';\nimport Ngon from './prim/Ngon';\nimport Rect from './prim/Rect';\nimport RectArray from './array/RectArray';\nimport RemoveChildren from './modify/RemoveChildren';\nimport Xform from './modify/Xform';\n\nconst registry = {\n  Choose,\n  Ellipse,\n  LinearArray,\n  Ngon,\n  Rect,\n  RectArray,\n  RemoveChildren,\n  Xform,\n} as {[name: string]: Module};\nexport default registry;\n\nObject.keys(registry).forEach((name) => {\n  (registry[name].render as any).displayName = `render_${name}`;\n});\n","import {rotateDEG, scale, translate} from 'transformation-matrix';\nimport {VariableMap} from '../types';\n\nconst multiply = (m1: Matrix, m2: Matrix): Matrix => {\n  return {\n    a: m1.a * m2.a + m1.c * m2.b,\n    b: m1.b * m2.a + m1.d * m2.b,\n    c: m1.a * m2.c + m1.c * m2.d,\n    d: m1.b * m2.c + m1.d * m2.d,\n    e: m1.a * m2.e + m1.c * m2.f + m1.e,\n    f: m1.b * m2.e + m1.d * m2.f + m1.f,\n  };\n};\n\nexport type TransformBag = {\n  x: number,\n  y: number,\n  r: number,\n  sx: number,\n  sy: number,\n};\n\nexport function makeMatrix({x, y, r, sx, sy}: TransformBag): Matrix {\n  let matrix = translate(isFinite(x) ? x : 0, isFinite(y) ? y : 0);\n  if (isFinite(r)) {\n    matrix = multiply(matrix, rotateDEG(r));\n  }\n  if (isFinite(sx) && isFinite(sy)) {\n    matrix = multiply(matrix, scale(sx, sy));\n  }\n  return matrix;\n}\n\nexport function splitMatrixAndProps(props: VariableMap): {\n  matrix: Matrix,\n  props: VariableMap,\n} {\n  const matrix = makeMatrix(props as TransformBag);\n  const newProps = Object.assign({}, props);\n  delete newProps.x;\n  delete newProps.y;\n  delete newProps.r;\n  delete newProps.sx;\n  delete newProps.sy;\n  return {matrix, props: newProps};\n}\n","import VariableDefinition from './VariableDefinition';\n\nconst group = 'Transform';\nexport default [\n  {name: 'x', default: '0', group},\n  {name: 'y', default: '0', group},\n  {name: 'r', default: '0', group},\n  {name: 'sx', default: '1', group},\n  {name: 'sy', default: '1', group},\n] as VariableDefinition[];\n","import VariableDefinition from './VariableDefinition';\n\nconst group = 'Presentation';\nexport default [\n  {name: 'fill', default: '#333', group, type: 'color'},\n  {name: 'stroke', default: '', group, type: 'color'},\n  {name: 'strokeWidth', default: '0', group, type: 'number'},\n  {name: 'opacity', default: '1', group},\n] as VariableDefinition[];\n","import Context from '../Context';\nimport VariableDefinition from './VariableDefinition';\nimport {ReactElement} from 'react';\n\n// tslint:disable-next-line:interface-name\nexport default interface Module {\n  acceptsChildren: boolean;\n  variables: VariableDefinition[];\n  render(context: Context): Array<ReactElement<any>>;\n}\n\nexport function getVariableDefaults(module: Module): object {\n  const defaults = {};\n  module.variables.forEach((v) => {\n    defaults[v.name] = v.default;\n  });\n  return defaults;\n}\n\nexport const UniversalVariables = [\n  {name: 'seed', default: '', group: 'Randomness'},\n] as VariableDefinition[];\n","import Module, {getVariableDefaults} from \"./modules/Module\";\nimport registry from \"./modules/registry\";\nimport {ExpressionMap} from \"./types\";\nimport {cloneDeep} from 'lodash';\n\nexport interface NodeConfig {\n  id: string;\n  module: string;\n  config: ExpressionMap;\n  children: Array<NodeConfig>;\n}\n\nfunction generateId() {\n  return `${Math.floor(Math.random() * 0xFFFFFFFF).toString(36)}`;\n}\n\nexport function duplicate(nodeConfig: NodeConfig): NodeConfig {\n  function walk(nodeConfig: NodeConfig): NodeConfig {\n    return {\n      id: generateId(),\n      module: nodeConfig.module,\n      config: cloneDeep(nodeConfig.config),\n      children: nodeConfig.children.map(walk),\n    };\n  }\n\n  return walk(nodeConfig);\n}\n\n\nexport function configure(\n  moduleName: string,\n  variables: { [key: string]: any },\n  children: Array<NodeConfig> = [],\n): NodeConfig {\n  const module: Module = registry[moduleName];\n  const defaults = getVariableDefaults(module);\n  return {\n    id: generateId(),\n    module: moduleName,\n    config: Object.assign({}, defaults, variables),\n    children,\n  };\n}\n","import * as React from 'react';\n\nexport default ({path, props}: { path: string, props?: object }) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" {...props}>\n    <path d={path} />\n  </svg>\n);\n","import * as React from 'react';\nimport Icon from './Icon';\nimport * as cx from 'classnames';\n\nconst GlobalToolbarIcons = {\n  fileTree: require('material-design-icons-svg/paths/file-tree'),\n  save: require('material-design-icons-svg/paths/content-save'),\n};\n\nexport default class GlobalToolbar extends React.Component<{\n  activeTab: string,\n  onChangeTab: (id: string) => void,\n}, any> {\n  render() {\n    const tabs = [\n      {id: 'tree', icon: GlobalToolbarIcons.fileTree},\n      {id: 'file', icon: GlobalToolbarIcons.save},\n    ];\n    return (\n      <div id=\"global-toolbar\" className=\"toolbar\">\n        {tabs.map((t) =>\n          <div\n            key={t.id}\n            className={cx('btn', {active: this.props.activeTab === t.id})}\n            title={t.id}\n            onClick={() => this.props.onChangeTab(t.id)}\n          >\n            <Icon path={t.icon} />\n          </div>,\n        )}\n      </div>\n    );\n  }\n\n}\n","import {VariableMap} from \"./types\";\n\nexport default class Status {\n  private nodeErrors: { [key: string]: string[] } = {};\n  private nodeVariables: { [key: string]: VariableMap[] } = {};\n\n  public addError(nodeId: string, error: string) {\n    if (!(nodeId in this.nodeErrors)) {\n      this.nodeErrors[nodeId] = [];\n    }\n    this.nodeErrors[nodeId].push(error);\n  }\n\n  public getErrorsForNode(nodeId: string): ReadonlyArray<string> {\n    return (nodeId in this.nodeErrors ? this.nodeErrors[nodeId] : []);\n  }\n\n\n  public addVariables(nodeId: string, variables: VariableMap) {\n    if (!(nodeId in this.nodeVariables)) {\n      this.nodeVariables[nodeId] = [];\n    }\n    this.nodeVariables[nodeId].push(Object.assign({}, variables));\n  }\n\n  public getVariablesForNode(nodeId: string): string[] {\n    if(!(nodeId in this.nodeVariables)) {\n      return [];\n    }\n    const variables = new Set();\n    this.nodeVariables[nodeId].forEach((map) => {\n      Object.keys(map).forEach((key) => {\n        return variables.add(key);\n      });\n    });\n    return Array.from(variables).sort();\n  }\n\n\n}\n","import {NodeConfig, configure, duplicate} from '../NodeConfig';\nimport {cloneDeep} from 'lodash';\n\ntype NodeCacheEntry = {\n  node: NodeConfig,\n  parent: NodeConfig | null,\n};\nexport type NodeCacheType = {\n  [key: string]: NodeCacheEntry,\n};\nexport type UpdateListener = (root: NodeConfig[]) => void;\n\nexport class TreeManager {\n  private tree: NodeConfig[] = [];\n  private nodeCache: NodeCacheType = {};\n  private treeUpdateListeners: UpdateListener[] = [];\n\n  public replaceTree(newTree: NodeConfig[]) {\n    this.tree = cloneDeep(newTree);\n    this.updateNodeCache();\n    this.invokeTreeUpdateListeners();\n  }\n\n  private updateNodeCache() {\n    const newNodeCache: NodeCacheType = {};\n\n    function walk(node: NodeConfig, parent: NodeConfig | null) {\n      newNodeCache[node.id] = {node, parent};\n      node.children.forEach((child) => walk(child, node));\n    }\n\n    this.tree.forEach((node) => walk(node, null));\n    this.nodeCache = newNodeCache;\n  }\n\n  private invokeTreeUpdateListeners() {\n    setImmediate(() => {\n      this.treeUpdateListeners.forEach((listener) => {\n        listener(this.tree);\n      });\n    });\n  }\n\n  public getNodeOrNull(nodeId: string): NodeConfig | null {\n    const cacheEntry = this.getNodeCacheEntry(nodeId, false);\n    return (cacheEntry ? cacheEntry.node : null);\n  }\n\n  public getNodeParentOrNull(nodeId: string): NodeConfig | null {\n    const cacheEntry = this.getNodeCacheEntry(nodeId, false);\n    return (cacheEntry ? cacheEntry.parent : null);\n  }\n\n  private getNode(nodeId: string): NodeConfig {\n    return this.getNodeCacheEntry(nodeId)!.node;\n  }\n\n  private getNodeParent(nodeId: string): NodeConfig | null {\n    return this.getNodeCacheEntry(nodeId)!.parent;\n  }\n\n  private getNodeCacheEntry(nodeId: string, check: boolean = true): NodeCacheEntry | null {\n    const cacheEntry = this.nodeCache[nodeId];\n    if (check && !cacheEntry) {\n      throw new Error(`invalid node ${nodeId}`);\n    }\n    return (cacheEntry ? cacheEntry : null);\n  }\n\n  private replaceOrEmsiblingNode(\n    parent: NodeConfig | null,\n    nodeToReplace: NodeConfig,\n    newNodes: ReadonlyArray<NodeConfig>,\n    replace: boolean,\n  ) {\n    const childList = (parent === null ? this.tree : parent.children);\n    const childIndex = childList.indexOf(nodeToReplace);\n    if (childIndex > -1) {\n      const args = ([childIndex, (replace ? 1 : 0)] as any[]).concat(newNodes);\n      childList.splice.apply(childList, args);\n    }\n  }\n\n  public getTree(): ReadonlyArray<NodeConfig> {\n    return this.tree;\n  }\n\n  public addTreeUpdateListener(listener: UpdateListener) {\n    this.treeUpdateListeners.push(listener);\n  }\n\n  public changeNodeVariable(nodeId: string, variableName: string, value: any) {\n    const node = this.getNode(nodeId);\n    node.config[variableName] = value;\n    this.invokeTreeUpdateListeners();\n  }\n\n  public addChildNode(parentNodeId: string | null, module: string) {\n    const newNode = configure(module, {});\n    this.addChildInternal(parentNodeId, newNode);\n    this.updateNodeCache();\n    this.invokeTreeUpdateListeners();\n    return newNode;\n  }\n\n  private addChildInternal(parentNodeId: string | null, newNode) {\n    if (parentNodeId) {\n      const parentNode = this.getNode(parentNodeId);\n      parentNode.children.push(newNode);\n      return parentNode;\n    } else {\n      this.tree.push(newNode);\n      return null;\n    }\n  }\n\n  public wrapNode(parentNodeId: string, module: string) {\n    const wrappedNode = this.getNode(parentNodeId);\n    const wrappedNodeParent = this.getNodeParent(parentNodeId);\n    const wrapperNode = configure(module, {}, [wrappedNode]);\n    this.replaceOrEmsiblingNode(wrappedNodeParent, wrappedNode, [wrapperNode], true);\n    this.updateNodeCache();\n    this.invokeTreeUpdateListeners();\n    return wrapperNode;\n  }\n\n  public deleteNode(nodeId: string, withHierarchy: boolean) {\n    const doomedNode = this.getNode(nodeId);\n    const doomedNodeParent = this.getNodeParent(nodeId);\n    this.replaceOrEmsiblingNode(doomedNodeParent, doomedNode, (withHierarchy ? [] : doomedNode.children), true);\n    this.updateNodeCache();\n    this.invokeTreeUpdateListeners();\n  }\n\n  public addSiblingNode(nodeId: string, module: string) {\n    const newNode = configure(module, {});\n    const node = this.getNode(nodeId);\n    const nodeParent = this.getNodeParent(nodeId);\n    this.replaceOrEmsiblingNode(nodeParent, node, [newNode], false);\n    this.updateNodeCache();\n    this.invokeTreeUpdateListeners();\n  }\n\n  moveNode(sourceNodeId: string, newParentNodeId: string | null) {\n    if (sourceNodeId === newParentNodeId) {\n      return false;\n    }\n    const sourceNode = this.getNode(sourceNodeId);\n    const sourceNodeParent = this.getNodeParent(sourceNodeId);\n    // Remove from parent...\n    this.replaceOrEmsiblingNode(sourceNodeParent, sourceNode, [], true);\n    // Add to new parent.\n    this.addChildInternal(newParentNodeId, sourceNode);\n    this.updateNodeCache();\n    this.invokeTreeUpdateListeners();\n    return true;\n  }\n\n  copyNode(sourceNodeId: string, targetNodeId: string | null) {\n    const copiedNode = duplicate(this.getNode(sourceNodeId));\n    this.addChildInternal(targetNodeId, copiedNode);\n    this.updateNodeCache();\n    this.invokeTreeUpdateListeners();\n    return true;\n  }\n}\n","import * as React from 'react';\nimport Dropdown, {DropdownContent, DropdownTrigger} from 'react-simple-dropdown';\nimport {NodeConfig} from '../NodeConfig';\nimport registry from '../modules/registry';\nimport {TreeManager} from '../managers/TreeManager';\n\ntype ToolbarProps = {\n  treeManager: TreeManager,\n  selectedNode: NodeConfig | null,\n};\n\nfunction nodeAcceptsChildren(node: NodeConfig | null) {\n  return (node && registry[node.module] && registry[node.module].acceptsChildren);\n}\n\nexport default class TreeToolbar extends React.Component<ToolbarProps, any> {\n  private dropdowns: { [key: string]: Dropdown } = {};\n\n  private handleAddNode(method: 'wrap' | 'child' | 'sibling', module: string) {\n    const {treeManager, selectedNode} = this.props;\n    switch (method) {\n      case 'child':\n        treeManager.addChildNode((selectedNode ? selectedNode.id : null), module);\n        break;\n      case 'sibling':\n        treeManager.addSiblingNode(selectedNode!.id, module);\n        break;\n      case 'wrap':\n        treeManager.wrapNode(selectedNode!.id, module);\n    }\n    this.hideDropdowns();\n  }\n\n  private handleDeleteNode(withHierarchy: boolean) {\n    const {treeManager, selectedNode} = this.props;\n    treeManager.deleteNode(selectedNode!.id, withHierarchy);\n  }\n\n  hideDropdowns() {\n    Object.values(this.dropdowns).forEach((dropdown) => {\n      return dropdown.hide();\n    });\n  }\n\n  render() {\n    const {selectedNode} = this.props;\n    let childMode: string | null = null;\n    let childText: string = 'Node';\n    let allowAddSibling = false;\n    if (selectedNode === null) {\n      childMode = 'child';\n      childText = 'Node';\n    }\n    if (nodeAcceptsChildren(selectedNode)) {\n      childMode = 'child';\n      childText = 'Child';\n    }\n    if (selectedNode) {\n      const parent = this.props.treeManager.getNodeParentOrNull(selectedNode.id);\n      if (parent === null || nodeAcceptsChildren(parent)) {\n        allowAddSibling = true;\n      }\n    }\n    return (\n      <div id=\"tree-toolbar\" className=\"toolbar\">\n        <Dropdown\n          disabled={!selectedNode}\n          ref={(instance) => {\n            this.dropdowns.wrap = instance;\n          }}\n        >\n          <DropdownTrigger className=\"btn\">Wrap...</DropdownTrigger>\n          <DropdownContent className=\"node-select\">\n            {Object.keys(registry).filter((module) => registry[module].acceptsChildren).map((module) => (\n              <a href=\"#\" key={module} onClick={() => this.handleAddNode('wrap', module)}>{module}</a>\n            ))}\n          </DropdownContent>\n        </Dropdown>\n        <Dropdown\n          disabled={!childMode}\n          ref={(instance) => {\n            this.dropdowns.addChild = instance;\n          }}\n        >\n          <DropdownTrigger className=\"btn\">Add {childText}...</DropdownTrigger>\n          <DropdownContent className=\"node-select\">\n            {Object.keys(registry).map((module) => (\n              <a href=\"#\" key={module} onClick={() => this.handleAddNode('child', module)}>{module}</a>\n            ))}\n          </DropdownContent>\n        </Dropdown>\n        <Dropdown\n          disabled={!allowAddSibling}\n          ref={(instance) => {\n            this.dropdowns.addSibling = instance;\n          }}\n        >\n          <DropdownTrigger className=\"btn\">Add Sibling...</DropdownTrigger>\n          <DropdownContent className=\"node-select\">\n            {Object.keys(registry).map((module) => (\n              <a href=\"#\" key={module} onClick={() => this.handleAddNode('sibling', module)}>{module}</a>\n            ))}\n          </DropdownContent>\n        </Dropdown>\n        <div\n          className={'btn ' + (selectedNode ? '' : 'disabled')}\n          title=\"Shift-click to delete with hierarchy\"\n          onClick={(event) => {\n            this.handleDeleteNode(event.shiftKey);\n            event.preventDefault();\n          }}\n        >\n          Delete\n        </div>\n      </div>\n    );\n  }\n\n}\n","import {VariableMap} from \"./types\";\n\nexport type NamespaceFn = () => VariableMap;\n\nconst expressionFnCache = {};\n\nexport function evaluateExpression(expression: string, namespace: NamespaceFn): any {\n  if (expression.startsWith('=')) {\n    const exprFun = (\n      expression in expressionFnCache ?\n        expressionFnCache[expression] :\n        expressionFnCache[expression] = new Function('namespace', `with(namespace) { return ${expression.slice(1)}}`)\n    );\n    return exprFun(namespace());\n  }\n  if (/[+-][0-9.]+/.test(expression)) {\n    return parseFloat(expression);\n  }\n  return `${expression}`;\n}\n","function hashString(string: String) {\n  let seed = 0;\n  for (var i = 0; i < string.length; i++) {\n    seed ^= (i % 16) << string.charCodeAt(i);\n  }\n  return seed;\n}\n\n// Based on https://gist.github.com/blixt/f17b47c62508be59987b\n// which is based on http://www.firstpr.com.au/dsp/rand31/\n\n\nexport type RandomGenerator = () => number;\n\nexport default function createRandomGenerator(seedString?: string): RandomGenerator {\n  let seed = (seedString ? hashString(seedString) : (Math.random() * 2147483647));\n\n  const next = () => {\n    return seed = seed * 16807 % 2147483647;\n  };\n\n  return function nextFloat() {\n    return (next() - 1) / 2147483646;\n  };\n}\n","import Status from \"./Status\";\nimport {NodeConfig} from \"./NodeConfig\";\nimport {ExpressionMap, VariableMap} from \"./types\";\nimport {default as createRandomGenerator, RandomGenerator} from \"./RandomGenerator\";\nimport {evaluateExpression, NamespaceFn} from \"./evaluator\";\nimport {renderNodesInto} from \"./render\";\n\n\nfunction _evaluate(\n  status: Status,\n  node: NodeConfig,\n  tag: string,\n  expression: string,\n  namespace: NamespaceFn,\n  errorDefault: any = null,\n): any {\n  try {\n    return evaluateExpression(expression, namespace);\n  } catch (err) {\n    status.addError(node.id, `${tag}: ${err}`);\n    console.warn(err);\n    return errorDefault;\n  }\n}\n\nfunction memoizeOnFirstInvocation<T>(creator: () => T): () => T {\n  let t: T | undefined;\n  return () => {\n    if (t === undefined) {\n      t = creator();\n    }\n    return t;\n  };\n}\n\n\nexport default class Context {\n  private rng?: RandomGenerator;\n  private defaultNamespace: NamespaceFn;\n\n  constructor(\n    readonly status: Status,\n    readonly node: NodeConfig,\n    readonly parent: Context | null = null,\n    readonly variables: VariableMap = {},\n    readonly idPrefix: string = '',\n  ) {\n    this.defaultNamespace = this.prepareNamespace();\n  }\n\n  subcontext(\n    forNode: NodeConfig,\n    newVariables: VariableMap = {},\n    idPrefix: String = '',\n  ): Context {\n    const mergedVariables = Object.assign({}, this.variables, newVariables);\n    return new Context(\n      this.status,\n      forNode,\n      this,\n      mergedVariables,\n      `${this.idPrefix}.${idPrefix}`,\n    );\n  }\n\n  random(min?: number, max?: number) {\n    if (!this.rng) {\n      const seed = this.evaluateFromNodeConfig('seed');\n      this.rng = createRandomGenerator(seed);\n    }\n    const val = this.rng();\n    if (min !== undefined) {\n      if (max === undefined) {\n        return val * min;\n      }\n      return min + val * (max - min);\n    }\n    return val;\n  }\n\n  prepareNamespace(additionalVariables?: VariableMap): NamespaceFn {\n    return memoizeOnFirstInvocation(() => ({\n      rand: this.random.bind(this),\n      ...this.variables,\n      ...additionalVariables,\n    }));\n  }\n\n  evaluateFromNodeConfig(key: string): any {\n    const expression = this.node.config[key]!;\n    if (expression === undefined) return null;\n    return _evaluate(this.status, this.node, key, expression, this.defaultNamespace);\n  }\n\n  evaluate(tag: string, expression: string, additionalVariables?: VariableMap): any {\n    const namespace = this.prepareNamespace(additionalVariables);\n    return _evaluate(this.status, this.node, tag, expression, namespace);\n  }\n\n  evaluateAll(\n    node: NodeConfig,\n    expressionMap: ExpressionMap,\n    additionalVariables?: VariableMap,\n  ): VariableMap {\n    const evaluated = {};\n    const namespace = this.prepareNamespace(additionalVariables);\n    for (let tag in expressionMap) {\n      const expression = expressionMap[tag];\n      if (expression !== null) {\n        evaluated[tag] = _evaluate(this.status, this.node, tag, expression, namespace);\n      }\n    }\n    return evaluated;\n  }\n\n  evaluateNodeConfig(node: NodeConfig = this.node): VariableMap {\n    return this.evaluateAll(node, node.config);\n  }\n\n  getId(suffix: string = this.node.id) {\n    return this.idPrefix + suffix;\n  }\n\n  renderChildren(context: Context = this) {\n    const nodes: Array<Element> = [];\n    renderNodesInto(nodes, this.node.children, context);\n    return nodes;\n  }\n}\n","import * as React from 'react';\nimport {NodeConfig} from '../NodeConfig';\nimport registry from '../modules/registry';\nimport Module, {UniversalVariables} from '../modules/Module';\nimport VariableDefinition from '../modules/VariableDefinition';\nimport Status from '../Status';\nimport {groupBy} from 'lodash';\nimport {ChangeNodeConfigHandler} from '../types';\n\ntype NodeConfigViewProps = {\n  nodeConfig: NodeConfig,\n  onChange: ChangeNodeConfigHandler,\n  status: Status,\n};\n\ntype VariableConfigRowProps = {\n  variable: VariableDefinition,\n  nodeConfig: NodeConfig,\n  onChange: ChangeNodeConfigHandler,\n  status: Status,\n};\n\nconst VariableConfigRow = ({variable, nodeConfig, onChange, status}: VariableConfigRowProps) => {\n  let extraControls: React.ReactElement<any> | null = null;\n  let input: React.ReactElement<any> | null = null;\n\n  const handleChange = ((event) => onChange(\n    nodeConfig,\n    variable.name,\n    event.target.value.toString(),\n  ));\n  if (variable.choices) {\n    input = (\n      <select\n        value={nodeConfig.config[variable.name] || ''}\n        onChange={handleChange}\n      >\n        {variable.choices.map((c) => <option key={c} value={c}>{c}</option>)}\n      </select>\n    );\n  } else {\n    input = (\n      <input\n        type=\"text\"\n        value={nodeConfig.config[variable.name] || ''}\n        onChange={handleChange}\n      />\n    );\n  }\n  if (variable.type === 'color') {\n    extraControls = (\n      <input type=\"color\" value={nodeConfig.config[variable.name] || ''} onChange={handleChange} />\n    );\n  }\n\n  return (\n    <tr className=\"variable-config-row\">\n      <th>\n        {variable.name}\n      </th>\n      <td>\n        {input}\n      </td>\n      <td>\n        {extraControls}\n      </td>\n    </tr>\n  );\n};\n\nexport default class NodeConfigView extends React.Component<NodeConfigViewProps, any> {\n  render() {\n    const {nodeConfig, status} = this.props;\n    const moduleClass: Module = registry[nodeConfig.module];\n    const variableDefinitions = moduleClass.variables.concat(UniversalVariables);\n    const variablesByGroup = groupBy(variableDefinitions, (v) => (v.group || 'Other'));\n\n    return (\n      <div>\n        <table>\n          <tbody>\n            {Object.keys(variablesByGroup).sort().map((group) => <React.Fragment key={group}>\n                <tr key={`#${group}`} className=\"group-separator\">\n                  <th colSpan={3}>{group}</th>\n                </tr>\n                {variablesByGroup[group].map((variable: VariableDefinition) => (\n                  <VariableConfigRow\n                    key={variable.name}\n                    variable={variable}\n                    nodeConfig={nodeConfig}\n                    status={status}\n                    onChange={this.props.onChange}\n                  />\n                ))}\n              </React.Fragment>,\n            )}\n          </tbody>\n        </table>\n        <div className=\"debug\">\n          Variables last render: {status.getVariablesForNode(nodeConfig.id).join(', ')}\n        </div>\n        <ul className=\"errors\">\n          {status.getErrorsForNode(nodeConfig.id).map((err, i) => <li key={i}>{err}</li>)}\n        </ul>\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport {NodeConfig} from '../NodeConfig';\nimport registry from '../modules/registry';\n\ntype TreeCommonProps = {\n  selectedNode: NodeConfig | null,\n  onSelectNode: (node: NodeConfig | null) => void,\n  onRepositionNode: (sourceNodeId: string, targetNodeId: string, copy: boolean) => void,\n};\n\ntype TreeNodeProps = TreeCommonProps & {\n  nodeConfig: NodeConfig,\n};\n\ntype TreeLevelProps = TreeCommonProps & {\n  nodeConfigs: ReadonlyArray<NodeConfig>,\n};\n\nconst DRAG_AND_DROP_DATA_ID = 'application/x-coil-nodeid';\n\nconst TreeNode = ({nodeConfig, selectedNode, onSelectNode, onRepositionNode}: TreeNodeProps) => (\n  <li className={selectedNode === nodeConfig ? 'selected' : ''}>\n    <a\n      href=\"#\"\n      draggable={true}\n      onClick={(e) => {\n        onSelectNode(nodeConfig);\n        e.preventDefault();\n        e.stopPropagation();\n      }}\n      onDragStart={(event) => {\n        event.dataTransfer.clearData();\n        event.dataTransfer.setData(DRAG_AND_DROP_DATA_ID, nodeConfig.id);\n        event.dataTransfer.effectAllowed = 'all';\n      }}\n      onDragOver={(event) => {\n        event.dataTransfer.dropEffect = 'none';\n        if (event.dataTransfer.types.indexOf(DRAG_AND_DROP_DATA_ID) > -1) {\n          if (registry[nodeConfig.module].acceptsChildren) {\n            event.dataTransfer.dropEffect = (event.altKey ? 'copy' : 'link');\n            event.preventDefault();\n          }\n        }\n      }}\n      onDrop={(event) => {\n        const sourceNodeId = event.dataTransfer.getData(DRAG_AND_DROP_DATA_ID);\n        event.dataTransfer.dropEffect = (event.altKey ? 'copy' : 'link');\n        const copy = (event.dataTransfer.dropEffect === 'copy');\n        onRepositionNode(sourceNodeId, nodeConfig.id, copy);\n      }}\n    >\n      {nodeConfig.module}\n    </a>\n    {nodeConfig.children.length ?\n      <TreeLevel\n        nodeConfigs={nodeConfig.children}\n        selectedNode={selectedNode}\n        onSelectNode={onSelectNode}\n        onRepositionNode={onRepositionNode}\n      />\n      : null\n    }\n  </li>\n);\n\nconst TreeLevel = ({nodeConfigs, selectedNode, onSelectNode, onRepositionNode}: TreeLevelProps) => (\n  <ul>\n    {nodeConfigs.map((nodeConfig: NodeConfig) => (\n      <TreeNode\n        key={nodeConfig.id}\n        nodeConfig={nodeConfig}\n        selectedNode={selectedNode}\n        onSelectNode={onSelectNode}\n        onRepositionNode={onRepositionNode}\n      />\n    ))}\n  </ul>\n);\n\nexport default ({nodeConfigs, selectedNode, onSelectNode, onRepositionNode}: TreeLevelProps) => {\n  return (\n    <div\n      id=\"tree\"\n      onClick={(e) => {\n        if (e.currentTarget.id === 'tree') {\n          onSelectNode(null);\n        }\n      }}\n    >\n      <TreeLevel\n        nodeConfigs={nodeConfigs}\n        selectedNode={selectedNode}\n        onSelectNode={onSelectNode}\n        onRepositionNode={onRepositionNode}\n      />\n    </div>\n  );\n};\n","import * as React from 'react';\nimport Module from '../Module';\nimport Context from '../../Context';\nimport TransformVariables from '../TransformVariables';\nimport {toSVG} from 'transformation-matrix';\nimport {splitMatrixAndProps} from '../MatrixUtils';\n\nexport default {\n  acceptsChildren: true,\n  variables: TransformVariables.concat([\n    {name: 'opacity', default: '1'},\n  ]),\n\n  render(context: Context) {\n    const nodes = context.renderChildren();\n    const {props, matrix} = splitMatrixAndProps(context.evaluateNodeConfig());\n    const {opacity} = props;\n    return [<g transform={toSVG(matrix)} opacity={opacity}>{nodes}</g>];\n  },\n} as Module;\n","import * as React from 'react';\nimport Module from '../Module';\nimport Context from '../../Context';\nimport {renderNodesInto} from '../../render';\n\nexport default {\n  acceptsChildren: true,\n  variables: [\n    {name: 'keep', default: '=rand() < .5'},\n    {name: 'indexVariable', default: 'i'},\n  ],\n\n  render(context: Context) {\n    const node = context.node;\n    const indexVariable = context.evaluateFromNodeConfig('indexVariable');\n    const nodes = [];\n    renderNodesInto(nodes, node.children, context);\n    const filterContext = context.subcontext(node);\n    const keepExpression = node.config.keep!;\n    return nodes.filter((child, index) => (\n      filterContext.evaluate(`keep ${index}`, keepExpression, {[indexVariable]: index})\n    ));\n  },\n} as Module;\n","import * as React from 'react';\nimport Module from '../Module';\nimport Context from '../../Context';\nimport {renderNodesInto} from '../../render';\n\nconst THREE_OVER_TWO = (3 / 2);\nconst SQRT_THREE = Math.sqrt(3);\nconst SQRT_THREE_OVER_TWO = SQRT_THREE / 2;\n\nexport default {\n  acceptsChildren: true,\n  variables: [\n    {name: 'numberX', default: '5'},\n    {name: 'numberY', default: '5'},\n    {name: 'variableX', default: 'vx'},\n    {name: 'variableY', default: 'vy'},\n    {\n      name: 'hex',\n      default: 'none',\n      choices: [\n        'none',\n        'flat',\n        'pointy',\n      ],\n    }\n  ],\n\n  render(context: Context) {\n    const {node} = context;\n    // tslint:disable-next-line:prefer-const\n    let {numberX, numberY, variableX, variableY, hex} = context.evaluateNodeConfig(node);\n    const nodes = [];\n\n    numberX = Math.round(parseFloat(numberX));\n    numberY = Math.round(parseFloat(numberY));\n    for (let y = 0; y < numberY; y++) {\n      for (let x = 0; x < numberX; x++) {\n        const newVariables = {\n          [variableX]: x,\n          [variableY]: y,\n          [`${variableX}F`]: x / (numberX - 1),\n          [`${variableY}F`]: y / (numberY - 1),\n        };\n        if (hex === 'flat') {\n          newVariables[`${variableX}Hex`] = THREE_OVER_TWO * x;\n          newVariables[`${variableY}Hex`] = SQRT_THREE_OVER_TWO * x + SQRT_THREE * y;\n        } else if (hex === 'pointy') {\n          newVariables[`${variableX}Hex`] = SQRT_THREE * x + SQRT_THREE_OVER_TWO * y;\n          newVariables[`${variableY}Hex`] = THREE_OVER_TWO * y;\n        }\n        const subcontext = context.subcontext(node, newVariables, `${x}x${y}`);\n        renderNodesInto(nodes, node.children, subcontext);\n      }\n    }\n    return nodes;\n  },\n} as Module;\n","import * as React from 'react';\nimport Module from '../Module';\nimport Context from '../../Context';\nimport {toSVG} from 'transformation-matrix';\nimport TransformVariables from '../TransformVariables';\nimport {splitMatrixAndProps} from '../MatrixUtils';\nimport PresentationVariables from '../PresentationVariables';\n\nexport default {\n  variables: TransformVariables.concat(PresentationVariables).concat([\n    {name: 'width', default: '20'},\n    {name: 'height', default: '20'},\n  ]),\n\n  render(context: Context) {\n    const {node} = context;\n    const {props, matrix} = splitMatrixAndProps(context.evaluateNodeConfig(node));\n    return [\n      <rect\n        x={-props.width / 2}\n        y={-props.height / 2}\n        transform={toSVG(matrix)}\n        key={context.getId()}\n        {...props}\n      />,\n    ];\n  },\n} as Module;\n","export default function dumbMemoize<T>(fn: (...args) => T): (...args) => T {\n  const memo: { [args: string]: T } = {};\n  const memoizedFn = (...args) => {\n    const argsStr = args.join('\\x01');\n    if (argsStr in memo) return memo[argsStr];\n    return memo[argsStr] = fn(...args);\n  };\n  (memoizedFn as any).memo = memo;\n  return memoizedFn;\n}\n","import * as React from 'react';\nimport Context from '../../Context';\nimport TransformVariables from '../TransformVariables';\nimport {splitMatrixAndProps} from '../MatrixUtils';\nimport PresentationVariables from '../PresentationVariables';\nimport Module from '../Module';\nimport {toSVG} from 'transformation-matrix';\nimport dumbMemoize from '../../dumbMemoize';\n\nconst TWO_PI = Math.PI * 2;\n\nconst generatePathString = dumbMemoize(\n  (vertices, radius1, radius2, tilt1, tilt2) => {\n    const path: string[] = [];\n    radius1 = parseFloat(radius1);\n    radius2 = parseFloat(radius2);\n    tilt1 = parseFloat(tilt1);\n    tilt2 = parseFloat(tilt2);\n    for (let i = 0; i < vertices; i++) {\n      const f = i / vertices;\n      const radius = (i % 2 === 0 ? radius1 : radius2);\n      const angle = (f + (i % 2 === 0 ? tilt1 : tilt2)) * TWO_PI;\n      const x = Math.cos(angle) * radius;\n      const y = Math.sin(angle) * radius;\n      if (!(isNaN(x) || isNaN(y))) {\n        path.push(`${i === 0 ? 'M' : 'L'}${x.toFixed(3)},${y.toFixed(3)}`);\n      }\n    }\n    if (path.length > 0) {\n      path.push('z');\n    }\n    return path.join(' ');\n  },\n);\n\nexport default {\n  variables: TransformVariables.concat(PresentationVariables).concat([\n    {name: 'vertices', default: '5'},\n    {name: 'radius1', default: '5'},\n    {name: 'radius2', default: '5'},\n    {name: 'tilt1', default: '0'},\n    {name: 'tilt2', default: '0'},\n  ]),\n\n  render(context: Context) {\n    const {node} = context;\n    const {props, matrix} = splitMatrixAndProps(context.evaluateNodeConfig(node));\n    const path = generatePathString(props.vertices, props.radius1, props.radius2, props.tilt1, props.tilt2);\n\n    delete props.vertices;\n    delete props.radius1;\n    delete props.radius2;\n    delete props.tilt1;\n    delete props.tilt2;\n    return [<path\n      d={path}\n      {...props}\n      key={context.getId(node.id)}\n      transform={toSVG(matrix)}\n    />];\n  },\n} as Module;\n","import * as React from 'react';\nimport Module from '../Module';\nimport Context from '../../Context';\nimport {renderNodesInto} from '../../render';\n\nexport default {\n  acceptsChildren: true,\n  variables: [\n    {name: 'number', default: '5'},\n    {name: 'variable', default: 'i'},\n  ],\n\n  render(context: Context) {\n    // tslint:disable-next-line:variable-name\n    const {number, variable} = context.evaluateNodeConfig();\n    const nodes = [];\n    const nNumber = Math.round(parseFloat(number));\n    const node = context.node;\n    for (let i = 0; i < nNumber; i++) {\n      const subcontext = context.subcontext(node, {\n        [variable]: i,\n        [`${variable}F`]: i / (nNumber - 1),\n      }, `${i}`);\n      renderNodesInto(nodes, node.children, subcontext);\n    }\n    return nodes;\n  },\n} as Module;\n","import * as React from 'react';\nimport Module from '../Module';\nimport Context from '../../Context';\nimport {toSVG} from 'transformation-matrix';\nimport TransformVariables from '../TransformVariables';\nimport {splitMatrixAndProps} from '../MatrixUtils';\n\nexport default {\n  variables: TransformVariables.concat([\n    {name: 'radiusX', default: '20'},\n    {name: 'radiusY', default: '20'},\n    {name: 'fill', default: '#333'},\n    {name: 'opacity', default: '1'},\n  ]),\n\n  render(context: Context) {\n    const {props, matrix} = splitMatrixAndProps(context.evaluateNodeConfig());\n    const {radiusX, radiusY, fill, opacity} = props;\n    return [\n      <ellipse\n        cx={0}\n        cy={0}\n        rx={radiusX}\n        ry={radiusY}\n        fill={fill}\n        opacity={opacity}\n        transform={toSVG(matrix)}\n        key={context.getId()}\n      />,\n    ];\n  },\n} as Module;\n","import * as React from 'react';\nimport Module from '../Module';\nimport Context from '../../Context';\nimport { renderNodesInto } from '../../render';\n\nexport default {\n  acceptsChildren: true,\n  variables: [\n    { name: 'childIndex', default: '0' },\n    { name: 'indexVariable', default: 'u' },\n  ],\n\n  render(context: Context) {\n    const { node } = context;\n    const { childIndex, indexVariable } = context.evaluateNodeConfig(node);\n    const index = parseInt(childIndex, 10);\n    const child = node.children[index % node.children.length];\n    const nodes = [];\n    if (child) {\n      const subcontext = context.subcontext(\n        node,\n        {\n          [indexVariable]: childIndex,\n        },\n        `child${childIndex}`,\n      );\n      renderNodesInto(nodes, [child], subcontext);\n    }\n    return nodes;\n  },\n} as Module;\n","import * as React from 'react';\nimport {configure, NodeConfig} from \"./NodeConfig\";\nimport NodeTree from \"./components/NodeTree\";\nimport NodeConfigView from \"./components/NodeConfigView\";\nimport Context from './Context';\nimport TreeToolbar from './components/TreeToolbar';\nimport {TreeManager} from \"./managers/TreeManager\";\nimport Status from \"./Status\";\nimport GlobalToolbar from \"./components/GlobalToolbar\";\n\nconst DEFAULT_NODE_CONFIGS: NodeConfig[] = [\n  configure(\n    'RemoveChildren',\n    {\n      'seed': 'foo',\n    },\n    [\n      configure(\n        'RectArray',\n        {\n          numberX: '7',\n          numberY: '7',\n          variableX: 'i',\n          variableY: 'j',\n        },\n        [\n          configure('Ngon', {\n            radius1: '15',\n            radius2: '5',\n            vertices: '10',\n            x: '=15 + i * 30',\n            y: '=30 + j * 30',\n            fill: 'blue',\n          }),\n        ]),\n    ]),\n];\n\ntype AppState = {\n  selectedNodeId: string | null,\n  rendered: any,\n  status: Status,\n  activeTab: string,\n};\n\nexport default class App extends React.Component<any, AppState> {\n\n  private treeManager: TreeManager = new TreeManager();\n\n  state = {\n    selectedNodeId: null,\n    rendered: null,\n    status: new Status(),\n    activeTab: 'tree',\n  };\n\n  componentDidMount() {\n    this.treeManager.addTreeUpdateListener((tree) => {\n      this.renderDrawing(tree);\n    });\n    this.treeManager.replaceTree(DEFAULT_NODE_CONFIGS);\n  }\n\n  onSelectNode = (nodeConfig: NodeConfig | null): void => {\n    this.setState({\n      selectedNodeId: (nodeConfig ? nodeConfig.id : null),\n    });\n  };\n\n  onChangeNodeVariable = (nodeConfig: NodeConfig, variableName: string, newValue: string) => {\n    this.treeManager.changeNodeVariable(nodeConfig.id, variableName, newValue);\n    this.forceUpdate();  // Avoid asynchronous input caret position problem :(\n  };\n\n  onRepositionNode = (sourceNodeId: string, targetNodeId: string, copy: boolean) => {\n    if (copy) {\n      this.treeManager.copyNode(sourceNodeId, targetNodeId);\n    } else {\n      this.treeManager.moveNode(sourceNodeId, targetNodeId);\n    }\n  };\n\n  renderDrawing(tree: NodeConfig[]) {\n    const status = new Status();\n    const rootPseudoNode = {id: 'root', module: 'root', config: {}, children: tree};\n    const context = new Context(status, rootPseudoNode);\n    const rendered = context.renderChildren();\n    this.setState({rendered, status});\n  }\n\n  onChangeTab = (tabId) => {\n    this.setState({activeTab: tabId});\n  };\n\n  render() {\n    const {selectedNodeId, rendered, status, activeTab} = this.state;\n    const {treeManager} = this;\n    const selectedNodeConfig = treeManager.getNodeOrNull(selectedNodeId!);\n    let configContent: React.ReactElement<any> | null = null;\n    switch (activeTab) {\n      case 'tree':\n        configContent = (\n          <>\n            <div id=\"hierarchy\">\n              <TreeToolbar treeManager={treeManager} selectedNode={selectedNodeConfig} />\n              <NodeTree\n                nodeConfigs={treeManager.getTree()}\n                selectedNode={selectedNodeConfig}\n                onSelectNode={this.onSelectNode}\n                onRepositionNode={this.onRepositionNode}\n              />\n            </div>\n            <div id=\"props\">\n              {selectedNodeConfig ?\n                <NodeConfigView\n                  nodeConfig={selectedNodeConfig!}\n                  status={status}\n                  onChange={this.onChangeNodeVariable}\n                />\n                : null\n              }\n            </div>\n          </>\n        );\n    }\n    return (\n      <>\n        <div id=\"config\">\n          <GlobalToolbar activeTab={activeTab} onChangeTab={this.onChangeTab} />\n          {configContent}\n        </div>\n        <div id=\"drawing\">\n          <svg width={800} height={800}>\n            {rendered}\n          </svg>\n        </div>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\nimport './style.scss';\n\nconst wrapper = document.createElement('div');\nwrapper.id = 'wrapper';\ndocument.body.appendChild(wrapper);\n\nReactDOM.render(<App />, wrapper);\n"],"sourceRoot":""}