{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/universe/render.tsx","webpack:///./src/modules/registry.ts","webpack:///./src/modules/MatrixUtils.ts","webpack:///./src/modules/TransformVariables.ts","webpack:///./src/modules/PresentationVariables.ts","webpack:///./src/components/GenericVariableConfigRow.tsx","webpack:///./src/utils/serde.ts","webpack:///./src/modules/Module.tsx","webpack:///./src/universe/configure.tsx","webpack:///./src/utils/arrays.ts","webpack:///./src/sidebar-panels/GVarsPanel.tsx","webpack:///./src/utils/storage.ts","webpack:///./src/utils/defaultConfig.ts","webpack:///./src/universe/Status.tsx","webpack:///./src/utils/RandomGenerator.ts","webpack:///./src/utils/evaluator.ts","webpack:///./src/universe/Context.tsx","webpack:///./src/components/QuickGVarBar.tsx","webpack:///./src/modules/pseudo/Document.tsx","webpack:///./src/components/TreeToolbar.tsx","webpack:///./src/components/NodeTree.tsx","webpack:///./src/components/NodeConfigView.tsx","webpack:///./src/sidebar-panels/TreePanel.tsx","webpack:///./src/sidebar-panels/FilePanel.tsx","webpack:///./src/modules/prim/Rect.tsx","webpack:///./src/utils/dumbMemoize.ts","webpack:///./src/modules/prim/Ngon.tsx","webpack:///./src/modules/SVGUtils.ts","webpack:///./src/modules/prim/Ellipse.tsx","webpack:///./src/modules/modify/Xform.tsx","webpack:///./src/modules/modify/RemoveChildren.tsx","webpack:///./src/modules/modify/Choose.tsx","webpack:///./src/modules/array/RectArray.tsx","webpack:///./src/modules/array/LinearArray.tsx","webpack:///./src/managers/TreeManager.tsx","webpack:///./src/components/Icon.tsx","webpack:///./src/components/GlobalToolbar.tsx","webpack:///./src/views/App.tsx","webpack:///./src/index.tsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","registry_1","renderNode","context","nodeConfig","default","Error","status","addVariables","id","variables","render","subcontext","e","console","error","renderNodesInto","targetArray","nodes","renderedElts","LinearArray_1","RectArray_1","Choose_1","RemoveChildren_1","Xform_1","Ellipse_1","Ngon_1","Rect_1","registry","Choose","Ellipse","LinearArray","Ngon","Rect","RectArray","RemoveChildren","Xform","keys","forEach","displayName","transformation_matrix_1","multiply","m1","m2","a","b","f","makeMatrix","_a","x","y","sx","sy","matrix","translate","isFinite","rotateDEG","scale","splitMatrixAndProps","props","newProps","assign","group","type","React","choices","onChange","extraControls","input","undefined","handleChange","event","target","toString","createElement","map","className","version","documentDefaults","width","height","background","gvars","serialize","document","docWithNodes","__assign","deserialize","obj","Array","isArray","from","doc","getVariableDefaults","defaults","v","UniversalVariables","lodash_1","Module_1","generateId","Math","floor","random","duplicate","walk","wConfig","config","cloneDeep","children","configure","moduleName","removeInPlace","array","index","indexOf","GenericVariableConfigRow_1","GVarPanel","gvar","onModifyGvar","onDeleteGvar","style","display","title","onClick","flex","Fragment","min","parseFloat","max","onAddGvar","preventDefault","load","rawValue","localStorage","getItem","JSON","parse","save","setItem","stringify","removeItem","configure_1","seed","numberX","numberY","variableX","variableY","radius1","radius2","vertices","fill","Status","this","nodeErrors","nodeVariables","addError","nodeId","getErrorsForNode","getVariablesForNode","Set","add","sort","seedString","charCodeAt","hashString","expressionFnCache","evaluateExpression","expression","namespace","startsWith","Function","test","evaluator_1","RandomGenerator_1","render_1","_evaluate","node","tag","errorDefault","err","warn","Context","parent","idPrefix","defaultNamespace","prepareNamespace","forNode","newVariables","mergedVariables","rng","evaluateFromNodeConfig","val","additionalVariables","_this","creator","memoizeOnFirstInvocation","rand","evaluate","evaluateAll","expressionMap","evaluated","evaluateNodeConfig","getId","suffix","renderChildren","QuickGVar","valueAsNumber","acceptsChildren","noUniversalVariables","react_simple_dropdown_1","nodeAcceptsChildren","TreeToolbar","_super","arguments","dropdowns","__extends","handleAddNode","method","treeManager","selectedNode","addChildNode","addSiblingNode","wrapNode","hideDropdowns","handleDeleteNode","withHierarchy","deleteNode","values","dropdown","hide","childMode","childText","allowAddSibling","getNodeParentOrNull","disabled","ref","instance","wrap","DropdownTrigger","DropdownContent","filter","href","addChild","addSibling","shiftKey","Component","TreeNode","onSelectNode","onRepositionNode","draggable","stopPropagation","onDragStart","dataTransfer","clearData","setData","effectAllowed","onDragOver","dropEffect","types","altKey","onDrop","sourceNodeId","getData","copy","TreeLevel","nodeConfigs","currentTarget","VariableConfigRow","variable","NodeConfigView","moduleClass","forceModule","variableDefinitions","concat","variablesByGroup","groupBy","variablesForNode","colSpan","join","NodeConfigView_1","NodeTree_1","TreeToolbar_1","Document_1","QuickGVarBar_1","TreePanel","onChangeNodeVariable","variableName","newValue","changeNodeVariable","forceUpdate","onChangeDocumentVariable","replace","targetNodeId","copyNode","moveNode","selectedNodeId","onChangeGvarValue","selectedNodeConfig","getNodeOrNull","getTree","ReactDOMServer","serde_1","FilePanel","state","serializedState","dumpState","setState","loadState","stateJson","alert","onLoadDocument","saveSVG","svgString","renderToStaticMarkup","rendered","blob","Blob","url","URL","createObjectURL","downloadLink","download","Date","body","appendChild","click","setTimeout","parentNode","removeChild","revokeObjectURL","TransformVariables_1","MatrixUtils_1","PresentationVariables_1","transform","toSVG","fn","memo","memoizedFn","args","_i","argsStr","__spread","dumbMemoize_1","TWO_PI","PI","generatePathString","tilt1","tilt2","path","radius","angle","cos","sin","isNaN","toFixed","cleanPresentationProps","stroke","SVGUtils_1","radiusX","radiusY","cx","cy","rx","ry","opacity","indexVariable","filterContext","keepExpression","keep","child","_b","childIndex","parseInt","THREE_OVER_TWO","SQRT_THREE","sqrt","SQRT_THREE_OVER_TWO","makeHex","hex","round","_c","__read","hexX","hexY","number","nNumber","TreeManager","tree","nodeCache","treeUpdateListeners","replaceTree","newTree","updateNodeCache","invokeTreeUpdateListeners","newNodeCache","setImmediate","listener","cacheEntry","getNodeCacheEntry","getNode","getNodeParent","check","replaceOrEmsiblingNode","nodeToReplace","newNodes","childList","addTreeUpdateListener","parentNodeId","newNode","addChildInternal","wrappedNode","wrappedNodeParent","wrapperNode","doomedNode","doomedNodeParent","nodeParent","newParentNodeId","sourceNode","sourceNodeParent","copiedNode","xmlns","viewBox","Icon_1","GlobalToolbarIcons","fileTree","tune","GlobalToolbar","tabs","icon","active","activeTab","onChangeTab","GlobalToolbar_1","TreeManager_1","FilePanel_1","TreePanel_1","Context_1","Status_1","defaultConfig_1","storage","GVarsPanel_1","arrays_1","App","loadDocument","tabId","redrawCurrent","String","fromCharCode","some","g","getNextGvarName","includes","numVal","componentDidMount","renderDrawing","saveToStorage","loadFromStorage","storageObj","renderedChildren","rootPseudoNode","configContent","ReactDOM","App_1","wrapper"],"mappings":"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","file":"main.26479b08.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([77,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","// tslint:disable prefer-for-of\nimport Module from '../modules/Module';\nimport registry from '../modules/registry';\nimport {NodeConfig} from '../types';\nimport Context from './Context';\n\nexport function renderNode(context: Context, nodeConfig: NodeConfig) {\n  const module: Module = registry[nodeConfig.module];\n  if (!module) {\n    throw new Error(`not registered ${nodeConfig.module}`);\n  }\n  try {\n    context.status.addVariables(nodeConfig.id, context.variables);\n    return module.render(context.subcontext(nodeConfig, {}, nodeConfig.id));\n  } catch (e) {\n    console.error(e);\n    return [];\n  }\n}\n\nexport function renderNodesInto(targetArray: any[], nodes: NodeConfig[], context: Context) {\n  for (let i = 0; i < nodes.length; i++) {\n    const renderedElts = renderNode(context, nodes[i]);\n    for (let j = 0; j < renderedElts.length; j++) {\n      targetArray.push(renderedElts[j]);\n    }\n  }\n}\n","import LinearArray from './array/LinearArray';\nimport RectArray from './array/RectArray';\nimport Choose from './modify/Choose';\nimport RemoveChildren from './modify/RemoveChildren';\nimport Xform from './modify/Xform';\nimport Module from './Module';\nimport Ellipse from './prim/Ellipse';\nimport Ngon from './prim/Ngon';\nimport Rect from './prim/Rect';\n\nconst registry = {\n  Choose,\n  Ellipse,\n  LinearArray,\n  Ngon,\n  Rect,\n  RectArray,\n  RemoveChildren,\n  Xform,\n} as { [name: string]: Module };\nexport default registry;\n\nObject.keys(registry).forEach((name) => {\n  (registry[name].render as any).displayName = `render_${name}`;\n});\n","import {rotateDEG, scale, translate} from 'transformation-matrix';\nimport {VariableMap} from '../types';\n\nconst multiply = (m1: Matrix, m2: Matrix): Matrix => {\n  return {\n    a: m1.a * m2.a + m1.c * m2.b,\n    b: m1.b * m2.a + m1.d * m2.b,\n    c: m1.a * m2.c + m1.c * m2.d,\n    d: m1.b * m2.c + m1.d * m2.d,\n    e: m1.a * m2.e + m1.c * m2.f + m1.e,\n    f: m1.b * m2.e + m1.d * m2.f + m1.f,\n  };\n};\n\ninterface TransformBag {\n  x: number;\n  y: number;\n  r: number;\n  sx: number;\n  sy: number;\n}\n\nexport function makeMatrix({x, y, r, sx, sy}: TransformBag): Matrix {\n  let matrix = translate(isFinite(x) ? x : 0, isFinite(y) ? y : 0);\n  if (isFinite(r)) {\n    matrix = multiply(matrix, rotateDEG(r));\n  }\n  if (isFinite(sx) && isFinite(sy)) {\n    matrix = multiply(matrix, scale(sx, sy));\n  }\n  return matrix;\n}\n\nexport function splitMatrixAndProps(props: VariableMap): {\n  matrix: Matrix,\n  props: VariableMap,\n} {\n  const matrix = makeMatrix(props as TransformBag);\n  const newProps = Object.assign({}, props);\n  delete newProps.x;\n  delete newProps.y;\n  delete newProps.r;\n  delete newProps.sx;\n  delete newProps.sy;\n  return {matrix, props: newProps};\n}\n","import {VariableDefinition} from '../types';\n\nconst group = 'Transform';\nexport default [\n  {name: 'x', default: '0', group},\n  {name: 'y', default: '0', group},\n  {name: 'r', default: '0', group},\n  {name: 'sx', default: '1', group},\n  {name: 'sy', default: '1', group},\n] as VariableDefinition[];\n","import {VariableDefinition} from '../types';\n\nconst group = 'Presentation';\nexport default [\n  {name: 'fill', default: '#333', group, type: 'color'},\n  {name: 'stroke', default: '', group, type: 'color'},\n  {name: 'strokeWidth', default: '0', group, type: 'number'},\n  {name: 'opacity', default: '1', group, type: 'number'},\n] as VariableDefinition[];\n","import * as React from 'react';\nimport {VariableType} from '../types';\n\ninterface VariableConfigRowProps {\n  name: string;\n  type: VariableType;\n  choices?: string[];\n  value: any;\n  onChange: (value: string) => void;\n}\n\nconst GenericVariableConfigRow = ({name, choices, type, onChange, value}: VariableConfigRowProps) => {\n  let extraControls: React.ReactElement<any> | null = null;\n  let input: React.ReactElement<any> | null = null;\n  value = (value === undefined ? '' : value);\n\n  const handleChange = (event) => onChange(event.target.value.toString());\n\n  if (choices) {\n    input = (\n      <select\n        value={value}\n        onChange={handleChange}\n      >\n        {choices.map((c) => <option key={c} value={c}>{c}</option>)}\n      </select>\n    );\n  } else {\n    input = (\n      <input\n        type=\"text\"\n        value={value}\n        onChange={handleChange}\n      />\n    );\n  }\n  if (type === 'color') {\n    extraControls = (\n      <input type=\"color\" value={value} onChange={handleChange} />\n    );\n  }\n\n  return (\n    <tr className=\"variable-config-row\">\n      <th>\n        {name}\n      </th>\n      <td>\n        {input}\n      </td>\n      <td>\n        {extraControls}\n      </td>\n    </tr>\n  );\n};\n\nexport default GenericVariableConfigRow;\n","import {Document, NodeConfig, SerializedDocument} from '../types';\n\nconst version = '0.1';\n\nconst documentDefaults: Partial<Document> = {\n  width: 800,\n  height: 800,\n  background: '',\n  gvars: [],\n};\n\nexport function serialize(document: Document, nodes: ReadonlyArray<NodeConfig>): SerializedDocument {\n  const docWithNodes: Document = {...document, nodes: nodes as NodeConfig[]};\n  return {version, ...docWithNodes};\n}\n\nexport function deserialize(obj: any): Document {\n  if (Array.isArray(obj)) {\n    return {\n      ...documentDefaults,\n      nodes: Array.from(obj),\n    } as Document;\n  }\n  if (typeof obj !== 'object') {\n    throw new Error('Not an object');\n  }\n  if (obj.version === version) {\n    const doc: SerializedDocument = {...obj};\n    delete doc.version;\n    return {...documentDefaults, ...doc} as Document;\n  }\n  throw new Error(`Object version ${obj.version} not understood`);\n}\n","import {ReactElement} from 'react';\nimport Context from '../universe/Context';\nimport {VariableDefinition} from '../types';\n\n// tslint:disable-next-line:interface-name\nexport default interface Module {\n  acceptsChildren: boolean;\n  noUniversalVariables?: boolean;\n  variables: VariableDefinition[];\n\n  render(context: Context): Array<ReactElement<any>>;\n}\n\nexport function getVariableDefaults(module: Module): object {\n  const defaults = {};\n  module.variables.forEach((v) => {\n    defaults[v.name] = v.default;\n  });\n  return defaults;\n}\n\nexport const UniversalVariables = [\n  {name: 'seed', default: '', group: 'Randomness'},\n] as VariableDefinition[];\n","import {cloneDeep} from 'lodash';\nimport Module, {getVariableDefaults} from '../modules/Module';\nimport registry from '../modules/registry';\nimport {NodeConfig} from '../types';\n\nfunction generateId() {\n  return `${Math.floor(Math.random() * 0xFFFFFFFF).toString(36)}`;\n}\n\nexport function duplicate(nodeConfig: NodeConfig): NodeConfig {\n  function walk(wConfig: NodeConfig): NodeConfig {\n    return {\n      id: generateId(),\n      module: wConfig.module,\n      config: cloneDeep(wConfig.config),\n      children: wConfig.children.map(walk),\n    };\n  }\n\n  return walk(nodeConfig);\n}\n\nexport function configure(\n  moduleName: string,\n  variables: { [key: string]: any },\n  children: NodeConfig[] = [],\n): NodeConfig {\n  const module: Module = registry[moduleName];\n  const defaults = getVariableDefaults(module);\n  return {\n    id: generateId(),\n    module: moduleName,\n    config: Object.assign({}, defaults, variables),\n    children,\n  };\n}\n","export function removeInPlace<T>(array: T[], obj: T): boolean {\n  const index = array.indexOf(obj);\n  if (index > -1) {\n    array.splice(index, 1);\n    return true;\n  }\n  return false;\n}\n","import * as React from 'react';\nimport {Document, GVar} from '../types';\nimport GenericVariableConfigRow from '../components/GenericVariableConfigRow';\nimport {GVarDeleteHandler, GVarModifyHandler} from '../ui-types';\n\ninterface GVarsPanelProps {\n  document: Document;\n  onAddGvar: () => void;\n  onDeleteGvar: GVarDeleteHandler;\n  onModifyGvar: GVarModifyHandler;\n}\n\ninterface GVarPanelProps {\n  gvar: GVar;\n  onModifyGvar: GVarModifyHandler;\n  onDeleteGvar: GVarDeleteHandler;\n}\n\nfunction GVarPanel({gvar, onModifyGvar, onDeleteGvar}: GVarPanelProps) {\n  return (\n    <div className=\"gvar-panel\" style={{display: 'flex'}}>\n      <button className=\"btn standalone\" title=\"Delete gvar\" onClick={() => onDeleteGvar(gvar)}>\n        &times;\n      </button>\n      <table className=\"var-table\" style={{flex: 1}}>\n        <tbody>\n          <GenericVariableConfigRow\n            name=\"name\"\n            type=\"string\"\n            value={gvar.name}\n            onChange={(value) => onModifyGvar(gvar, 'name', value)}\n          />\n          <GenericVariableConfigRow\n            name=\"type\"\n            type=\"string\"\n            choices={['number', 'string']}\n            value={gvar.type}\n            onChange={(value) => onModifyGvar(gvar, 'type', value)}\n          />\n          <GenericVariableConfigRow\n            name=\"value\"\n            type=\"string\"\n            value={gvar.value}\n            onChange={(value) => onModifyGvar(gvar, 'value', value)}\n          />\n          {gvar.type === 'number' ? (\n            <React.Fragment>\n              <GenericVariableConfigRow\n                name=\"min\"\n                type=\"string\"\n                value={gvar.min}\n                onChange={(value) => onModifyGvar(gvar, 'min', parseFloat(value))}\n              />\n              <GenericVariableConfigRow\n                name=\"max\"\n                type=\"string\"\n                value={gvar.max}\n                onChange={(value) => onModifyGvar(gvar, 'max', parseFloat(value))}\n              />\n            </React.Fragment>\n          ) : null}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nconst GVarsPanel: React.SFC<GVarsPanelProps> = (props: GVarsPanelProps) => {\n  const {document} = props;\n  return (\n    <div id=\"gvars-panel\">\n      <div id=\"gvars-toolbar\" className=\"toolbar\">\n        <div\n          className={'btn'}\n          onClick={(event) => {\n            props.onAddGvar();\n            event.preventDefault();\n          }}\n        >\n          Add new gvar\n        </div>\n      </div>\n      {\n        document.gvars && document.gvars.length ?\n          document.gvars.map((gvar, index) => (\n            <GVarPanel\n              key={index}\n              gvar={gvar}\n              onModifyGvar={props.onModifyGvar}\n              onDeleteGvar={props.onDeleteGvar}\n            />\n          )) : (\n            <i>No gvars specified</i>\n          )\n      }\n    </div>\n  );\n};\n\nexport default GVarsPanel;\n","export function load(key: string): any | undefined {\n  const rawValue = localStorage.getItem(key);\n  if (!rawValue) {\n    return undefined;\n  }\n  try {\n    return JSON.parse(rawValue);\n  } catch (e) {\n    return undefined;\n  }\n}\n\nexport function save(key: string, value: any) {\n  if (value === undefined || value === null) {\n    localStorage.removeItem(key);\n    return;\n  }\n  localStorage.setItem(key, JSON.stringify(value));\n}\n","import {NodeConfig} from '../types';\nimport {configure} from '../universe/configure';\n\nexport default function makeDefaultConfig(): NodeConfig[] {\n  return [\n    configure(\n      'RemoveChildren',\n      {\n        seed: 'foo',\n      },\n      [\n        configure(\n          'RectArray',\n          {\n            numberX: '7',\n            numberY: '7',\n            variableX: 'i',\n            variableY: 'j',\n          },\n          [\n            configure('Ngon', {\n              radius1: '15',\n              radius2: '5',\n              vertices: '10',\n              x: '=15 + i * 30',\n              y: '=30 + j * 30',\n              fill: 'blue',\n            }),\n          ]),\n      ]),\n  ];\n}\n","import {VariableMap} from '../types';\n\nexport default class Status {\n  private nodeErrors: { [key: string]: string[] } = {};\n  private nodeVariables: { [key: string]: VariableMap[] } = {};\n\n  public addError(nodeId: string, error: string) {\n    if (!(nodeId in this.nodeErrors)) {\n      this.nodeErrors[nodeId] = [];\n    }\n    this.nodeErrors[nodeId].push(error);\n  }\n\n  public getErrorsForNode(nodeId: string): ReadonlyArray<string> {\n    return (nodeId in this.nodeErrors ? this.nodeErrors[nodeId] : []);\n  }\n\n  public addVariables(nodeId: string, variables: VariableMap) {\n    if (!(nodeId in this.nodeVariables)) {\n      this.nodeVariables[nodeId] = [];\n    }\n    this.nodeVariables[nodeId].push(Object.assign({}, variables));\n  }\n\n  public getVariablesForNode(nodeId: string): string[] {\n    if (!(nodeId in this.nodeVariables)) {\n      return [];\n    }\n    const variables = new Set();\n    this.nodeVariables[nodeId].forEach((map) => {\n      Object.keys(map).forEach((key) => {\n        return variables.add(key);\n      });\n    });\n    return Array.from(variables).sort();\n  }\n\n}\n","function hashString(s: string) {\n  let seed = 0;\n  for (let i = 0; i < s.length; i++) {\n    seed ^= (i % 16) << s.charCodeAt(i);\n  }\n  return seed;\n}\n\n// Based on https://gist.github.com/blixt/f17b47c62508be59987b\n// which is based on http://www.firstpr.com.au/dsp/rand31/\n\nexport type RandomGenerator = () => number;\n\nexport default function createRandomGenerator(seedString?: string): RandomGenerator {\n  let seed = (seedString ? hashString(seedString) : (Math.random() * 2147483647));\n\n  const next = () => {\n    return seed = seed * 16807 % 2147483647;\n  };\n\n  return function nextFloat() {\n    return (next() - 1) / 2147483646;\n  };\n}\n","import {VariableMap} from '../types';\n\nexport type NamespaceFn = () => VariableMap;\n\nconst expressionFnCache = {};\n\nexport function evaluateExpression(expression: string, namespace: NamespaceFn): any {\n  if (expression.startsWith('=')) {\n    const exprFun = (\n      expression in expressionFnCache ?\n        expressionFnCache[expression] :\n        expressionFnCache[expression] = new Function('namespace', `with(namespace) { return ${expression.slice(1)}}`)\n    );\n    return exprFun(namespace());\n  }\n  if (/[+-][0-9.]+/.test(expression)) {\n    return parseFloat(expression);\n  }\n  return `${expression}`;\n}\n","import {ExpressionMap, NodeConfig, VariableMap} from '../types';\nimport {evaluateExpression, NamespaceFn} from '../utils/evaluator';\nimport {default as createRandomGenerator, RandomGenerator} from '../utils/RandomGenerator';\nimport {renderNodesInto} from './render';\nimport Status from './Status';\n\nfunction _evaluate(\n  status: Status,\n  node: NodeConfig,\n  tag: string,\n  expression: string,\n  namespace: NamespaceFn,\n  errorDefault: any = null,\n): any {\n  try {\n    return evaluateExpression(expression, namespace);\n  } catch (err) {\n    status.addError(node.id, `${tag}: ${err}`);\n    console.warn(err);\n    return errorDefault;\n  }\n}\n\nfunction memoizeOnFirstInvocation<T>(creator: () => T): () => T {\n  let t: T | undefined;\n  return () => {\n    if (t === undefined) {\n      t = creator();\n    }\n    return t;\n  };\n}\n\nexport default class Context {\n  private rng?: RandomGenerator;\n  private defaultNamespace: NamespaceFn;\n\n  constructor(\n    readonly status: Status,\n    readonly node: NodeConfig,\n    readonly parent: Context | null = null,\n    readonly variables: VariableMap = {},\n    readonly idPrefix: string = '',\n  ) {\n    this.defaultNamespace = this.prepareNamespace();\n  }\n\n  public subcontext(\n    forNode: NodeConfig,\n    newVariables: VariableMap = {},\n    idPrefix: string = '',\n  ): Context {\n    const mergedVariables = Object.assign({}, this.variables, newVariables);\n    return new Context(\n      this.status,\n      forNode,\n      this,\n      mergedVariables,\n      `${this.idPrefix}.${idPrefix}`,\n    );\n  }\n\n  public random(min?: number, max?: number) {\n    if (!this.rng) {\n      const seed = this.evaluateFromNodeConfig('seed');\n      this.rng = createRandomGenerator(seed);\n    }\n    const val = this.rng();\n    if (min !== undefined) {\n      if (max === undefined) {\n        return val * min;\n      }\n      return min + val * (max - min);\n    }\n    return val;\n  }\n\n  public prepareNamespace(additionalVariables?: VariableMap): NamespaceFn {\n    return memoizeOnFirstInvocation(() => ({\n      rand: this.random.bind(this),\n      ...this.variables,\n      ...additionalVariables,\n    }));\n  }\n\n  public evaluateFromNodeConfig(key: string): any {\n    const expression = this.node.config[key]!;\n    if (expression === undefined) {\n      return null;\n    }\n    return _evaluate(this.status, this.node, key, expression, this.defaultNamespace);\n  }\n\n  public evaluate(tag: string, expression: string, additionalVariables?: VariableMap): any {\n    const namespace = this.prepareNamespace(additionalVariables);\n    return _evaluate(this.status, this.node, tag, expression, namespace);\n  }\n\n  public evaluateAll(\n    node: NodeConfig,\n    expressionMap: ExpressionMap,\n    additionalVariables?: VariableMap,\n  ): VariableMap {\n    const evaluated = {};\n    const namespace = this.prepareNamespace(additionalVariables);\n    for (const tag in expressionMap) {\n      if (expressionMap.hasOwnProperty(tag)) {\n        const expression = expressionMap[tag];\n        if (expression !== null) {\n          evaluated[tag] = _evaluate(this.status, this.node, tag, expression, namespace);\n        }\n      }\n    }\n    return evaluated;\n  }\n\n  public evaluateNodeConfig(node: NodeConfig = this.node): VariableMap {\n    return this.evaluateAll(node, node.config);\n  }\n\n  public getId(suffix: string = this.node.id) {\n    return this.idPrefix + suffix;\n  }\n\n  public renderChildren(context: Context = this) {\n    const nodes: Element[] = [];\n    renderNodesInto(nodes, this.node.children, context);\n    return nodes;\n  }\n}\n","import * as React from 'react';\nimport {GVar} from '../types';\nimport {GVarValueChangeHandler} from \"../ui-types\";\n\ninterface QuickGVarProps {\n  gvar: GVar;\n  onChange: GVarValueChangeHandler;\n}\n\ninterface QuickGVarBarProps {\n  gvars: GVar[];\n  onChange: GVarValueChangeHandler;\n}\n\n\nconst QuickGVar: React.SFC<QuickGVarProps> = ({gvar, onChange}) => (\n\n  <div className=\"quick-gvar\">\n    <span>\n      {gvar.name}\n    </span>\n    {gvar.type === 'number' ? (\n      <input\n        type=\"range\"\n        min={gvar.min}\n        max={gvar.max}\n        value={gvar.value}\n        onChange={(e) => onChange(gvar, e.target.valueAsNumber)}\n      />\n    ) : null}\n  </div>\n);\n\n\nconst QuickGVarBar: React.SFC<QuickGVarBarProps> = ({gvars, onChange}) => (\n  <div className=\"quick-gvar-bar\">\n    {gvars.map((gvar) => <QuickGVar gvar={gvar} key={gvar.name} onChange={onChange} />)}\n  </div>\n);\n\nexport default QuickGVarBar;\n","import * as React from 'react';\nimport Module from '../Module';\nimport Context from '../../universe/Context';\nexport default {\n  variables: [\n    {group: 'Document', name: 'width', default: '800'},\n    {group: 'Document', name: 'height', default: '800'},\n    {group: 'Document', name: 'background', default: '', type: 'color'},\n  ],\n  acceptsChildren: false,\n  noUniversalVariables: true,\n\n  render(context: Context) {\n    throw new Error('Document.render() should not be called');\n  },\n} as Module;\n","import * as React from 'react';\nimport Dropdown, {DropdownContent, DropdownTrigger} from 'react-simple-dropdown';\nimport {TreeManager} from '../managers/TreeManager';\nimport registry from '../modules/registry';\nimport {NodeConfig} from '../types';\n\ninterface ToolbarProps {\n  treeManager: TreeManager;\n  selectedNode: NodeConfig | null;\n}\n\nfunction nodeAcceptsChildren(node: NodeConfig | null) {\n  return (node && registry[node.module] && registry[node.module].acceptsChildren);\n}\n\nexport default class TreeToolbar extends React.Component<ToolbarProps, any> {\n  private dropdowns: { [key: string]: Dropdown } = {};\n\n  private handleAddNode(method: 'wrap' | 'child' | 'sibling', module: string) {\n    const {treeManager, selectedNode} = this.props;\n    switch (method) {\n      case 'child':\n        treeManager.addChildNode((selectedNode ? selectedNode.id : null), module);\n        break;\n      case 'sibling':\n        treeManager.addSiblingNode(selectedNode!.id, module);\n        break;\n      case 'wrap':\n        treeManager.wrapNode(selectedNode!.id, module);\n    }\n    this.hideDropdowns();\n  }\n\n  private handleDeleteNode(withHierarchy: boolean) {\n    const {treeManager, selectedNode} = this.props;\n    treeManager.deleteNode(selectedNode!.id, withHierarchy);\n  }\n\n  public hideDropdowns() {\n    Object.values(this.dropdowns).forEach((dropdown) => {\n      return dropdown.hide();\n    });\n  }\n\n  public render() {\n    const {selectedNode} = this.props;\n    let childMode: string | null = null;\n    let childText: string = 'Node';\n    let allowAddSibling = false;\n    if (selectedNode === null) {\n      childMode = 'child';\n      childText = 'Node';\n    }\n    if (nodeAcceptsChildren(selectedNode)) {\n      childMode = 'child';\n      childText = 'Child';\n    }\n    if (selectedNode) {\n      const parent = this.props.treeManager.getNodeParentOrNull(selectedNode.id);\n      if (parent === null || nodeAcceptsChildren(parent)) {\n        allowAddSibling = true;\n      }\n    }\n    return (\n      <div id=\"tree-toolbar\" className=\"toolbar\">\n        <Dropdown\n          disabled={!selectedNode}\n          ref={(instance) => {\n            this.dropdowns.wrap = instance;\n          }}\n        >\n          <DropdownTrigger className=\"btn\">Wrap...</DropdownTrigger>\n          <DropdownContent className=\"node-select\">\n            {Object.keys(registry).filter((module) => registry[module].acceptsChildren).map((module) => (\n              <a href=\"#\" key={module} onClick={() => this.handleAddNode('wrap', module)}>{module}</a>\n            ))}\n          </DropdownContent>\n        </Dropdown>\n        <Dropdown\n          disabled={!childMode}\n          ref={(instance) => {\n            this.dropdowns.addChild = instance;\n          }}\n        >\n          <DropdownTrigger className=\"btn\">Add {childText}...</DropdownTrigger>\n          <DropdownContent className=\"node-select\">\n            {Object.keys(registry).map((module) => (\n              <a href=\"#\" key={module} onClick={() => this.handleAddNode('child', module)}>{module}</a>\n            ))}\n          </DropdownContent>\n        </Dropdown>\n        <Dropdown\n          disabled={!allowAddSibling}\n          ref={(instance) => {\n            this.dropdowns.addSibling = instance;\n          }}\n        >\n          <DropdownTrigger className=\"btn\">Add Sibling...</DropdownTrigger>\n          <DropdownContent className=\"node-select\">\n            {Object.keys(registry).map((module) => (\n              <a href=\"#\" key={module} onClick={() => this.handleAddNode('sibling', module)}>{module}</a>\n            ))}\n          </DropdownContent>\n        </Dropdown>\n        <div\n          className={'btn ' + (selectedNode ? '' : 'disabled')}\n          title=\"Shift-click to delete with hierarchy\"\n          onClick={(event) => {\n            this.handleDeleteNode(event.shiftKey);\n            event.preventDefault();\n          }}\n        >\n          Delete\n        </div>\n      </div>\n    );\n  }\n\n}\n","import * as React from 'react';\nimport registry from '../modules/registry';\nimport {NodeConfig} from '../types';\n\ninterface TreeCommonProps {\n  selectedNode: NodeConfig | null;\n  onSelectNode: (node: NodeConfig | null) => void;\n  onRepositionNode: (sourceNodeId: string, targetNodeId: string, copy: boolean) => void;\n}\n\ntype TreeNodeProps = TreeCommonProps & {\n  nodeConfig: NodeConfig,\n};\n\ntype TreeLevelProps = TreeCommonProps & {\n  nodeConfigs: ReadonlyArray<NodeConfig>,\n};\n\nconst DRAG_AND_DROP_DATA_ID = 'application/x-coil-nodeid';\n\nconst TreeNode = ({nodeConfig, selectedNode, onSelectNode, onRepositionNode}: TreeNodeProps) => (\n  <li className={selectedNode === nodeConfig ? 'selected' : ''}>\n    <a\n      href=\"#\"\n      draggable={true}\n      onClick={(e) => {\n        onSelectNode(nodeConfig);\n        e.preventDefault();\n        e.stopPropagation();\n      }}\n      onDragStart={(event) => {\n        event.dataTransfer.clearData();\n        event.dataTransfer.setData(DRAG_AND_DROP_DATA_ID, nodeConfig.id);\n        event.dataTransfer.effectAllowed = 'all';\n      }}\n      onDragOver={(event) => {\n        event.dataTransfer.dropEffect = 'none';\n        if (event.dataTransfer.types.indexOf(DRAG_AND_DROP_DATA_ID) > -1) {\n          if (registry[nodeConfig.module].acceptsChildren) {\n            event.dataTransfer.dropEffect = (event.altKey ? 'copy' : 'link');\n            event.preventDefault();\n          }\n        }\n      }}\n      onDrop={(event) => {\n        const sourceNodeId = event.dataTransfer.getData(DRAG_AND_DROP_DATA_ID);\n        event.dataTransfer.dropEffect = (event.altKey ? 'copy' : 'link');\n        const copy = (event.dataTransfer.dropEffect === 'copy');\n        onRepositionNode(sourceNodeId, nodeConfig.id, copy);\n      }}\n    >\n      {nodeConfig.module}\n    </a>\n    {nodeConfig.children.length ?\n      <TreeLevel\n        nodeConfigs={nodeConfig.children}\n        selectedNode={selectedNode}\n        onSelectNode={onSelectNode}\n        onRepositionNode={onRepositionNode}\n      />\n      : null\n    }\n  </li>\n);\n\nconst TreeLevel = ({nodeConfigs, selectedNode, onSelectNode, onRepositionNode}: TreeLevelProps) => (\n  <ul>\n    {nodeConfigs.map((nodeConfig: NodeConfig) => (\n      <TreeNode\n        key={nodeConfig.id}\n        nodeConfig={nodeConfig}\n        selectedNode={selectedNode}\n        onSelectNode={onSelectNode}\n        onRepositionNode={onRepositionNode}\n      />\n    ))}\n  </ul>\n);\n\nexport default ({nodeConfigs, selectedNode, onSelectNode, onRepositionNode}: TreeLevelProps) => {\n  return (\n    <div\n      id=\"tree\"\n      onClick={(e) => {\n        if (e.currentTarget.id === 'tree') {\n          onSelectNode(null);\n        }\n      }}\n    >\n      <TreeLevel\n        nodeConfigs={nodeConfigs}\n        selectedNode={selectedNode}\n        onSelectNode={onSelectNode}\n        onRepositionNode={onRepositionNode}\n      />\n    </div>\n  );\n};\n","import {groupBy} from 'lodash';\nimport * as React from 'react';\nimport Module, {UniversalVariables} from '../modules/Module';\nimport registry from '../modules/registry';\nimport {VariableDefinition} from '../types';\nimport {NodeConfig} from '../types';\nimport Status from '../universe/Status';\nimport {ChangeNodeConfigHandler} from '../handlers';\nimport GenericVariableConfigRow from './GenericVariableConfigRow';\n\ninterface NodeConfigViewProps {\n  nodeConfig: NodeConfig;\n  onChange: ChangeNodeConfigHandler;\n  status: Status;\n  forceModule?: Module;\n}\n\ninterface VariableConfigRowProps {\n  variable: VariableDefinition;\n  nodeConfig: NodeConfig;\n  onChange: ChangeNodeConfigHandler;\n  status: Status;\n}\n\nconst VariableConfigRow = ({variable, nodeConfig, onChange, status}: VariableConfigRowProps) => {\n  return (\n    <GenericVariableConfigRow\n      name={variable.name}\n      type={variable.type!}\n      value={nodeConfig.config[variable.name] || ''}\n      onChange={(value) => onChange(nodeConfig, variable.name, value)}\n      choices={variable.choices}\n    />\n  );\n};\n\nexport default class NodeConfigView extends React.Component<NodeConfigViewProps, any> {\n  public render() {\n    const {nodeConfig, status, forceModule} = this.props;\n    const moduleClass: Module = forceModule || registry[nodeConfig.module];\n\n    if (!moduleClass) {\n      return (\n        <div>\n          The module {nodeConfig.module} is not available.\n          <textarea>{JSON.stringify(nodeConfig, null, 2)}</textarea>\n        </div>\n      );\n    }\n\n    const variableDefinitions = moduleClass.variables.concat(\n      (moduleClass.noUniversalVariables ? [] : UniversalVariables),\n    );\n    const variablesByGroup = groupBy(variableDefinitions, (v) => (v.group || 'Other'));\n\n    const variablesForNode = status.getVariablesForNode(nodeConfig.id);\n    return (\n      <div>\n        <table>\n          <tbody>\n            {Object.keys(variablesByGroup).sort().map((group) => <React.Fragment key={group}>\n                <tr key={`#${group}`} className=\"group-separator\">\n                  <th colSpan={3}>{group}</th>\n                </tr>\n                {variablesByGroup[group].map((variable: VariableDefinition) => (\n                  <VariableConfigRow\n                    key={variable.name}\n                    variable={variable}\n                    nodeConfig={nodeConfig}\n                    status={status}\n                    onChange={this.props.onChange}\n                  />\n                ))}\n              </React.Fragment>,\n            )}\n          </tbody>\n        </table>\n        {variablesForNode.length ?\n          <div className=\"debug\">Variables last render: {variablesForNode.join(', ')}</div>\n          : null\n        }\n        <ul className=\"errors\">\n          {status.getErrorsForNode(nodeConfig.id).map((err, i) => <li key={i}>{err}</li>)}\n        </ul>\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport NodeConfigView from '../components/NodeConfigView';\nimport NodeTree from '../components/NodeTree';\nimport TreeToolbar from '../components/TreeToolbar';\nimport {TreeManager} from '../managers/TreeManager';\nimport {Document, NodeConfig} from '../types';\nimport Status from '../universe/Status';\nimport {default as DocumentModule} from '../modules/pseudo/Document';\nimport {ChangeDocumentConfigHandler, SelectNodeHandler} from '../handlers';\nimport QuickGVarBar from '../components/QuickGVarBar';\nimport {GVarValueChangeHandler} from \"../ui-types\";\n\ninterface TreePanelProps {\n  treeManager: TreeManager;\n  status: Status;\n  selectedNodeId: string | null;\n  onSelectNode: SelectNodeHandler;\n  document: Document;\n  onChangeDocumentVariable: ChangeDocumentConfigHandler;\n  onChangeGvarValue: GVarValueChangeHandler;\n}\n\nexport default class TreePanel extends React.Component<TreePanelProps, {}> {\n\n  private onChangeNodeVariable = (nodeConfig: NodeConfig, variableName: string, newValue: string) => {\n    this.props.treeManager.changeNodeVariable(nodeConfig.id, variableName, newValue);\n    this.forceUpdate();  // Avoid asynchronous input caret position problem :(\n  }\n\n  private onChangeDocumentVariable = (nodeConfig: NodeConfig, variableName: string, newValue: string) => {\n    this.props.onChangeDocumentVariable(variableName as any, newValue.replace(/^=/, ''));\n    this.forceUpdate();  // Avoid asynchronous input caret position problem :(\n  }\n\n  private onRepositionNode = (sourceNodeId: string, targetNodeId: string, copy: boolean) => {\n    if (copy) {\n      this.props.treeManager.copyNode(sourceNodeId, targetNodeId);\n    } else {\n      this.props.treeManager.moveNode(sourceNodeId, targetNodeId);\n    }\n  }\n\n  public render() {\n    const {treeManager, selectedNodeId, status, document, onChangeGvarValue} = this.props;\n    const selectedNodeConfig = treeManager.getNodeOrNull(selectedNodeId!);\n    return (\n      <>\n        <div id=\"hierarchy\">\n          <TreeToolbar treeManager={treeManager} selectedNode={selectedNodeConfig} />\n          <NodeTree\n            nodeConfigs={treeManager.getTree()}\n            selectedNode={selectedNodeConfig}\n            onSelectNode={this.props.onSelectNode}\n            onRepositionNode={this.onRepositionNode}\n          />\n        </div>\n        <div id=\"props\">\n          {selectedNodeConfig ?\n            <NodeConfigView\n              nodeConfig={selectedNodeConfig!}\n              status={status}\n              onChange={this.onChangeNodeVariable}\n            />\n            :\n            <NodeConfigView\n              nodeConfig={{\n                module: '~Document~',\n                id: '~Document~',\n                config: {\n                  width: '' + document.width,\n                  height: '' + document.height,\n                  background: '' + document.background,\n                },\n                children: [],\n              }}\n              status={status}\n              forceModule={DocumentModule}\n              onChange={this.onChangeDocumentVariable}\n            />\n          }\n        </div>\n        <QuickGVarBar gvars={document.gvars} onChange={onChangeGvarValue}/>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOMServer from 'react-dom/server';\nimport {TreeManager} from '../managers/TreeManager';\nimport {Document} from '../types';\nimport {deserialize, serialize} from '../utils/serde';\nimport {LoadDocumentHandler} from '../handlers';\n\ninterface FilePanelProps {\n  treeManager: TreeManager;\n  rendered: any;  // TODO: yigh\n  document: Document;\n  onLoadDocument: LoadDocumentHandler;\n}\n\ninterface FilePanelState {\n  serializedState: string;\n}\n\nexport default class FilePanel extends React.Component<FilePanelProps, FilePanelState> {\n\n  public state: FilePanelState = {\n    serializedState: '',\n  };\n\n  private dumpState = (event) => {\n    const doc = serialize(this.props.document, this.props.treeManager.getTree());\n    this.setState({\n      serializedState: JSON.stringify(doc, null, (event.shiftKey ? undefined : 2)),\n    });\n  }\n\n  private loadState = () => {\n    let stateJson;\n    try {\n      stateJson = JSON.parse(this.state.serializedState);\n    } catch (e) {\n      alert('Could not parse JSON: ' + e);\n      return;\n    }\n    try {\n      const doc = deserialize(stateJson);\n      this.props.onLoadDocument(doc);\n    } catch (e) {\n      alert('Could not read document:' + e);\n      return;\n    }\n  }\n\n  private saveSVG = () => {\n    const svgString = (\n      ReactDOMServer.renderToStaticMarkup(this.props.rendered)\n        .replace('<svg ', '<svg xmlns=\"http://www.w3.org/2000/svg\" ')\n    );\n    const blob = new Blob([svgString], {type: 'image/svg+xml'});\n    const url = URL.createObjectURL(blob);\n    const downloadLink = Object.assign(document.createElement('a'), {\n      download: `coil-svg-${+new Date()}.svg`,\n      href: url,\n    });\n    document.body.appendChild(downloadLink);\n    downloadLink.click();\n    setTimeout(() => {\n      downloadLink.parentNode!.removeChild(downloadLink);\n      URL.revokeObjectURL(url);\n    }, 100);\n  }\n\n  public render() {\n    const {treeManager, rendered} = this.props;\n    return (\n      <div id=\"file-panel\">\n        <div>\n          <button className=\"btn standalone\" onClick={this.dumpState}>Save state &darr;</button>\n          <button className=\"btn standalone\" onClick={this.loadState}>Load state &uarr;</button>\n          <textarea\n            value={this.state.serializedState}\n            onChange={(e) => this.setState({serializedState: e.target.value})}\n          />\n        </div>\n        <div>\n          <button className=\"btn standalone\" onClick={this.saveSVG}>Save rendered SVG...</button>\n        </div>\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport Module from '../Module';\nimport Context from '../../universe/Context';\nimport {toSVG} from 'transformation-matrix';\nimport TransformVariables from '../TransformVariables';\nimport {splitMatrixAndProps} from '../MatrixUtils';\nimport PresentationVariables from '../PresentationVariables';\n\nexport default {\n  variables: TransformVariables.concat(PresentationVariables).concat([\n    {name: 'width', default: '20'},\n    {name: 'height', default: '20'},\n  ]),\n\n  render(context: Context) {\n    const {node} = context;\n    const {props, matrix} = splitMatrixAndProps(context.evaluateNodeConfig(node));\n    return [\n      <rect\n        x={-props.width / 2}\n        y={-props.height / 2}\n        transform={toSVG(matrix)}\n        key={context.getId()}\n        {...props}\n      />,\n    ];\n  },\n} as Module;\n","export default function dumbMemoize<T>(fn: (...args) => T): (...args) => T {\n  const memo: { [args: string]: T } = {};\n  const memoizedFn = (...args) => {\n    const argsStr = args.join('\\x01');\n    if (argsStr in memo) {\n      return memo[argsStr];\n    }\n    return memo[argsStr] = fn(...args);\n  };\n  (memoizedFn as any).memo = memo;\n  return memoizedFn;\n}\n","import * as React from 'react';\nimport Context from '../../universe/Context';\nimport TransformVariables from '../TransformVariables';\nimport {splitMatrixAndProps} from '../MatrixUtils';\nimport PresentationVariables from '../PresentationVariables';\nimport Module from '../Module';\nimport {toSVG} from 'transformation-matrix';\nimport dumbMemoize from '../../utils/dumbMemoize';\n\nconst TWO_PI = Math.PI * 2;\n\nconst generatePathString = dumbMemoize(\n  (vertices, radius1, radius2, tilt1, tilt2) => {\n    const path: string[] = [];\n    radius1 = parseFloat(radius1);\n    radius2 = parseFloat(radius2);\n    tilt1 = parseFloat(tilt1);\n    tilt2 = parseFloat(tilt2);\n    for (let i = 0; i < vertices; i++) {\n      const f = i / vertices;\n      const radius = (i % 2 === 0 ? radius1 : radius2);\n      const angle = (f + (i % 2 === 0 ? tilt1 : tilt2)) * TWO_PI;\n      const x = Math.cos(angle) * radius;\n      const y = Math.sin(angle) * radius;\n      if (!(isNaN(x) || isNaN(y))) {\n        path.push(`${i === 0 ? 'M' : 'L'}${x.toFixed(3)},${y.toFixed(3)}`);\n      }\n    }\n    if (path.length > 0) {\n      path.push('z');\n    }\n    return path.join(' ');\n  },\n);\n\nexport default {\n  variables: TransformVariables.concat(PresentationVariables).concat([\n    {name: 'vertices', default: '5'},\n    {name: 'radius1', default: '5'},\n    {name: 'radius2', default: '5'},\n    {name: 'tilt1', default: '0'},\n    {name: 'tilt2', default: '0'},\n  ]),\n\n  render(context: Context) {\n    const {node} = context;\n    const {props, matrix} = splitMatrixAndProps(context.evaluateNodeConfig(node));\n    const path = generatePathString(props.vertices, props.radius1, props.radius2, props.tilt1, props.tilt2);\n\n    delete props.vertices;\n    delete props.radius1;\n    delete props.radius2;\n    delete props.tilt1;\n    delete props.tilt2;\n    return [<path\n      d={path}\n      {...props}\n      key={context.getId(node.id)}\n      transform={toSVG(matrix)}\n    />];\n  },\n} as Module;\n","export function cleanPresentationProps(props: { [key: string]: any }): void {\n  if (props.stroke === '') {\n    delete props.stroke;\n  }\n  if (props.fill === '') {\n    delete props.fill;\n  }\n}\n","import * as React from 'react';\nimport Module from '../Module';\nimport Context from '../../universe/Context';\nimport {toSVG} from 'transformation-matrix';\nimport TransformVariables from '../TransformVariables';\nimport {splitMatrixAndProps} from '../MatrixUtils';\nimport PresentationVariables from '../PresentationVariables';\nimport {cleanPresentationProps} from '../SVGUtils';\n\nexport default {\n  variables: TransformVariables.concat(PresentationVariables).concat([\n    {name: 'radiusX', default: '20'},\n    {name: 'radiusY', default: '20'},\n  ]),\n\n  render(context: Context) {\n    const {props, matrix} = splitMatrixAndProps(context.evaluateNodeConfig());\n    const {radiusX} = props;\n    const radiusY = (props.radiusY !== '' ? props.radiusY : radiusX);\n    delete props.radiusX;\n    delete props.radiusY;\n    cleanPresentationProps(props);\n    return [\n      <ellipse\n        cx={0}\n        cy={0}\n        rx={radiusX}\n        ry={radiusY}\n        transform={toSVG(matrix)}\n        key={context.getId()}\n        {...props}\n      />,\n    ];\n  },\n} as Module;\n","import * as React from 'react';\nimport Module from '../Module';\nimport Context from '../../universe/Context';\nimport TransformVariables from '../TransformVariables';\nimport {toSVG} from 'transformation-matrix';\nimport {splitMatrixAndProps} from '../MatrixUtils';\n\nexport default {\n  acceptsChildren: true,\n  variables: TransformVariables.concat([\n    {name: 'opacity', default: '1'},\n  ]),\n\n  render(context: Context) {\n    const nodes = context.renderChildren();\n    const {props, matrix} = splitMatrixAndProps(context.evaluateNodeConfig());\n    const {opacity} = props;\n    return [<g transform={toSVG(matrix)} opacity={opacity}>{nodes}</g>];\n  },\n} as Module;\n","import * as React from 'react';\nimport Module from '../Module';\nimport Context from '../../universe/Context';\nimport {renderNodesInto} from '../../universe/render';\n\nexport default {\n  acceptsChildren: true,\n  variables: [\n    {name: 'keep', default: '=rand() < .5'},\n    {name: 'indexVariable', default: 'i'},\n  ],\n\n  render(context: Context) {\n    const node = context.node;\n    const indexVariable = context.evaluateFromNodeConfig('indexVariable');\n    const nodes = [];\n    renderNodesInto(nodes, node.children, context);\n    const filterContext = context.subcontext(node);\n    const keepExpression = node.config.keep!;\n    return nodes.filter((child, index) => (\n      filterContext.evaluate(`keep ${index}`, keepExpression, {[indexVariable]: index})\n    ));\n  },\n} as Module;\n","import * as React from 'react';\nimport Module from '../Module';\nimport Context from '../../universe/Context';\nimport {renderNodesInto} from '../../universe/render';\n\nexport default {\n  acceptsChildren: true,\n  variables: [\n    {name: 'childIndex', default: '0'},\n    {name: 'indexVariable', default: 'u'},\n  ],\n\n  render(context: Context) {\n    const {node} = context;\n    const {childIndex, indexVariable} = context.evaluateNodeConfig(node);\n    const index = parseInt(childIndex, 10);\n    const child = node.children[index % node.children.length];\n    const nodes = [];\n    if (child) {\n      const subcontext = context.subcontext(\n        node,\n        {\n          [indexVariable]: childIndex,\n        },\n        `child${childIndex}`,\n      );\n      renderNodesInto(nodes, [child], subcontext);\n    }\n    return nodes;\n  },\n} as Module;\n","import * as React from 'react';\nimport Module from '../Module';\nimport Context from '../../universe/Context';\nimport {renderNodesInto} from '../../universe/render';\n\nconst THREE_OVER_TWO = (3 / 2);\nconst SQRT_THREE = Math.sqrt(3);\nconst SQRT_THREE_OVER_TWO = SQRT_THREE / 2;\n\nfunction makeHex(hex: string, x: number, y: number): [number, number] {\n  if (hex === 'flat' || hex === 'flatRect') {\n    if (hex === 'flatRect') {\n      y -= (x >> 1);\n    }\n    return [\n      THREE_OVER_TWO * x,\n      SQRT_THREE_OVER_TWO * x + SQRT_THREE * y,\n    ];\n  } else if (hex === 'pointy' || hex === 'pointyRect') {\n    if (hex === 'pointyRect') {\n      x -= (y >> 1);\n    }\n    return [\n      SQRT_THREE * x + SQRT_THREE_OVER_TWO * y,\n      THREE_OVER_TWO * y,\n    ];\n  }\n  return [0, 0];\n}\n\nexport default {\n  acceptsChildren: true,\n  variables: [\n    {name: 'numberX', default: '5'},\n    {name: 'numberY', default: '5'},\n    {name: 'variableX', default: 'vx'},\n    {name: 'variableY', default: 'vy'},\n    {\n      name: 'hex',\n      default: 'none',\n      choices: [\n        'none',\n        'flat',\n        'flatRect',\n        'pointy',\n        'pointyRect',\n      ],\n    },\n  ],\n\n  render(context: Context) {\n    const {node} = context;\n    // tslint:disable-next-line:prefer-const\n    let {numberX, numberY, variableX, variableY, hex} = context.evaluateNodeConfig(node);\n    const nodes = [];\n\n    numberX = Math.round(parseFloat(numberX));\n    numberY = Math.round(parseFloat(numberY));\n    for (let y = 0; y < numberY; y++) {\n      for (let x = 0; x < numberX; x++) {\n        const newVariables = {\n          [variableX]: x,\n          [variableY]: y,\n          [`${variableX}F`]: x / (numberX - 1),\n          [`${variableY}F`]: y / (numberY - 1),\n        };\n        if (hex !== 'none') {\n          const [hexX, hexY] = makeHex(hex, x, y);\n          newVariables[`${variableX}Hex`] = hexX;\n          newVariables[`${variableY}Hex`] = hexY;\n        }\n        const subcontext = context.subcontext(node, newVariables, `${x}x${y}`);\n        renderNodesInto(nodes, node.children, subcontext);\n      }\n    }\n    return nodes;\n  },\n} as Module;\n","import * as React from 'react';\nimport Module from '../Module';\nimport Context from '../../universe/Context';\nimport {renderNodesInto} from '../../universe/render';\n\nexport default {\n  acceptsChildren: true,\n  variables: [\n    {name: 'number', default: '5'},\n    {name: 'variable', default: 'i'},\n  ],\n\n  render(context: Context) {\n    // tslint:disable-next-line:variable-name\n    const {number, variable} = context.evaluateNodeConfig();\n    const nodes = [];\n    const nNumber = Math.round(parseFloat(number));\n    const node = context.node;\n    for (let i = 0; i < nNumber; i++) {\n      const subcontext = context.subcontext(node, {\n        [variable]: i,\n        [`${variable}F`]: i / (nNumber - 1),\n      }, `${i}`);\n      renderNodesInto(nodes, node.children, subcontext);\n    }\n    return nodes;\n  },\n} as Module;\n","import {cloneDeep} from 'lodash';\nimport {NodeConfig} from '../types';\nimport {configure, duplicate} from '../universe/configure';\n\ninterface NodeCacheEntry {\n  node: NodeConfig;\n  parent: NodeConfig | null;\n}\n\ninterface NodeCacheType {\n  [key: string]: NodeCacheEntry;\n}\n\nexport type UpdateListener = (root: NodeConfig[]) => void;\n\nexport class TreeManager {\n  private tree: NodeConfig[] = [];\n  private nodeCache: NodeCacheType = {};\n  private treeUpdateListeners: UpdateListener[] = [];\n\n  public replaceTree(newTree: NodeConfig[]) {\n    this.tree = cloneDeep(newTree);\n    this.updateNodeCache();\n    this.invokeTreeUpdateListeners();\n  }\n\n  private updateNodeCache() {\n    const newNodeCache: NodeCacheType = {};\n\n    function walk(node: NodeConfig, parent: NodeConfig | null) {\n      newNodeCache[node.id] = {node, parent};\n      node.children.forEach((child) => walk(child, node));\n    }\n\n    this.tree.forEach((node) => walk(node, null));\n    this.nodeCache = newNodeCache;\n  }\n\n  private invokeTreeUpdateListeners() {\n    setImmediate(() => {\n      this.treeUpdateListeners.forEach((listener) => {\n        listener(this.tree);\n      });\n    });\n  }\n\n  public getNodeOrNull(nodeId: string): NodeConfig | null {\n    const cacheEntry = this.getNodeCacheEntry(nodeId, false);\n    return (cacheEntry ? cacheEntry.node : null);\n  }\n\n  public getNodeParentOrNull(nodeId: string): NodeConfig | null {\n    const cacheEntry = this.getNodeCacheEntry(nodeId, false);\n    return (cacheEntry ? cacheEntry.parent : null);\n  }\n\n  private getNode(nodeId: string): NodeConfig {\n    return this.getNodeCacheEntry(nodeId)!.node;\n  }\n\n  private getNodeParent(nodeId: string): NodeConfig | null {\n    return this.getNodeCacheEntry(nodeId)!.parent;\n  }\n\n  private getNodeCacheEntry(nodeId: string, check: boolean = true): NodeCacheEntry | null {\n    const cacheEntry = this.nodeCache[nodeId];\n    if (check && !cacheEntry) {\n      throw new Error(`invalid node ${nodeId}`);\n    }\n    return (cacheEntry ? cacheEntry : null);\n  }\n\n  private replaceOrEmsiblingNode(\n    parent: NodeConfig | null,\n    nodeToReplace: NodeConfig,\n    newNodes: ReadonlyArray<NodeConfig>,\n    replace: boolean,\n  ) {\n    const childList = (parent === null ? this.tree : parent.children);\n    const childIndex = childList.indexOf(nodeToReplace);\n    if (childIndex > -1) {\n      const args = ([childIndex, (replace ? 1 : 0)] as any[]).concat(newNodes);\n      childList.splice.apply(childList, args);\n    }\n  }\n\n  public getTree(): ReadonlyArray<NodeConfig> {\n    return this.tree;\n  }\n\n  public addTreeUpdateListener(listener: UpdateListener) {\n    this.treeUpdateListeners.push(listener);\n  }\n\n  public changeNodeVariable(nodeId: string, variableName: string, value: any) {\n    const node = this.getNode(nodeId);\n    node.config[variableName] = value;\n    this.invokeTreeUpdateListeners();\n  }\n\n  public addChildNode(parentNodeId: string | null, module: string) {\n    const newNode = configure(module, {});\n    this.addChildInternal(parentNodeId, newNode);\n    this.updateNodeCache();\n    this.invokeTreeUpdateListeners();\n    return newNode;\n  }\n\n  private addChildInternal(parentNodeId: string | null, newNode) {\n    if (parentNodeId) {\n      const parentNode = this.getNode(parentNodeId);\n      parentNode.children.push(newNode);\n      return parentNode;\n    } else {\n      this.tree.push(newNode);\n      return null;\n    }\n  }\n\n  public wrapNode(parentNodeId: string, module: string) {\n    const wrappedNode = this.getNode(parentNodeId);\n    const wrappedNodeParent = this.getNodeParent(parentNodeId);\n    const wrapperNode = configure(module, {}, [wrappedNode]);\n    this.replaceOrEmsiblingNode(wrappedNodeParent, wrappedNode, [wrapperNode], true);\n    this.updateNodeCache();\n    this.invokeTreeUpdateListeners();\n    return wrapperNode;\n  }\n\n  public deleteNode(nodeId: string, withHierarchy: boolean) {\n    const doomedNode = this.getNode(nodeId);\n    const doomedNodeParent = this.getNodeParent(nodeId);\n    this.replaceOrEmsiblingNode(doomedNodeParent, doomedNode, (withHierarchy ? [] : doomedNode.children), true);\n    this.updateNodeCache();\n    this.invokeTreeUpdateListeners();\n  }\n\n  public addSiblingNode(nodeId: string, module: string) {\n    const newNode = configure(module, {});\n    const node = this.getNode(nodeId);\n    const nodeParent = this.getNodeParent(nodeId);\n    this.replaceOrEmsiblingNode(nodeParent, node, [newNode], false);\n    this.updateNodeCache();\n    this.invokeTreeUpdateListeners();\n  }\n\n  public moveNode(sourceNodeId: string, newParentNodeId: string | null) {\n    if (sourceNodeId === newParentNodeId) {\n      return false;\n    }\n    const sourceNode = this.getNode(sourceNodeId);\n    const sourceNodeParent = this.getNodeParent(sourceNodeId);\n    // Remove from parent...\n    this.replaceOrEmsiblingNode(sourceNodeParent, sourceNode, [], true);\n    // Add to new parent.\n    this.addChildInternal(newParentNodeId, sourceNode);\n    this.updateNodeCache();\n    this.invokeTreeUpdateListeners();\n    return true;\n  }\n\n  public copyNode(sourceNodeId: string, targetNodeId: string | null) {\n    const copiedNode = duplicate(this.getNode(sourceNodeId));\n    this.addChildInternal(targetNodeId, copiedNode);\n    this.updateNodeCache();\n    this.invokeTreeUpdateListeners();\n    return true;\n  }\n}\n","import * as React from 'react';\n\nexport default ({path, props}: { path: string, props?: object }) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" {...props}>\n    <path d={path} />\n  </svg>\n);\n","import * as cx from 'classnames';\nimport * as React from 'react';\nimport Icon from './Icon';\n\nconst GlobalToolbarIcons = {\n  fileTree: require('material-design-icons-svg/paths/file-tree'),\n  save: require('material-design-icons-svg/paths/content-save'),\n  tune: require('material-design-icons-svg/paths/tune'),\n};\n\nexport default class GlobalToolbar extends React.Component<{\n  activeTab: string,\n  onChangeTab: (id: string) => void,\n}, any> {\n  public render() {\n    const tabs = [\n      {id: 'tree', icon: GlobalToolbarIcons.fileTree},\n      {id: 'file', icon: GlobalToolbarIcons.save},\n      {id: 'gvars', icon: GlobalToolbarIcons.tune},\n    ];\n    return (\n      <div id=\"global-toolbar\" className=\"toolbar\">\n        {tabs.map((t) =>\n          <div\n            key={t.id}\n            className={cx('btn', {active: this.props.activeTab === t.id})}\n            title={t.id}\n            onClick={() => this.props.onChangeTab(t.id)}\n          >\n            <Icon path={t.icon} />\n          </div>,\n        )}\n      </div>\n    );\n  }\n\n}\n","import * as React from 'react';\nimport GlobalToolbar from '../components/GlobalToolbar';\nimport {TreeManager} from '../managers/TreeManager';\nimport FilePanel from '../sidebar-panels/FilePanel';\nimport TreePanel from '../sidebar-panels/TreePanel';\nimport {Document, GVar, NodeConfig} from '../types';\nimport Context from '../universe/Context';\nimport Status from '../universe/Status';\nimport makeDefaultConfig from '../utils/defaultConfig';\nimport * as storage from '../utils/storage';\nimport {deserialize, serialize} from '../utils/serde';\nimport GVarsPanel from '../sidebar-panels/GVarsPanel';\nimport {removeInPlace} from \"../utils/arrays\";\n\ninterface AppState {\n  selectedNodeId: string | null;\n  rendered: any;\n  status: Status;\n  activeTab: 'tree' | 'gvars' | 'file';\n  document: Document;\n}\n\nconst STORAGE_KEY = 'coilSave';\n\nexport default class App extends React.Component<{}, AppState> {\n\n  private treeManager: TreeManager = new TreeManager();\n\n  public state: AppState = {\n    selectedNodeId: null,\n    rendered: null,\n    status: new Status(),\n    activeTab: 'tree',\n    document: {\n      nodes: [],\n      width: 800,\n      height: 800,\n      background: '',\n      gvars: [],\n    },\n  };\n\n  public componentDidMount() {\n    this.treeManager.addTreeUpdateListener((tree) => {\n      this.renderDrawing(tree);\n    });\n    this.treeManager.addTreeUpdateListener((tree) => {\n      this.saveToStorage(tree);\n    });\n\n    this.loadFromStorage();\n  }\n\n  private saveToStorage(tree?: NodeConfig[]) {\n    storage.save(STORAGE_KEY, serialize(this.state.document, tree || this.treeManager.getTree()));\n  }\n\n  private loadFromStorage() {\n    const storageObj = storage.load(STORAGE_KEY);\n    if (!storageObj) {\n      this.treeManager.replaceTree(makeDefaultConfig());\n      return;\n    }\n    try {\n      const document = deserialize(storageObj);\n      this.loadDocument(document);\n    } catch (e) {\n      alert('Loading document from storage failed: ' + e);\n    }\n  }\n\n  private loadDocument = (document: Document): void => {\n    const nodes = document.nodes;\n    document.nodes = [];  // Just to make sure people know this is irrelevant\n    this.setState({document});\n    this.treeManager.replaceTree(nodes);\n  }\n\n  private onSelectNode = (nodeConfig: NodeConfig | null): void => {\n    this.setState({\n      selectedNodeId: (nodeConfig ? nodeConfig.id : null),\n    });\n  }\n\n  public renderDrawing(tree: NodeConfig[]) {\n    const status = new Status();\n    const rootPseudoNode = {id: 'root', module: 'root', config: {}, children: tree};\n    const context = new Context(status, rootPseudoNode);\n    const {width, height, background, gvars} = this.state.document;\n    gvars.forEach((gvar) => {\n      context.variables[gvar.name] = gvar.value;\n    });\n    let renderedChildren;\n    try {\n      renderedChildren = context.renderChildren();\n    } catch (e) {\n      renderedChildren = <text y={50} x={50}>{e.toString()}</text>;\n      console.error(renderedChildren);\n    }\n    const rendered = (\n      <svg width={width} height={height} viewBox={`0 0 ${width} ${height}`}>\n        {background ? <rect x={0} y={0} width={width} height={height} fill={background} id=\"background\" /> : null}\n        {renderedChildren}\n      </svg>\n    );\n    this.setState({rendered, status});\n  }\n\n  public onChangeTab = (tabId) => {\n    this.setState({activeTab: tabId});\n  }\n\n  private onChangeDocumentVariable = (variableName: keyof Document, value: string) => {\n    const document = this.state.document;\n    switch (variableName) {\n      case 'width':\n      case 'height':\n        document[variableName] = parseInt(value, 10);\n        break;\n      default:\n        document[variableName] = value;\n    }\n    this.setState({document}, () => {\n      this.redrawCurrent();\n    });\n  }\n\n  private redrawCurrent(save: boolean = true) {\n    const tree = this.treeManager.getTree() as NodeConfig[];\n    this.renderDrawing(tree);\n    if (save) {\n      this.saveToStorage(tree);\n    }\n  }\n\n  private onAddGvar = () => {\n    const document = this.state.document;\n    const getNextGvarName = () => {\n      for (let i = 0; ; i++) {\n        const name = `${String.fromCharCode(97 + document.gvars.length)}`;\n        if (document.gvars.some((g) => g.name === name)) {\n          continue;\n        }\n        return name;\n      }\n    };\n    document.gvars.push({\n      name: getNextGvarName(),\n      type: 'number',\n      min: 0,\n      max: 1,\n      value: 0,\n    });\n    this.setState({document});\n  }\n\n  private onModifyGvar = (gvar: GVar, key: keyof GVar, value: any) => {\n    const document = this.state.document;\n    if (document.gvars.includes(gvar)) {\n      gvar[key] = value;\n      this.setState({document}, () => {\n        if (key === 'value') {\n          this.redrawCurrent();\n        }\n      });\n    }\n  }\n  private onChangeGvarValue = (gvar: GVar, value: any) => {\n    const document = this.state.document;\n    if (document.gvars.includes(gvar)) {\n      if (gvar.type === 'number') {\n        const numVal = parseFloat(value);\n        if (isNaN(numVal)) {\n          return;\n        }\n        gvar.value = numVal;\n      }\n      this.setState({document}, () => {\n        this.redrawCurrent();\n      });\n    }\n  }\n\n  private onDeleteGvar = (gvar: GVar) => {\n    const document = this.state.document;\n    if (removeInPlace(document.gvars, gvar)) {\n      this.setState({document}, () => {\n        this.redrawCurrent();\n      });\n    }\n  }\n\n  public render() {\n    const {selectedNodeId, rendered, status, activeTab, document} = this.state;\n    const {treeManager} = this;\n    const selectedNodeConfig = treeManager.getNodeOrNull(selectedNodeId!);\n    let configContent: React.ReactElement<any> | null = null;\n    switch (activeTab) {\n      case 'tree':\n        configContent = (\n          <TreePanel\n            document={document}\n            treeManager={this.treeManager}\n            status={this.state.status}\n            selectedNodeId={this.state.selectedNodeId}\n            onSelectNode={this.onSelectNode}\n            onChangeDocumentVariable={this.onChangeDocumentVariable}\n            onChangeGvarValue={this.onChangeGvarValue}\n          />\n        );\n        break;\n      case 'file':\n        configContent = (\n          <FilePanel\n            treeManager={this.treeManager}\n            rendered={rendered}\n            document={document}\n            onLoadDocument={this.loadDocument}\n          />\n        );\n        break;\n      case 'gvars':\n        configContent = (\n          <GVarsPanel\n            document={document}\n            onAddGvar={this.onAddGvar}\n            onModifyGvar={this.onModifyGvar}\n            onDeleteGvar={this.onDeleteGvar}\n          />\n        );\n        break;\n    }\n    return (\n      <>\n        <div id=\"config\">\n          <GlobalToolbar activeTab={activeTab} onChangeTab={this.onChangeTab} />\n          {configContent}\n        </div>\n        <div id=\"drawing\">\n          {rendered}\n        </div>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './views/App';\nimport './style.scss';\n\nconst wrapper = document.createElement('div');\nwrapper.id = 'wrapper';\ndocument.body.appendChild(wrapper);\n\nReactDOM.render(<App />, wrapper);\n"],"sourceRoot":""}