{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/universe/render.tsx","webpack:///./src/modules/registry.ts","webpack:///./src/modules/MatrixUtils.ts","webpack:///./src/modules/TransformVariables.ts","webpack:///./src/modules/PresentationVariables.ts","webpack:///./src/utils/serde.ts","webpack:///./src/modules/Module.tsx","webpack:///./src/universe/configure.tsx","webpack:///./src/utils/storage.ts","webpack:///./src/utils/defaultConfig.ts","webpack:///./src/universe/Status.tsx","webpack:///./src/utils/RandomGenerator.ts","webpack:///./src/utils/evaluator.ts","webpack:///./src/universe/Context.tsx","webpack:///./src/modules/pseudo/Document.tsx","webpack:///./src/components/TreeToolbar.tsx","webpack:///./src/components/NodeTree.tsx","webpack:///./src/components/NodeConfigView.tsx","webpack:///./src/sidebar-panels/TreePanel.tsx","webpack:///./src/sidebar-panels/FilePanel.tsx","webpack:///./src/modules/prim/Rect.tsx","webpack:///./src/utils/dumbMemoize.ts","webpack:///./src/modules/prim/Ngon.tsx","webpack:///./src/modules/SVGUtils.ts","webpack:///./src/modules/prim/Ellipse.tsx","webpack:///./src/modules/modify/Xform.tsx","webpack:///./src/modules/modify/RemoveChildren.tsx","webpack:///./src/modules/modify/Choose.tsx","webpack:///./src/modules/array/RectArray.tsx","webpack:///./src/modules/array/LinearArray.tsx","webpack:///./src/managers/TreeManager.tsx","webpack:///./src/components/Icon.tsx","webpack:///./src/components/GlobalToolbar.tsx","webpack:///./src/views/App.tsx","webpack:///./src/index.tsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","registry_1","renderNode","context","nodeConfig","default","Error","status","addVariables","id","variables","render","subcontext","e","console","error","renderNodesInto","targetArray","nodes","renderedElts","LinearArray_1","RectArray_1","Choose_1","RemoveChildren_1","Xform_1","Ellipse_1","Ngon_1","Rect_1","registry","Choose","Ellipse","LinearArray","Ngon","Rect","RectArray","RemoveChildren","Xform","keys","forEach","displayName","transformation_matrix_1","multiply","m1","m2","a","b","f","makeMatrix","_a","x","y","sx","sy","matrix","translate","isFinite","rotateDEG","scale","splitMatrixAndProps","props","newProps","assign","group","type","version","serialize","document","docWithNodes","__assign","deserialize","obj","Array","isArray","width","height","background","from","doc","getVariableDefaults","defaults","v","UniversalVariables","lodash_1","Module_1","generateId","Math","floor","random","toString","duplicate","walk","wConfig","config","cloneDeep","children","map","configure","moduleName","load","rawValue","localStorage","getItem","JSON","parse","save","undefined","setItem","stringify","removeItem","configure_1","seed","numberX","numberY","variableX","variableY","radius1","radius2","vertices","fill","Status","this","nodeErrors","nodeVariables","addError","nodeId","getErrorsForNode","getVariablesForNode","Set","add","sort","seedString","charCodeAt","hashString","expressionFnCache","evaluateExpression","expression","namespace","startsWith","Function","test","parseFloat","evaluator_1","RandomGenerator_1","render_1","_evaluate","node","tag","errorDefault","err","warn","Context","parent","idPrefix","defaultNamespace","prepareNamespace","forNode","newVariables","mergedVariables","min","max","rng","evaluateFromNodeConfig","val","additionalVariables","_this","creator","memoizeOnFirstInvocation","rand","evaluate","evaluateAll","expressionMap","evaluated","evaluateNodeConfig","getId","suffix","renderChildren","acceptsChildren","noUniversalVariables","React","react_simple_dropdown_1","nodeAcceptsChildren","TreeToolbar","_super","arguments","dropdowns","__extends","handleAddNode","method","treeManager","selectedNode","addChildNode","addSiblingNode","wrapNode","hideDropdowns","handleDeleteNode","withHierarchy","deleteNode","values","dropdown","hide","childMode","childText","allowAddSibling","getNodeParentOrNull","createElement","className","disabled","ref","instance","wrap","DropdownTrigger","DropdownContent","filter","href","onClick","addChild","addSibling","title","event","shiftKey","preventDefault","Component","TreeNode","onSelectNode","onRepositionNode","draggable","stopPropagation","onDragStart","dataTransfer","clearData","setData","effectAllowed","onDragOver","dropEffect","types","indexOf","altKey","onDrop","sourceNodeId","getData","copy","TreeLevel","nodeConfigs","currentTarget","VariableConfigRow","variable","onChange","extraControls","input","handleChange","target","choices","NodeConfigView","moduleClass","forceModule","variableDefinitions","concat","variablesByGroup","groupBy","variablesForNode","Fragment","colSpan","join","NodeConfigView_1","NodeTree_1","TreeToolbar_1","Document_1","TreePanel","onChangeNodeVariable","variableName","newValue","changeNodeVariable","forceUpdate","onChangeDocumentVariable","replace","targetNodeId","copyNode","moveNode","selectedNodeId","selectedNodeConfig","getNodeOrNull","getTree","ReactDOMServer","serde_1","FilePanel","state","serializedState","dumpState","setState","loadState","stateJson","alert","onLoadDocument","saveSVG","svgString","renderToStaticMarkup","rendered","blob","Blob","url","URL","createObjectURL","downloadLink","download","Date","body","appendChild","click","setTimeout","parentNode","removeChild","revokeObjectURL","TransformVariables_1","MatrixUtils_1","PresentationVariables_1","transform","toSVG","fn","memo","memoizedFn","args","_i","argsStr","__spread","dumbMemoize_1","TWO_PI","PI","generatePathString","tilt1","tilt2","path","radius","angle","cos","sin","isNaN","toFixed","cleanPresentationProps","stroke","SVGUtils_1","radiusX","radiusY","cx","cy","rx","ry","opacity","indexVariable","filterContext","keepExpression","keep","child","index","_b","childIndex","parseInt","THREE_OVER_TWO","SQRT_THREE","sqrt","SQRT_THREE_OVER_TWO","makeHex","hex","round","_c","__read","hexX","hexY","number","nNumber","TreeManager","tree","nodeCache","treeUpdateListeners","replaceTree","newTree","updateNodeCache","invokeTreeUpdateListeners","newNodeCache","setImmediate","listener","cacheEntry","getNodeCacheEntry","getNode","getNodeParent","check","replaceOrEmsiblingNode","nodeToReplace","newNodes","childList","addTreeUpdateListener","parentNodeId","newNode","addChildInternal","wrappedNode","wrappedNodeParent","wrapperNode","doomedNode","doomedNodeParent","nodeParent","newParentNodeId","sourceNode","sourceNodeParent","copiedNode","xmlns","viewBox","Icon_1","GlobalToolbarIcons","fileTree","GlobalToolbar","tabs","icon","active","activeTab","onChangeTab","GlobalToolbar_1","TreeManager_1","FilePanel_1","TreePanel_1","Context_1","Status_1","defaultConfig_1","storage","App","loadDocument","tabId","renderDrawing","componentDidMount","saveToStorage","loadFromStorage","storageObj","renderedChildren","rootPseudoNode","configContent","ReactDOM","App_1","wrapper"],"mappings":"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","file":"main.98768060.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([72,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","// tslint:disable prefer-for-of\nimport Module from '../modules/Module';\nimport registry from '../modules/registry';\nimport {NodeConfig} from '../types';\nimport Context from './Context';\n\nexport function renderNode(context: Context, nodeConfig: NodeConfig) {\n  const module: Module = registry[nodeConfig.module];\n  if (!module) {\n    throw new Error(`not registered ${nodeConfig.module}`);\n  }\n  try {\n    context.status.addVariables(nodeConfig.id, context.variables);\n    return module.render(context.subcontext(nodeConfig, {}, nodeConfig.id));\n  } catch (e) {\n    console.error(e);\n    return [];\n  }\n}\n\nexport function renderNodesInto(targetArray: any[], nodes: NodeConfig[], context: Context) {\n  for (let i = 0; i < nodes.length; i++) {\n    const renderedElts = renderNode(context, nodes[i]);\n    for (let j = 0; j < renderedElts.length; j++) {\n      targetArray.push(renderedElts[j]);\n    }\n  }\n}\n","import LinearArray from './array/LinearArray';\nimport RectArray from './array/RectArray';\nimport Choose from './modify/Choose';\nimport RemoveChildren from './modify/RemoveChildren';\nimport Xform from './modify/Xform';\nimport Module from './Module';\nimport Ellipse from './prim/Ellipse';\nimport Ngon from './prim/Ngon';\nimport Rect from './prim/Rect';\n\nconst registry = {\n  Choose,\n  Ellipse,\n  LinearArray,\n  Ngon,\n  Rect,\n  RectArray,\n  RemoveChildren,\n  Xform,\n} as { [name: string]: Module };\nexport default registry;\n\nObject.keys(registry).forEach((name) => {\n  (registry[name].render as any).displayName = `render_${name}`;\n});\n","import {rotateDEG, scale, translate} from 'transformation-matrix';\nimport {VariableMap} from '../types';\n\nconst multiply = (m1: Matrix, m2: Matrix): Matrix => {\n  return {\n    a: m1.a * m2.a + m1.c * m2.b,\n    b: m1.b * m2.a + m1.d * m2.b,\n    c: m1.a * m2.c + m1.c * m2.d,\n    d: m1.b * m2.c + m1.d * m2.d,\n    e: m1.a * m2.e + m1.c * m2.f + m1.e,\n    f: m1.b * m2.e + m1.d * m2.f + m1.f,\n  };\n};\n\nexport interface TransformBag {\n  x: number;\n  y: number;\n  r: number;\n  sx: number;\n  sy: number;\n}\n\nexport function makeMatrix({x, y, r, sx, sy}: TransformBag): Matrix {\n  let matrix = translate(isFinite(x) ? x : 0, isFinite(y) ? y : 0);\n  if (isFinite(r)) {\n    matrix = multiply(matrix, rotateDEG(r));\n  }\n  if (isFinite(sx) && isFinite(sy)) {\n    matrix = multiply(matrix, scale(sx, sy));\n  }\n  return matrix;\n}\n\nexport function splitMatrixAndProps(props: VariableMap): {\n  matrix: Matrix,\n  props: VariableMap,\n} {\n  const matrix = makeMatrix(props as TransformBag);\n  const newProps = Object.assign({}, props);\n  delete newProps.x;\n  delete newProps.y;\n  delete newProps.r;\n  delete newProps.sx;\n  delete newProps.sy;\n  return {matrix, props: newProps};\n}\n","import VariableDefinition from './VariableDefinition';\n\nconst group = 'Transform';\nexport default [\n  {name: 'x', default: '0', group},\n  {name: 'y', default: '0', group},\n  {name: 'r', default: '0', group},\n  {name: 'sx', default: '1', group},\n  {name: 'sy', default: '1', group},\n] as VariableDefinition[];\n","import VariableDefinition from './VariableDefinition';\n\nconst group = 'Presentation';\nexport default [\n  {name: 'fill', default: '#333', group, type: 'color'},\n  {name: 'stroke', default: '', group, type: 'color'},\n  {name: 'strokeWidth', default: '0', group, type: 'number'},\n  {name: 'opacity', default: '1', group, type: 'number'},\n] as VariableDefinition[];\n","import {Document, NodeConfig, SerializedDocument} from '../types';\n\nconst version = '0.1';\n\nexport function serialize(document: Document, nodes: ReadonlyArray<NodeConfig>): SerializedDocument {\n  const docWithNodes: Document = {...document, nodes: nodes as NodeConfig[]};\n  return {version, ...docWithNodes};\n}\n\nexport function deserialize(obj: any): Document {\n  if (Array.isArray(obj)) {\n    return {\n      width: 800,\n      height: 800,\n      background: '',\n      nodes: Array.from(obj),\n    };\n  }\n  if (typeof obj !== 'object') {\n    throw new Error('Not an object');\n  }\n  if (obj.version === version) {\n    const doc: SerializedDocument = {...obj};\n    delete doc.version;\n    return (doc as Document);\n  }\n  throw new Error(`Object version ${obj.version} not understood`);\n}\n","import {ReactElement} from 'react';\nimport Context from '../universe/Context';\nimport VariableDefinition from './VariableDefinition';\n\n// tslint:disable-next-line:interface-name\nexport default interface Module {\n  acceptsChildren: boolean;\n  noUniversalVariables?: boolean;\n  variables: VariableDefinition[];\n\n  render(context: Context): Array<ReactElement<any>>;\n}\n\nexport function getVariableDefaults(module: Module): object {\n  const defaults = {};\n  module.variables.forEach((v) => {\n    defaults[v.name] = v.default;\n  });\n  return defaults;\n}\n\nexport const UniversalVariables = [\n  {name: 'seed', default: '', group: 'Randomness'},\n] as VariableDefinition[];\n","import {cloneDeep} from 'lodash';\nimport Module, {getVariableDefaults} from '../modules/Module';\nimport registry from '../modules/registry';\nimport {NodeConfig} from '../types';\n\nfunction generateId() {\n  return `${Math.floor(Math.random() * 0xFFFFFFFF).toString(36)}`;\n}\n\nexport function duplicate(nodeConfig: NodeConfig): NodeConfig {\n  function walk(wConfig: NodeConfig): NodeConfig {\n    return {\n      id: generateId(),\n      module: wConfig.module,\n      config: cloneDeep(wConfig.config),\n      children: wConfig.children.map(walk),\n    };\n  }\n\n  return walk(nodeConfig);\n}\n\nexport function configure(\n  moduleName: string,\n  variables: { [key: string]: any },\n  children: NodeConfig[] = [],\n): NodeConfig {\n  const module: Module = registry[moduleName];\n  const defaults = getVariableDefaults(module);\n  return {\n    id: generateId(),\n    module: moduleName,\n    config: Object.assign({}, defaults, variables),\n    children,\n  };\n}\n","export function load(key: string): any | undefined {\n  const rawValue = localStorage.getItem(key);\n  if (!rawValue) {\n    return undefined;\n  }\n  try {\n    return JSON.parse(rawValue);\n  } catch (e) {\n    return undefined;\n  }\n}\n\nexport function save(key: string, value: any) {\n  if (value === undefined || value === null) {\n    localStorage.removeItem(key);\n    return;\n  }\n  localStorage.setItem(key, JSON.stringify(value));\n}\n","import {NodeConfig} from '../types';\nimport {configure} from '../universe/configure';\n\nexport default function makeDefaultConfig(): NodeConfig[] {\n  return [\n    configure(\n      'RemoveChildren',\n      {\n        seed: 'foo',\n      },\n      [\n        configure(\n          'RectArray',\n          {\n            numberX: '7',\n            numberY: '7',\n            variableX: 'i',\n            variableY: 'j',\n          },\n          [\n            configure('Ngon', {\n              radius1: '15',\n              radius2: '5',\n              vertices: '10',\n              x: '=15 + i * 30',\n              y: '=30 + j * 30',\n              fill: 'blue',\n            }),\n          ]),\n      ]),\n  ];\n}\n","import {VariableMap} from '../types';\n\nexport default class Status {\n  private nodeErrors: { [key: string]: string[] } = {};\n  private nodeVariables: { [key: string]: VariableMap[] } = {};\n\n  public addError(nodeId: string, error: string) {\n    if (!(nodeId in this.nodeErrors)) {\n      this.nodeErrors[nodeId] = [];\n    }\n    this.nodeErrors[nodeId].push(error);\n  }\n\n  public getErrorsForNode(nodeId: string): ReadonlyArray<string> {\n    return (nodeId in this.nodeErrors ? this.nodeErrors[nodeId] : []);\n  }\n\n  public addVariables(nodeId: string, variables: VariableMap) {\n    if (!(nodeId in this.nodeVariables)) {\n      this.nodeVariables[nodeId] = [];\n    }\n    this.nodeVariables[nodeId].push(Object.assign({}, variables));\n  }\n\n  public getVariablesForNode(nodeId: string): string[] {\n    if (!(nodeId in this.nodeVariables)) {\n      return [];\n    }\n    const variables = new Set();\n    this.nodeVariables[nodeId].forEach((map) => {\n      Object.keys(map).forEach((key) => {\n        return variables.add(key);\n      });\n    });\n    return Array.from(variables).sort();\n  }\n\n}\n","function hashString(s: string) {\n  let seed = 0;\n  for (let i = 0; i < s.length; i++) {\n    seed ^= (i % 16) << s.charCodeAt(i);\n  }\n  return seed;\n}\n\n// Based on https://gist.github.com/blixt/f17b47c62508be59987b\n// which is based on http://www.firstpr.com.au/dsp/rand31/\n\nexport type RandomGenerator = () => number;\n\nexport default function createRandomGenerator(seedString?: string): RandomGenerator {\n  let seed = (seedString ? hashString(seedString) : (Math.random() * 2147483647));\n\n  const next = () => {\n    return seed = seed * 16807 % 2147483647;\n  };\n\n  return function nextFloat() {\n    return (next() - 1) / 2147483646;\n  };\n}\n","import {VariableMap} from '../types';\n\nexport type NamespaceFn = () => VariableMap;\n\nconst expressionFnCache = {};\n\nexport function evaluateExpression(expression: string, namespace: NamespaceFn): any {\n  if (expression.startsWith('=')) {\n    const exprFun = (\n      expression in expressionFnCache ?\n        expressionFnCache[expression] :\n        expressionFnCache[expression] = new Function('namespace', `with(namespace) { return ${expression.slice(1)}}`)\n    );\n    return exprFun(namespace());\n  }\n  if (/[+-][0-9.]+/.test(expression)) {\n    return parseFloat(expression);\n  }\n  return `${expression}`;\n}\n","import {ExpressionMap, NodeConfig, VariableMap} from '../types';\nimport {evaluateExpression, NamespaceFn} from '../utils/evaluator';\nimport {default as createRandomGenerator, RandomGenerator} from '../utils/RandomGenerator';\nimport {renderNodesInto} from './render';\nimport Status from './Status';\n\nfunction _evaluate(\n  status: Status,\n  node: NodeConfig,\n  tag: string,\n  expression: string,\n  namespace: NamespaceFn,\n  errorDefault: any = null,\n): any {\n  try {\n    return evaluateExpression(expression, namespace);\n  } catch (err) {\n    status.addError(node.id, `${tag}: ${err}`);\n    console.warn(err);\n    return errorDefault;\n  }\n}\n\nfunction memoizeOnFirstInvocation<T>(creator: () => T): () => T {\n  let t: T | undefined;\n  return () => {\n    if (t === undefined) {\n      t = creator();\n    }\n    return t;\n  };\n}\n\nexport default class Context {\n  private rng?: RandomGenerator;\n  private defaultNamespace: NamespaceFn;\n\n  constructor(\n    readonly status: Status,\n    readonly node: NodeConfig,\n    readonly parent: Context | null = null,\n    readonly variables: VariableMap = {},\n    readonly idPrefix: string = '',\n  ) {\n    this.defaultNamespace = this.prepareNamespace();\n  }\n\n  public subcontext(\n    forNode: NodeConfig,\n    newVariables: VariableMap = {},\n    idPrefix: string = '',\n  ): Context {\n    const mergedVariables = Object.assign({}, this.variables, newVariables);\n    return new Context(\n      this.status,\n      forNode,\n      this,\n      mergedVariables,\n      `${this.idPrefix}.${idPrefix}`,\n    );\n  }\n\n  public random(min?: number, max?: number) {\n    if (!this.rng) {\n      const seed = this.evaluateFromNodeConfig('seed');\n      this.rng = createRandomGenerator(seed);\n    }\n    const val = this.rng();\n    if (min !== undefined) {\n      if (max === undefined) {\n        return val * min;\n      }\n      return min + val * (max - min);\n    }\n    return val;\n  }\n\n  public prepareNamespace(additionalVariables?: VariableMap): NamespaceFn {\n    return memoizeOnFirstInvocation(() => ({\n      rand: this.random.bind(this),\n      ...this.variables,\n      ...additionalVariables,\n    }));\n  }\n\n  public evaluateFromNodeConfig(key: string): any {\n    const expression = this.node.config[key]!;\n    if (expression === undefined) {\n      return null;\n    }\n    return _evaluate(this.status, this.node, key, expression, this.defaultNamespace);\n  }\n\n  public evaluate(tag: string, expression: string, additionalVariables?: VariableMap): any {\n    const namespace = this.prepareNamespace(additionalVariables);\n    return _evaluate(this.status, this.node, tag, expression, namespace);\n  }\n\n  public evaluateAll(\n    node: NodeConfig,\n    expressionMap: ExpressionMap,\n    additionalVariables?: VariableMap,\n  ): VariableMap {\n    const evaluated = {};\n    const namespace = this.prepareNamespace(additionalVariables);\n    for (const tag in expressionMap) {\n      if (expressionMap.hasOwnProperty(tag)) {\n        const expression = expressionMap[tag];\n        if (expression !== null) {\n          evaluated[tag] = _evaluate(this.status, this.node, tag, expression, namespace);\n        }\n      }\n    }\n    return evaluated;\n  }\n\n  public evaluateNodeConfig(node: NodeConfig = this.node): VariableMap {\n    return this.evaluateAll(node, node.config);\n  }\n\n  public getId(suffix: string = this.node.id) {\n    return this.idPrefix + suffix;\n  }\n\n  public renderChildren(context: Context = this) {\n    const nodes: Element[] = [];\n    renderNodesInto(nodes, this.node.children, context);\n    return nodes;\n  }\n}\n","import * as React from 'react';\nimport Module from '../Module';\nimport Context from '../../universe/Context';\nexport default {\n  variables: [\n    {group: 'Document', name: 'width', default: '800'},\n    {group: 'Document', name: 'height', default: '800'},\n    {group: 'Document', name: 'background', default: '', type: 'color'},\n  ],\n  acceptsChildren: false,\n  noUniversalVariables: true,\n\n  render(context: Context) {\n    throw new Error('Document.render() should not be called');\n  },\n} as Module;\n","import * as React from 'react';\nimport Dropdown, {DropdownContent, DropdownTrigger} from 'react-simple-dropdown';\nimport {TreeManager} from '../managers/TreeManager';\nimport registry from '../modules/registry';\nimport {NodeConfig} from '../types';\n\ninterface ToolbarProps {\n  treeManager: TreeManager;\n  selectedNode: NodeConfig | null;\n}\n\nfunction nodeAcceptsChildren(node: NodeConfig | null) {\n  return (node && registry[node.module] && registry[node.module].acceptsChildren);\n}\n\nexport default class TreeToolbar extends React.Component<ToolbarProps, any> {\n  private dropdowns: { [key: string]: Dropdown } = {};\n\n  private handleAddNode(method: 'wrap' | 'child' | 'sibling', module: string) {\n    const {treeManager, selectedNode} = this.props;\n    switch (method) {\n      case 'child':\n        treeManager.addChildNode((selectedNode ? selectedNode.id : null), module);\n        break;\n      case 'sibling':\n        treeManager.addSiblingNode(selectedNode!.id, module);\n        break;\n      case 'wrap':\n        treeManager.wrapNode(selectedNode!.id, module);\n    }\n    this.hideDropdowns();\n  }\n\n  private handleDeleteNode(withHierarchy: boolean) {\n    const {treeManager, selectedNode} = this.props;\n    treeManager.deleteNode(selectedNode!.id, withHierarchy);\n  }\n\n  public hideDropdowns() {\n    Object.values(this.dropdowns).forEach((dropdown) => {\n      return dropdown.hide();\n    });\n  }\n\n  public render() {\n    const {selectedNode} = this.props;\n    let childMode: string | null = null;\n    let childText: string = 'Node';\n    let allowAddSibling = false;\n    if (selectedNode === null) {\n      childMode = 'child';\n      childText = 'Node';\n    }\n    if (nodeAcceptsChildren(selectedNode)) {\n      childMode = 'child';\n      childText = 'Child';\n    }\n    if (selectedNode) {\n      const parent = this.props.treeManager.getNodeParentOrNull(selectedNode.id);\n      if (parent === null || nodeAcceptsChildren(parent)) {\n        allowAddSibling = true;\n      }\n    }\n    return (\n      <div id=\"tree-toolbar\" className=\"toolbar\">\n        <Dropdown\n          disabled={!selectedNode}\n          ref={(instance) => {\n            this.dropdowns.wrap = instance;\n          }}\n        >\n          <DropdownTrigger className=\"btn\">Wrap...</DropdownTrigger>\n          <DropdownContent className=\"node-select\">\n            {Object.keys(registry).filter((module) => registry[module].acceptsChildren).map((module) => (\n              <a href=\"#\" key={module} onClick={() => this.handleAddNode('wrap', module)}>{module}</a>\n            ))}\n          </DropdownContent>\n        </Dropdown>\n        <Dropdown\n          disabled={!childMode}\n          ref={(instance) => {\n            this.dropdowns.addChild = instance;\n          }}\n        >\n          <DropdownTrigger className=\"btn\">Add {childText}...</DropdownTrigger>\n          <DropdownContent className=\"node-select\">\n            {Object.keys(registry).map((module) => (\n              <a href=\"#\" key={module} onClick={() => this.handleAddNode('child', module)}>{module}</a>\n            ))}\n          </DropdownContent>\n        </Dropdown>\n        <Dropdown\n          disabled={!allowAddSibling}\n          ref={(instance) => {\n            this.dropdowns.addSibling = instance;\n          }}\n        >\n          <DropdownTrigger className=\"btn\">Add Sibling...</DropdownTrigger>\n          <DropdownContent className=\"node-select\">\n            {Object.keys(registry).map((module) => (\n              <a href=\"#\" key={module} onClick={() => this.handleAddNode('sibling', module)}>{module}</a>\n            ))}\n          </DropdownContent>\n        </Dropdown>\n        <div\n          className={'btn ' + (selectedNode ? '' : 'disabled')}\n          title=\"Shift-click to delete with hierarchy\"\n          onClick={(event) => {\n            this.handleDeleteNode(event.shiftKey);\n            event.preventDefault();\n          }}\n        >\n          Delete\n        </div>\n      </div>\n    );\n  }\n\n}\n","import * as React from 'react';\nimport registry from '../modules/registry';\nimport {NodeConfig} from '../types';\n\ninterface TreeCommonProps {\n  selectedNode: NodeConfig | null;\n  onSelectNode: (node: NodeConfig | null) => void;\n  onRepositionNode: (sourceNodeId: string, targetNodeId: string, copy: boolean) => void;\n}\n\ntype TreeNodeProps = TreeCommonProps & {\n  nodeConfig: NodeConfig,\n};\n\ntype TreeLevelProps = TreeCommonProps & {\n  nodeConfigs: ReadonlyArray<NodeConfig>,\n};\n\nconst DRAG_AND_DROP_DATA_ID = 'application/x-coil-nodeid';\n\nconst TreeNode = ({nodeConfig, selectedNode, onSelectNode, onRepositionNode}: TreeNodeProps) => (\n  <li className={selectedNode === nodeConfig ? 'selected' : ''}>\n    <a\n      href=\"#\"\n      draggable={true}\n      onClick={(e) => {\n        onSelectNode(nodeConfig);\n        e.preventDefault();\n        e.stopPropagation();\n      }}\n      onDragStart={(event) => {\n        event.dataTransfer.clearData();\n        event.dataTransfer.setData(DRAG_AND_DROP_DATA_ID, nodeConfig.id);\n        event.dataTransfer.effectAllowed = 'all';\n      }}\n      onDragOver={(event) => {\n        event.dataTransfer.dropEffect = 'none';\n        if (event.dataTransfer.types.indexOf(DRAG_AND_DROP_DATA_ID) > -1) {\n          if (registry[nodeConfig.module].acceptsChildren) {\n            event.dataTransfer.dropEffect = (event.altKey ? 'copy' : 'link');\n            event.preventDefault();\n          }\n        }\n      }}\n      onDrop={(event) => {\n        const sourceNodeId = event.dataTransfer.getData(DRAG_AND_DROP_DATA_ID);\n        event.dataTransfer.dropEffect = (event.altKey ? 'copy' : 'link');\n        const copy = (event.dataTransfer.dropEffect === 'copy');\n        onRepositionNode(sourceNodeId, nodeConfig.id, copy);\n      }}\n    >\n      {nodeConfig.module}\n    </a>\n    {nodeConfig.children.length ?\n      <TreeLevel\n        nodeConfigs={nodeConfig.children}\n        selectedNode={selectedNode}\n        onSelectNode={onSelectNode}\n        onRepositionNode={onRepositionNode}\n      />\n      : null\n    }\n  </li>\n);\n\nconst TreeLevel = ({nodeConfigs, selectedNode, onSelectNode, onRepositionNode}: TreeLevelProps) => (\n  <ul>\n    {nodeConfigs.map((nodeConfig: NodeConfig) => (\n      <TreeNode\n        key={nodeConfig.id}\n        nodeConfig={nodeConfig}\n        selectedNode={selectedNode}\n        onSelectNode={onSelectNode}\n        onRepositionNode={onRepositionNode}\n      />\n    ))}\n  </ul>\n);\n\nexport default ({nodeConfigs, selectedNode, onSelectNode, onRepositionNode}: TreeLevelProps) => {\n  return (\n    <div\n      id=\"tree\"\n      onClick={(e) => {\n        if (e.currentTarget.id === 'tree') {\n          onSelectNode(null);\n        }\n      }}\n    >\n      <TreeLevel\n        nodeConfigs={nodeConfigs}\n        selectedNode={selectedNode}\n        onSelectNode={onSelectNode}\n        onRepositionNode={onRepositionNode}\n      />\n    </div>\n  );\n};\n","import {groupBy} from 'lodash';\nimport * as React from 'react';\nimport Module, {UniversalVariables} from '../modules/Module';\nimport registry from '../modules/registry';\nimport VariableDefinition from '../modules/VariableDefinition';\nimport {NodeConfig} from '../types';\nimport Status from '../universe/Status';\nimport {ChangeNodeConfigHandler} from \"../handlers\";\n\ninterface NodeConfigViewProps {\n  nodeConfig: NodeConfig;\n  onChange: ChangeNodeConfigHandler;\n  status: Status;\n  forceModule?: Module;\n}\n\ninterface VariableConfigRowProps {\n  variable: VariableDefinition;\n  nodeConfig: NodeConfig;\n  onChange: ChangeNodeConfigHandler;\n  status: Status;\n}\n\nconst VariableConfigRow = ({variable, nodeConfig, onChange, status}: VariableConfigRowProps) => {\n  let extraControls: React.ReactElement<any> | null = null;\n  let input: React.ReactElement<any> | null = null;\n\n  const handleChange = ((event) => onChange(\n    nodeConfig,\n    variable.name,\n    event.target.value.toString(),\n  ));\n  if (variable.choices) {\n    input = (\n      <select\n        value={nodeConfig.config[variable.name] || ''}\n        onChange={handleChange}\n      >\n        {variable.choices.map((c) => <option key={c} value={c}>{c}</option>)}\n      </select>\n    );\n  } else {\n    input = (\n      <input\n        type=\"text\"\n        value={nodeConfig.config[variable.name] || ''}\n        onChange={handleChange}\n      />\n    );\n  }\n  if (variable.type === 'color') {\n    extraControls = (\n      <input type=\"color\" value={nodeConfig.config[variable.name] || ''} onChange={handleChange} />\n    );\n  }\n\n  return (\n    <tr className=\"variable-config-row\">\n      <th>\n        {variable.name}\n      </th>\n      <td>\n        {input}\n      </td>\n      <td>\n        {extraControls}\n      </td>\n    </tr>\n  );\n};\n\nexport default class NodeConfigView extends React.Component<NodeConfigViewProps, any> {\n  public render() {\n    const {nodeConfig, status, forceModule} = this.props;\n    const moduleClass: Module = forceModule || registry[nodeConfig.module];\n\n    if (!moduleClass) {\n      return (\n        <div>\n          The module {nodeConfig.module} is not available.\n          <textarea>{JSON.stringify(nodeConfig, null, 2)}</textarea>\n        </div>\n      );\n    }\n\n    const variableDefinitions = moduleClass.variables.concat(\n      (moduleClass.noUniversalVariables ? [] : UniversalVariables)\n    );\n    const variablesByGroup = groupBy(variableDefinitions, (v) => (v.group || 'Other'));\n\n    const variablesForNode = status.getVariablesForNode(nodeConfig.id);\n    return (\n      <div>\n        <table>\n          <tbody>\n            {Object.keys(variablesByGroup).sort().map((group) => <React.Fragment key={group}>\n                <tr key={`#${group}`} className=\"group-separator\">\n                  <th colSpan={3}>{group}</th>\n                </tr>\n                {variablesByGroup[group].map((variable: VariableDefinition) => (\n                  <VariableConfigRow\n                    key={variable.name}\n                    variable={variable}\n                    nodeConfig={nodeConfig}\n                    status={status}\n                    onChange={this.props.onChange}\n                  />\n                ))}\n              </React.Fragment>,\n            )}\n          </tbody>\n        </table>\n        {variablesForNode.length ?\n          <div className=\"debug\">Variables last render: {variablesForNode.join(', ')}</div>\n          : null\n        }\n        <ul className=\"errors\">\n          {status.getErrorsForNode(nodeConfig.id).map((err, i) => <li key={i}>{err}</li>)}\n        </ul>\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport NodeConfigView from '../components/NodeConfigView';\nimport NodeTree from '../components/NodeTree';\nimport TreeToolbar from '../components/TreeToolbar';\nimport {TreeManager} from '../managers/TreeManager';\nimport {Document, NodeConfig} from '../types';\nimport Status from '../universe/Status';\nimport {default as DocumentModule} from '../modules/pseudo/Document';\nimport {ChangeDocumentConfigHandler, SelectNodeHandler} from '../handlers';\n\ninterface TreePanelProps {\n  treeManager: TreeManager;\n  status: Status;\n  selectedNodeId: string | null;\n  onSelectNode: SelectNodeHandler;\n  document: Document;\n  onChangeDocumentVariable: ChangeDocumentConfigHandler;\n}\n\nexport default class TreePanel extends React.Component<TreePanelProps, {}> {\n\n  private onChangeNodeVariable = (nodeConfig: NodeConfig, variableName: string, newValue: string) => {\n    this.props.treeManager.changeNodeVariable(nodeConfig.id, variableName, newValue);\n    this.forceUpdate();  // Avoid asynchronous input caret position problem :(\n  }\n\n  private onChangeDocumentVariable = (nodeConfig: NodeConfig, variableName: string, newValue: string) => {\n    this.props.onChangeDocumentVariable(variableName as any, newValue.replace(/^=/, ''));\n    this.forceUpdate();  // Avoid asynchronous input caret position problem :(\n  }\n\n  private onRepositionNode = (sourceNodeId: string, targetNodeId: string, copy: boolean) => {\n    if (copy) {\n      this.props.treeManager.copyNode(sourceNodeId, targetNodeId);\n    } else {\n      this.props.treeManager.moveNode(sourceNodeId, targetNodeId);\n    }\n  }\n\n  public render() {\n    const {treeManager, selectedNodeId, status, document} = this.props;\n    const selectedNodeConfig = treeManager.getNodeOrNull(selectedNodeId!);\n    return (\n      <>\n        <div id=\"hierarchy\">\n          <TreeToolbar treeManager={treeManager} selectedNode={selectedNodeConfig} />\n          <NodeTree\n            nodeConfigs={treeManager.getTree()}\n            selectedNode={selectedNodeConfig}\n            onSelectNode={this.props.onSelectNode}\n            onRepositionNode={this.onRepositionNode}\n          />\n        </div>\n        <div id=\"props\">\n          {selectedNodeConfig ?\n            <NodeConfigView\n              nodeConfig={selectedNodeConfig!}\n              status={status}\n              onChange={this.onChangeNodeVariable}\n            />\n            :\n            <NodeConfigView\n              nodeConfig={{\n                module: '~Document~',\n                id: '~Document~',\n                config: {\n                  width: '' + document.width,\n                  height: '' + document.height,\n                  background: '' + document.background,\n                },\n                children: [],\n              }}\n              status={status}\n              forceModule={DocumentModule}\n              onChange={this.onChangeDocumentVariable}\n            />\n          }\n        </div>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOMServer from 'react-dom/server';\nimport {TreeManager} from '../managers/TreeManager';\nimport {Document} from '../types';\nimport {deserialize, serialize} from '../utils/serde';\nimport {LoadDocumentHandler} from '../handlers';\n\ninterface FilePanelProps {\n  treeManager: TreeManager;\n  rendered: any;  // TODO: yigh\n  document: Document;\n  onLoadDocument: LoadDocumentHandler;\n}\n\ninterface FilePanelState {\n  serializedState: string;\n}\n\nexport default class FilePanel extends React.Component<FilePanelProps, FilePanelState> {\n\n  public state: FilePanelState = {\n    serializedState: '',\n  };\n\n  private dumpState = (event) => {\n    const doc = serialize(this.props.document, this.props.treeManager.getTree());\n    this.setState({\n      serializedState: JSON.stringify(doc, null, (event.shiftKey ? undefined : 2)),\n    });\n  }\n\n  private loadState = () => {\n    let stateJson;\n    try {\n      stateJson = JSON.parse(this.state.serializedState);\n    } catch (e) {\n      alert('Could not parse JSON: ' + e);\n      return;\n    }\n    try {\n      const doc = deserialize(stateJson);\n      this.props.onLoadDocument(doc);\n    } catch (e) {\n      alert('Could not read document:' + e);\n      return;\n    }\n  }\n\n  private saveSVG = () => {\n    const svgString = (\n      ReactDOMServer.renderToStaticMarkup(this.props.rendered)\n        .replace('<svg ', '<svg xmlns=\"http://www.w3.org/2000/svg\" ')\n    );\n    const blob = new Blob([svgString], {type: 'image/svg+xml'});\n    const url = URL.createObjectURL(blob);\n    const downloadLink = Object.assign(document.createElement('a'), {\n      download: `coil-svg-${+new Date()}.svg`,\n      href: url,\n    });\n    document.body.appendChild(downloadLink);\n    downloadLink.click();\n    setTimeout(() => {\n      downloadLink.parentNode!.removeChild(downloadLink);\n      URL.revokeObjectURL(url);\n    }, 100);\n  }\n\n  public render() {\n    const {treeManager, rendered} = this.props;\n    return (\n      <div id=\"file-panel\">\n        <div>\n          <button className=\"btn standalone\" onClick={this.dumpState}>Save state &darr;</button>\n          <button className=\"btn standalone\" onClick={this.loadState}>Load state &uarr;</button>\n          <textarea\n            value={this.state.serializedState}\n            onChange={(e) => this.setState({serializedState: e.target.value})}\n          />\n        </div>\n        <div>\n          <button className=\"btn standalone\" onClick={this.saveSVG}>Save rendered SVG...</button>\n        </div>\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport Module from '../Module';\nimport Context from '../../universe/Context';\nimport {toSVG} from 'transformation-matrix';\nimport TransformVariables from '../TransformVariables';\nimport {splitMatrixAndProps} from '../MatrixUtils';\nimport PresentationVariables from '../PresentationVariables';\n\nexport default {\n  variables: TransformVariables.concat(PresentationVariables).concat([\n    {name: 'width', default: '20'},\n    {name: 'height', default: '20'},\n  ]),\n\n  render(context: Context) {\n    const {node} = context;\n    const {props, matrix} = splitMatrixAndProps(context.evaluateNodeConfig(node));\n    return [\n      <rect\n        x={-props.width / 2}\n        y={-props.height / 2}\n        transform={toSVG(matrix)}\n        key={context.getId()}\n        {...props}\n      />,\n    ];\n  },\n} as Module;\n","export default function dumbMemoize<T>(fn: (...args) => T): (...args) => T {\n  const memo: { [args: string]: T } = {};\n  const memoizedFn = (...args) => {\n    const argsStr = args.join('\\x01');\n    if (argsStr in memo) {\n      return memo[argsStr];\n    }\n    return memo[argsStr] = fn(...args);\n  };\n  (memoizedFn as any).memo = memo;\n  return memoizedFn;\n}\n","import * as React from 'react';\nimport Context from '../../universe/Context';\nimport TransformVariables from '../TransformVariables';\nimport {splitMatrixAndProps} from '../MatrixUtils';\nimport PresentationVariables from '../PresentationVariables';\nimport Module from '../Module';\nimport {toSVG} from 'transformation-matrix';\nimport dumbMemoize from '../../utils/dumbMemoize';\n\nconst TWO_PI = Math.PI * 2;\n\nconst generatePathString = dumbMemoize(\n  (vertices, radius1, radius2, tilt1, tilt2) => {\n    const path: string[] = [];\n    radius1 = parseFloat(radius1);\n    radius2 = parseFloat(radius2);\n    tilt1 = parseFloat(tilt1);\n    tilt2 = parseFloat(tilt2);\n    for (let i = 0; i < vertices; i++) {\n      const f = i / vertices;\n      const radius = (i % 2 === 0 ? radius1 : radius2);\n      const angle = (f + (i % 2 === 0 ? tilt1 : tilt2)) * TWO_PI;\n      const x = Math.cos(angle) * radius;\n      const y = Math.sin(angle) * radius;\n      if (!(isNaN(x) || isNaN(y))) {\n        path.push(`${i === 0 ? 'M' : 'L'}${x.toFixed(3)},${y.toFixed(3)}`);\n      }\n    }\n    if (path.length > 0) {\n      path.push('z');\n    }\n    return path.join(' ');\n  },\n);\n\nexport default {\n  variables: TransformVariables.concat(PresentationVariables).concat([\n    {name: 'vertices', default: '5'},\n    {name: 'radius1', default: '5'},\n    {name: 'radius2', default: '5'},\n    {name: 'tilt1', default: '0'},\n    {name: 'tilt2', default: '0'},\n  ]),\n\n  render(context: Context) {\n    const {node} = context;\n    const {props, matrix} = splitMatrixAndProps(context.evaluateNodeConfig(node));\n    const path = generatePathString(props.vertices, props.radius1, props.radius2, props.tilt1, props.tilt2);\n\n    delete props.vertices;\n    delete props.radius1;\n    delete props.radius2;\n    delete props.tilt1;\n    delete props.tilt2;\n    return [<path\n      d={path}\n      {...props}\n      key={context.getId(node.id)}\n      transform={toSVG(matrix)}\n    />];\n  },\n} as Module;\n","export function cleanPresentationProps(props: { [key: string]: any }): void {\n  if (props.stroke === '') {\n    delete props.stroke;\n  }\n  if (props.fill === '') {\n    delete props.fill;\n  }\n}\n","import * as React from 'react';\nimport Module from '../Module';\nimport Context from '../../universe/Context';\nimport {toSVG} from 'transformation-matrix';\nimport TransformVariables from '../TransformVariables';\nimport {splitMatrixAndProps} from '../MatrixUtils';\nimport PresentationVariables from '../PresentationVariables';\nimport {cleanPresentationProps} from '../SVGUtils';\n\nexport default {\n  variables: TransformVariables.concat(PresentationVariables).concat([\n    {name: 'radiusX', default: '20'},\n    {name: 'radiusY', default: '20'},\n  ]),\n\n  render(context: Context) {\n    const {props, matrix} = splitMatrixAndProps(context.evaluateNodeConfig());\n    const {radiusX} = props;\n    const radiusY = (props.radiusY !== '' ? props.radiusY : radiusX);\n    delete props.radiusX;\n    delete props.radiusY;\n    cleanPresentationProps(props);\n    return [\n      <ellipse\n        cx={0}\n        cy={0}\n        rx={radiusX}\n        ry={radiusY}\n        transform={toSVG(matrix)}\n        key={context.getId()}\n        {...props}\n      />,\n    ];\n  },\n} as Module;\n","import * as React from 'react';\nimport Module from '../Module';\nimport Context from '../../universe/Context';\nimport TransformVariables from '../TransformVariables';\nimport {toSVG} from 'transformation-matrix';\nimport {splitMatrixAndProps} from '../MatrixUtils';\n\nexport default {\n  acceptsChildren: true,\n  variables: TransformVariables.concat([\n    {name: 'opacity', default: '1'},\n  ]),\n\n  render(context: Context) {\n    const nodes = context.renderChildren();\n    const {props, matrix} = splitMatrixAndProps(context.evaluateNodeConfig());\n    const {opacity} = props;\n    return [<g transform={toSVG(matrix)} opacity={opacity}>{nodes}</g>];\n  },\n} as Module;\n","import * as React from 'react';\nimport Module from '../Module';\nimport Context from '../../universe/Context';\nimport {renderNodesInto} from '../../universe/render';\n\nexport default {\n  acceptsChildren: true,\n  variables: [\n    {name: 'keep', default: '=rand() < .5'},\n    {name: 'indexVariable', default: 'i'},\n  ],\n\n  render(context: Context) {\n    const node = context.node;\n    const indexVariable = context.evaluateFromNodeConfig('indexVariable');\n    const nodes = [];\n    renderNodesInto(nodes, node.children, context);\n    const filterContext = context.subcontext(node);\n    const keepExpression = node.config.keep!;\n    return nodes.filter((child, index) => (\n      filterContext.evaluate(`keep ${index}`, keepExpression, {[indexVariable]: index})\n    ));\n  },\n} as Module;\n","import * as React from 'react';\nimport Module from '../Module';\nimport Context from '../../universe/Context';\nimport {renderNodesInto} from '../../universe/render';\n\nexport default {\n  acceptsChildren: true,\n  variables: [\n    {name: 'childIndex', default: '0'},\n    {name: 'indexVariable', default: 'u'},\n  ],\n\n  render(context: Context) {\n    const {node} = context;\n    const {childIndex, indexVariable} = context.evaluateNodeConfig(node);\n    const index = parseInt(childIndex, 10);\n    const child = node.children[index % node.children.length];\n    const nodes = [];\n    if (child) {\n      const subcontext = context.subcontext(\n        node,\n        {\n          [indexVariable]: childIndex,\n        },\n        `child${childIndex}`,\n      );\n      renderNodesInto(nodes, [child], subcontext);\n    }\n    return nodes;\n  },\n} as Module;\n","import * as React from 'react';\nimport Module from '../Module';\nimport Context from '../../universe/Context';\nimport {renderNodesInto} from '../../universe/render';\n\nconst THREE_OVER_TWO = (3 / 2);\nconst SQRT_THREE = Math.sqrt(3);\nconst SQRT_THREE_OVER_TWO = SQRT_THREE / 2;\n\nfunction makeHex(hex: string, x: number, y: number): [number, number] {\n  if (hex === 'flat' || hex === 'flatRect') {\n    if (hex === 'flatRect') {\n      y -= (x >> 1);\n    }\n    return [\n      THREE_OVER_TWO * x,\n      SQRT_THREE_OVER_TWO * x + SQRT_THREE * y,\n    ];\n  } else if (hex === 'pointy' || hex === 'pointyRect') {\n    if (hex === 'pointyRect') {\n      x -= (y >> 1);\n    }\n    return [\n      SQRT_THREE * x + SQRT_THREE_OVER_TWO * y,\n      THREE_OVER_TWO * y,\n    ];\n  }\n  return [0, 0];\n}\n\nexport default {\n  acceptsChildren: true,\n  variables: [\n    {name: 'numberX', default: '5'},\n    {name: 'numberY', default: '5'},\n    {name: 'variableX', default: 'vx'},\n    {name: 'variableY', default: 'vy'},\n    {\n      name: 'hex',\n      default: 'none',\n      choices: [\n        'none',\n        'flat',\n        'flatRect',\n        'pointy',\n        'pointyRect',\n      ],\n    },\n  ],\n\n  render(context: Context) {\n    const {node} = context;\n    // tslint:disable-next-line:prefer-const\n    let {numberX, numberY, variableX, variableY, hex} = context.evaluateNodeConfig(node);\n    const nodes = [];\n\n    numberX = Math.round(parseFloat(numberX));\n    numberY = Math.round(parseFloat(numberY));\n    for (let y = 0; y < numberY; y++) {\n      for (let x = 0; x < numberX; x++) {\n        const newVariables = {\n          [variableX]: x,\n          [variableY]: y,\n          [`${variableX}F`]: x / (numberX - 1),\n          [`${variableY}F`]: y / (numberY - 1),\n        };\n        if (hex !== 'none') {\n          const [hexX, hexY] = makeHex(hex, x, y);\n          newVariables[`${variableX}Hex`] = hexX;\n          newVariables[`${variableY}Hex`] = hexY;\n        }\n        const subcontext = context.subcontext(node, newVariables, `${x}x${y}`);\n        renderNodesInto(nodes, node.children, subcontext);\n      }\n    }\n    return nodes;\n  },\n} as Module;\n","import * as React from 'react';\nimport Module from '../Module';\nimport Context from '../../universe/Context';\nimport {renderNodesInto} from '../../universe/render';\n\nexport default {\n  acceptsChildren: true,\n  variables: [\n    {name: 'number', default: '5'},\n    {name: 'variable', default: 'i'},\n  ],\n\n  render(context: Context) {\n    // tslint:disable-next-line:variable-name\n    const {number, variable} = context.evaluateNodeConfig();\n    const nodes = [];\n    const nNumber = Math.round(parseFloat(number));\n    const node = context.node;\n    for (let i = 0; i < nNumber; i++) {\n      const subcontext = context.subcontext(node, {\n        [variable]: i,\n        [`${variable}F`]: i / (nNumber - 1),\n      }, `${i}`);\n      renderNodesInto(nodes, node.children, subcontext);\n    }\n    return nodes;\n  },\n} as Module;\n","import {cloneDeep} from 'lodash';\nimport {NodeConfig} from '../types';\nimport {configure, duplicate} from '../universe/configure';\n\ninterface NodeCacheEntry {\n  node: NodeConfig;\n  parent: NodeConfig | null;\n}\n\nexport interface NodeCacheType {\n  [key: string]: NodeCacheEntry;\n}\n\nexport type UpdateListener = (root: NodeConfig[]) => void;\n\nexport class TreeManager {\n  private tree: NodeConfig[] = [];\n  private nodeCache: NodeCacheType = {};\n  private treeUpdateListeners: UpdateListener[] = [];\n\n  public replaceTree(newTree: NodeConfig[]) {\n    this.tree = cloneDeep(newTree);\n    this.updateNodeCache();\n    this.invokeTreeUpdateListeners();\n  }\n\n  private updateNodeCache() {\n    const newNodeCache: NodeCacheType = {};\n\n    function walk(node: NodeConfig, parent: NodeConfig | null) {\n      newNodeCache[node.id] = {node, parent};\n      node.children.forEach((child) => walk(child, node));\n    }\n\n    this.tree.forEach((node) => walk(node, null));\n    this.nodeCache = newNodeCache;\n  }\n\n  private invokeTreeUpdateListeners() {\n    setImmediate(() => {\n      this.treeUpdateListeners.forEach((listener) => {\n        listener(this.tree);\n      });\n    });\n  }\n\n  public getNodeOrNull(nodeId: string): NodeConfig | null {\n    const cacheEntry = this.getNodeCacheEntry(nodeId, false);\n    return (cacheEntry ? cacheEntry.node : null);\n  }\n\n  public getNodeParentOrNull(nodeId: string): NodeConfig | null {\n    const cacheEntry = this.getNodeCacheEntry(nodeId, false);\n    return (cacheEntry ? cacheEntry.parent : null);\n  }\n\n  private getNode(nodeId: string): NodeConfig {\n    return this.getNodeCacheEntry(nodeId)!.node;\n  }\n\n  private getNodeParent(nodeId: string): NodeConfig | null {\n    return this.getNodeCacheEntry(nodeId)!.parent;\n  }\n\n  private getNodeCacheEntry(nodeId: string, check: boolean = true): NodeCacheEntry | null {\n    const cacheEntry = this.nodeCache[nodeId];\n    if (check && !cacheEntry) {\n      throw new Error(`invalid node ${nodeId}`);\n    }\n    return (cacheEntry ? cacheEntry : null);\n  }\n\n  private replaceOrEmsiblingNode(\n    parent: NodeConfig | null,\n    nodeToReplace: NodeConfig,\n    newNodes: ReadonlyArray<NodeConfig>,\n    replace: boolean,\n  ) {\n    const childList = (parent === null ? this.tree : parent.children);\n    const childIndex = childList.indexOf(nodeToReplace);\n    if (childIndex > -1) {\n      const args = ([childIndex, (replace ? 1 : 0)] as any[]).concat(newNodes);\n      childList.splice.apply(childList, args);\n    }\n  }\n\n  public getTree(): ReadonlyArray<NodeConfig> {\n    return this.tree;\n  }\n\n  public addTreeUpdateListener(listener: UpdateListener) {\n    this.treeUpdateListeners.push(listener);\n  }\n\n  public changeNodeVariable(nodeId: string, variableName: string, value: any) {\n    const node = this.getNode(nodeId);\n    node.config[variableName] = value;\n    this.invokeTreeUpdateListeners();\n  }\n\n  public addChildNode(parentNodeId: string | null, module: string) {\n    const newNode = configure(module, {});\n    this.addChildInternal(parentNodeId, newNode);\n    this.updateNodeCache();\n    this.invokeTreeUpdateListeners();\n    return newNode;\n  }\n\n  private addChildInternal(parentNodeId: string | null, newNode) {\n    if (parentNodeId) {\n      const parentNode = this.getNode(parentNodeId);\n      parentNode.children.push(newNode);\n      return parentNode;\n    } else {\n      this.tree.push(newNode);\n      return null;\n    }\n  }\n\n  public wrapNode(parentNodeId: string, module: string) {\n    const wrappedNode = this.getNode(parentNodeId);\n    const wrappedNodeParent = this.getNodeParent(parentNodeId);\n    const wrapperNode = configure(module, {}, [wrappedNode]);\n    this.replaceOrEmsiblingNode(wrappedNodeParent, wrappedNode, [wrapperNode], true);\n    this.updateNodeCache();\n    this.invokeTreeUpdateListeners();\n    return wrapperNode;\n  }\n\n  public deleteNode(nodeId: string, withHierarchy: boolean) {\n    const doomedNode = this.getNode(nodeId);\n    const doomedNodeParent = this.getNodeParent(nodeId);\n    this.replaceOrEmsiblingNode(doomedNodeParent, doomedNode, (withHierarchy ? [] : doomedNode.children), true);\n    this.updateNodeCache();\n    this.invokeTreeUpdateListeners();\n  }\n\n  public addSiblingNode(nodeId: string, module: string) {\n    const newNode = configure(module, {});\n    const node = this.getNode(nodeId);\n    const nodeParent = this.getNodeParent(nodeId);\n    this.replaceOrEmsiblingNode(nodeParent, node, [newNode], false);\n    this.updateNodeCache();\n    this.invokeTreeUpdateListeners();\n  }\n\n  public moveNode(sourceNodeId: string, newParentNodeId: string | null) {\n    if (sourceNodeId === newParentNodeId) {\n      return false;\n    }\n    const sourceNode = this.getNode(sourceNodeId);\n    const sourceNodeParent = this.getNodeParent(sourceNodeId);\n    // Remove from parent...\n    this.replaceOrEmsiblingNode(sourceNodeParent, sourceNode, [], true);\n    // Add to new parent.\n    this.addChildInternal(newParentNodeId, sourceNode);\n    this.updateNodeCache();\n    this.invokeTreeUpdateListeners();\n    return true;\n  }\n\n  public copyNode(sourceNodeId: string, targetNodeId: string | null) {\n    const copiedNode = duplicate(this.getNode(sourceNodeId));\n    this.addChildInternal(targetNodeId, copiedNode);\n    this.updateNodeCache();\n    this.invokeTreeUpdateListeners();\n    return true;\n  }\n}\n","import * as React from 'react';\n\nexport default ({path, props}: { path: string, props?: object }) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" {...props}>\n    <path d={path} />\n  </svg>\n);\n","import * as cx from 'classnames';\nimport * as React from 'react';\nimport Icon from './Icon';\n\nconst GlobalToolbarIcons = {\n  fileTree: require('material-design-icons-svg/paths/file-tree'),\n  save: require('material-design-icons-svg/paths/content-save'),\n};\n\nexport default class GlobalToolbar extends React.Component<{\n  activeTab: string,\n  onChangeTab: (id: string) => void,\n}, any> {\n  public render() {\n    const tabs = [\n      {id: 'tree', icon: GlobalToolbarIcons.fileTree},\n      {id: 'file', icon: GlobalToolbarIcons.save},\n    ];\n    return (\n      <div id=\"global-toolbar\" className=\"toolbar\">\n        {tabs.map((t) =>\n          <div\n            key={t.id}\n            className={cx('btn', {active: this.props.activeTab === t.id})}\n            title={t.id}\n            onClick={() => this.props.onChangeTab(t.id)}\n          >\n            <Icon path={t.icon} />\n          </div>,\n        )}\n      </div>\n    );\n  }\n\n}\n","import * as React from 'react';\nimport GlobalToolbar from '../components/GlobalToolbar';\nimport {TreeManager} from '../managers/TreeManager';\nimport FilePanel from '../sidebar-panels/FilePanel';\nimport TreePanel from '../sidebar-panels/TreePanel';\nimport {Document, NodeConfig} from '../types';\nimport Context from '../universe/Context';\nimport Status from '../universe/Status';\nimport makeDefaultConfig from '../utils/defaultConfig';\nimport * as storage from '../utils/storage';\nimport {deserialize, serialize} from '../utils/serde';\n\ninterface AppState {\n  selectedNodeId: string | null;\n  rendered: any;\n  status: Status;\n  activeTab: 'tree' | 'file';\n  document: Document;\n}\n\nconst STORAGE_KEY = 'coilSave';\n\nexport default class App extends React.Component<{}, AppState> {\n\n  private treeManager: TreeManager = new TreeManager();\n\n  public state: AppState = {\n    selectedNodeId: null,\n    rendered: null,\n    status: new Status(),\n    activeTab: 'tree',\n    document: {\n      nodes: [],\n      width: 800,\n      height: 800,\n      background: '',\n    },\n  };\n\n  public componentDidMount() {\n    this.treeManager.addTreeUpdateListener((tree) => {\n      this.renderDrawing(tree);\n    });\n    this.treeManager.addTreeUpdateListener((tree) => {\n      this.saveToStorage(tree);\n    });\n\n    this.loadFromStorage();\n  }\n\n  private saveToStorage(tree?: NodeConfig[]) {\n    storage.save(STORAGE_KEY, serialize(this.state.document, tree || this.treeManager.getTree()));\n  }\n\n  private loadFromStorage() {\n    const storageObj = storage.load(STORAGE_KEY);\n    if (!storageObj) {\n      this.treeManager.replaceTree(makeDefaultConfig());\n      return;\n    }\n    try {\n      const document = deserialize(storageObj);\n      this.loadDocument(document);\n    } catch (e) {\n      alert('Loading document from storage failed: ' + e);\n    }\n  }\n\n  private loadDocument = (document: Document): void => {\n    const nodes = document.nodes;\n    document.nodes = [];  // Just to make sure people know this is irrelevant\n    this.setState({document});\n    this.treeManager.replaceTree(nodes);\n  }\n\n  private onSelectNode = (nodeConfig: NodeConfig | null): void => {\n    this.setState({\n      selectedNodeId: (nodeConfig ? nodeConfig.id : null),\n    });\n  }\n\n  public renderDrawing(tree: NodeConfig[]) {\n    const status = new Status();\n    const rootPseudoNode = {id: 'root', module: 'root', config: {}, children: tree};\n    const context = new Context(status, rootPseudoNode);\n    const {width, height, background} = this.state.document;\n    let renderedChildren;\n    try {\n      renderedChildren = context.renderChildren();\n    } catch (e) {\n      renderedChildren = <text y={50} x={50}>{e.toString()}</text>;\n      console.error(renderedChildren);\n    }\n    const rendered = (\n      <svg width={width} height={height} viewBox={`0 0 ${width} ${height}`}>\n        {background ? <rect x={0} y={0} width={width} height={height} fill={background} id=\"background\" /> : null}\n        {renderedChildren}\n      </svg>\n    );\n    this.setState({rendered, status});\n  }\n\n  public onChangeTab = (tabId) => {\n    this.setState({activeTab: tabId});\n  }\n\n  private onChangeDocumentVariable = (variableName: keyof Document, value: string) => {\n    const document = this.state.document;\n    switch (variableName) {\n      case 'width':\n      case 'height':\n        document[variableName] = parseInt(value, 10);\n        break;\n      default:\n        document[variableName] = value;\n    }\n    this.setState({document}, () => {\n      this.renderDrawing(this.treeManager.getTree() as NodeConfig[]);\n    });\n  }\n\n  public render() {\n    const {selectedNodeId, rendered, status, activeTab, document} = this.state;\n    const {treeManager} = this;\n    const selectedNodeConfig = treeManager.getNodeOrNull(selectedNodeId!);\n    let configContent: React.ReactElement<any> | null = null;\n    switch (activeTab) {\n      case 'tree':\n        configContent = (\n          <TreePanel\n            document={document}\n            treeManager={this.treeManager}\n            status={this.state.status}\n            selectedNodeId={this.state.selectedNodeId}\n            onSelectNode={this.onSelectNode}\n            onChangeDocumentVariable={this.onChangeDocumentVariable}\n          />\n        );\n        break;\n      case 'file':\n        configContent = (\n          <FilePanel\n            treeManager={this.treeManager}\n            rendered={rendered}\n            document={document}\n            onLoadDocument={this.loadDocument}\n          />\n        );\n        break;\n    }\n    return (\n      <>\n        <div id=\"config\">\n          <GlobalToolbar activeTab={activeTab} onChangeTab={this.onChangeTab} />\n          {configContent}\n        </div>\n        <div id=\"drawing\">\n          {rendered}\n        </div>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './views/App';\nimport './style.scss';\n\nconst wrapper = document.createElement('div');\nwrapper.id = 'wrapper';\ndocument.body.appendChild(wrapper);\n\nReactDOM.render(<App />, wrapper);\n"],"sourceRoot":""}