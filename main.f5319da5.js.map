{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/modules/registry.ts","webpack:///./src/universe/render.tsx","webpack:///./src/modules/MatrixUtils.ts","webpack:///./src/modules/TransformVariables.ts","webpack:///./src/modules/Module.tsx","webpack:///./src/universe/configure.tsx","webpack:///./src/modules/PresentationVariables.ts","webpack:///./src/utils/defaultConfig.ts","webpack:///./src/utils/storage.ts","webpack:///./src/sidebar-panels/FilePanel.tsx","webpack:///./src/components/TreeToolbar.tsx","webpack:///./src/components/NodeConfigView.tsx","webpack:///./src/components/NodeTree.tsx","webpack:///./src/sidebar-panels/TreePanel.tsx","webpack:///./src/components/Icon.tsx","webpack:///./src/components/GlobalToolbar.tsx","webpack:///./src/universe/Status.tsx","webpack:///./src/managers/TreeManager.tsx","webpack:///./src/modules/modify/Xform.tsx","webpack:///./src/modules/modify/RemoveChildren.tsx","webpack:///./src/modules/array/RectArray.tsx","webpack:///./src/modules/prim/Rect.tsx","webpack:///./src/utils/dumbMemoize.ts","webpack:///./src/modules/prim/Ngon.tsx","webpack:///./src/modules/array/LinearArray.tsx","webpack:///./src/modules/prim/Ellipse.tsx","webpack:///./src/modules/modify/Choose.tsx","webpack:///./src/utils/evaluator.ts","webpack:///./src/utils/RandomGenerator.ts","webpack:///./src/universe/Context.tsx","webpack:///./src/views/App.tsx","webpack:///./src/index.tsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","Choose_1","Ellipse_1","LinearArray_1","Ngon_1","Rect_1","RectArray_1","RemoveChildren_1","Xform_1","registry","Choose","default","Ellipse","LinearArray","Ngon","Rect","RectArray","RemoveChildren","Xform","keys","forEach","render","displayName","registry_1","renderNode","context","nodeConfig","Error","status","addVariables","id","variables","subcontext","e","console","error","renderNodesInto","targetArray","nodes","renderedElts","transformation_matrix_1","multiply","m1","m2","a","b","f","makeMatrix","_a","x","y","sx","sy","matrix","translate","isFinite","rotateDEG","scale","splitMatrixAndProps","props","newProps","assign","group","getVariableDefaults","defaults","v","UniversalVariables","Module_1","lodash_1","generateId","Math","floor","random","toString","duplicate","walk","config","cloneDeep","children","map","configure","moduleName","type","configure_1","seed","numberX","numberY","variableX","variableY","radius1","radius2","vertices","fill","load","rawValue","localStorage","getItem","JSON","parse","save","undefined","setItem","stringify","removeItem","React","ReactDOMServer","FilePanel","_super","_this","this","arguments","state","serializedState","dumpState","setState","treeManager","getTree","loadState","stateJson","alert","Array","isArray","replaceTree","saveSVG","svgString","renderToStaticMarkup","rendered","replace","blob","Blob","url","URL","createObjectURL","downloadLink","document","createElement","download","Date","href","body","appendChild","click","setTimeout","parentNode","removeChild","revokeObjectURL","__extends","className","onClick","onChange","target","Component","react_simple_dropdown_1","nodeAcceptsChildren","node","acceptsChildren","TreeToolbar","dropdowns","handleAddNode","method","selectedNode","addChildNode","addSiblingNode","wrapNode","hideDropdowns","handleDeleteNode","withHierarchy","deleteNode","values","dropdown","hide","childMode","childText","allowAddSibling","parent","getNodeParentOrNull","disabled","ref","instance","wrap","DropdownTrigger","DropdownContent","filter","addChild","addSibling","title","event","shiftKey","preventDefault","VariableConfigRow","variable","extraControls","input","handleChange","choices","NodeConfigView","moduleClass","variableDefinitions","concat","variablesByGroup","groupBy","sort","Fragment","colSpan","getVariablesForNode","join","getErrorsForNode","err","TreeNode","onSelectNode","onRepositionNode","draggable","stopPropagation","onDragStart","dataTransfer","clearData","setData","effectAllowed","onDragOver","dropEffect","types","indexOf","altKey","onDrop","sourceNodeId","getData","copy","TreeLevel","nodeConfigs","currentTarget","NodeTree_1","NodeConfigView_1","TreeToolbar_1","TreePanel","onChangeNodeVariable","variableName","newValue","changeNodeVariable","forceUpdate","targetNodeId","copyNode","moveNode","selectedNodeId","selectedNodeConfig","getNodeOrNull","path","__assign","xmlns","viewBox","Icon_1","cx","GlobalToolbarIcons","fileTree","GlobalToolbar","tabs","icon","active","activeTab","onChangeTab","Status","nodeErrors","nodeVariables","addError","nodeId","Set","add","from","TreeManager","tree","nodeCache","treeUpdateListeners","newTree","updateNodeCache","invokeTreeUpdateListeners","newNodeCache","child","setImmediate","listener","cacheEntry","getNodeCacheEntry","getNode","getNodeParent","check","replaceOrEmsiblingNode","nodeToReplace","newNodes","childList","childIndex","args","addTreeUpdateListener","parentNodeId","newNode","addChildInternal","wrappedNode","wrappedNodeParent","wrapperNode","doomedNode","doomedNodeParent","nodeParent","newParentNodeId","sourceNode","sourceNodeParent","copiedNode","TransformVariables_1","MatrixUtils_1","renderChildren","evaluateNodeConfig","opacity","transform","toSVG","render_1","indexVariable","evaluateFromNodeConfig","filterContext","keepExpression","keep","index","evaluate","THREE_OVER_TWO","SQRT_THREE","sqrt","SQRT_THREE_OVER_TWO","makeHex","hex","_b","round","parseFloat","newVariables","_c","__read","hexX","hexY","PresentationVariables_1","width","height","getId","fn","memo","memoizedFn","_i","argsStr","__spread","dumbMemoize_1","TWO_PI","PI","generatePathString","tilt1","tilt2","radius","angle","cos","sin","isNaN","toFixed","number","nNumber","radiusX","radiusY","cy","rx","ry","parseInt","expressionFnCache","evaluateExpression","expression","namespace","startsWith","Function","test","seedString","string","charCodeAt","hashString","RandomGenerator_1","evaluator_1","_evaluate","tag","errorDefault","warn","Context","idPrefix","defaultNamespace","prepareNamespace","forNode","mergedVariables","min","max","rng","val","additionalVariables","creator","memoizeOnFirstInvocation","rand","evaluateAll","expressionMap","evaluated","suffix","Context_1","TreeManager_1","Status_1","GlobalToolbar_1","TreePanel_1","FilePanel_1","storage","defaultConfig_1","App","tabId","componentDidMount","renderDrawing","lTree","renderedChildren","rootPseudoNode","configContent","ReactDOM","App_1","wrapper"],"mappings":"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","file":"main.f5319da5.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([69,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import Choose from './modify/Choose';\nimport Ellipse from './prim/Ellipse';\nimport LinearArray from './array/LinearArray';\nimport Module from './Module';\nimport Ngon from './prim/Ngon';\nimport Rect from './prim/Rect';\nimport RectArray from './array/RectArray';\nimport RemoveChildren from './modify/RemoveChildren';\nimport Xform from './modify/Xform';\n\nconst registry = {\n  Choose,\n  Ellipse,\n  LinearArray,\n  Ngon,\n  Rect,\n  RectArray,\n  RemoveChildren,\n  Xform,\n} as {[name: string]: Module};\nexport default registry;\n\nObject.keys(registry).forEach((name) => {\n  (registry[name].render as any).displayName = `render_${name}`;\n});\n","import {NodeConfig} from '../types';\nimport registry from '../modules/registry';\nimport Context from './Context';\nimport Module from '../modules/Module';\n\nexport function renderNode(context: Context, nodeConfig: NodeConfig) {\n  const module: Module = registry[nodeConfig.module];\n  if (!module) {\n    throw new Error(`not registered ${nodeConfig.module}`);\n  }\n  try {\n    context.status.addVariables(nodeConfig.id, context.variables);\n    return module.render(context.subcontext(nodeConfig, {}, nodeConfig.id));\n  } catch (e) {\n    console.error(e);\n    return [];\n  }\n}\n\nexport function renderNodesInto(targetArray: any[], nodes: NodeConfig[], context: Context) {\n  for (let i = 0; i < nodes.length; i++) {\n    const renderedElts = renderNode(context, nodes[i]);\n    for (let j = 0; j < renderedElts.length; j++) {\n      targetArray.push(renderedElts[j]);\n    }\n  }\n}\n","import {rotateDEG, scale, translate} from 'transformation-matrix';\nimport {VariableMap} from '../types';\n\nconst multiply = (m1: Matrix, m2: Matrix): Matrix => {\n  return {\n    a: m1.a * m2.a + m1.c * m2.b,\n    b: m1.b * m2.a + m1.d * m2.b,\n    c: m1.a * m2.c + m1.c * m2.d,\n    d: m1.b * m2.c + m1.d * m2.d,\n    e: m1.a * m2.e + m1.c * m2.f + m1.e,\n    f: m1.b * m2.e + m1.d * m2.f + m1.f,\n  };\n};\n\nexport type TransformBag = {\n  x: number,\n  y: number,\n  r: number,\n  sx: number,\n  sy: number,\n};\n\nexport function makeMatrix({x, y, r, sx, sy}: TransformBag): Matrix {\n  let matrix = translate(isFinite(x) ? x : 0, isFinite(y) ? y : 0);\n  if (isFinite(r)) {\n    matrix = multiply(matrix, rotateDEG(r));\n  }\n  if (isFinite(sx) && isFinite(sy)) {\n    matrix = multiply(matrix, scale(sx, sy));\n  }\n  return matrix;\n}\n\nexport function splitMatrixAndProps(props: VariableMap): {\n  matrix: Matrix,\n  props: VariableMap,\n} {\n  const matrix = makeMatrix(props as TransformBag);\n  const newProps = Object.assign({}, props);\n  delete newProps.x;\n  delete newProps.y;\n  delete newProps.r;\n  delete newProps.sx;\n  delete newProps.sy;\n  return {matrix, props: newProps};\n}\n","import VariableDefinition from './VariableDefinition';\n\nconst group = 'Transform';\nexport default [\n  {name: 'x', default: '0', group},\n  {name: 'y', default: '0', group},\n  {name: 'r', default: '0', group},\n  {name: 'sx', default: '1', group},\n  {name: 'sy', default: '1', group},\n] as VariableDefinition[];\n","import Context from '../universe/Context';\nimport VariableDefinition from './VariableDefinition';\nimport {ReactElement} from 'react';\n\n// tslint:disable-next-line:interface-name\nexport default interface Module {\n  acceptsChildren: boolean;\n  variables: VariableDefinition[];\n  render(context: Context): Array<ReactElement<any>>;\n}\n\nexport function getVariableDefaults(module: Module): object {\n  const defaults = {};\n  module.variables.forEach((v) => {\n    defaults[v.name] = v.default;\n  });\n  return defaults;\n}\n\nexport const UniversalVariables = [\n  {name: 'seed', default: '', group: 'Randomness'},\n] as VariableDefinition[];\n","import Module, {getVariableDefaults} from '../modules/Module';\nimport registry from '../modules/registry';\nimport {NodeConfig} from '../types';\nimport {cloneDeep} from 'lodash';\n\nfunction generateId() {\n  return `${Math.floor(Math.random() * 0xFFFFFFFF).toString(36)}`;\n}\n\nexport function duplicate(nodeConfig: NodeConfig): NodeConfig {\n  function walk(nodeConfig: NodeConfig): NodeConfig {\n    return {\n      id: generateId(),\n      module: nodeConfig.module,\n      config: cloneDeep(nodeConfig.config),\n      children: nodeConfig.children.map(walk),\n    };\n  }\n\n  return walk(nodeConfig);\n}\n\nexport function configure(\n  moduleName: string,\n  variables: { [key: string]: any },\n  children: NodeConfig[] = [],\n): NodeConfig {\n  const module: Module = registry[moduleName];\n  const defaults = getVariableDefaults(module);\n  return {\n    id: generateId(),\n    module: moduleName,\n    config: Object.assign({}, defaults, variables),\n    children,\n  };\n}\n","import VariableDefinition from './VariableDefinition';\n\nconst group = 'Presentation';\nexport default [\n  {name: 'fill', default: '#333', group, type: 'color'},\n  {name: 'stroke', default: '', group, type: 'color'},\n  {name: 'strokeWidth', default: '0', group, type: 'number'},\n  {name: 'opacity', default: '1', group},\n] as VariableDefinition[];\n","import {NodeConfig} from '../types';\nimport {configure} from '../universe/configure';\n\nexport default function makeDefaultConfig(): NodeConfig[] {\n  return [\n    configure(\n      'RemoveChildren',\n      {\n        seed: 'foo',\n      },\n      [\n        configure(\n          'RectArray',\n          {\n            numberX: '7',\n            numberY: '7',\n            variableX: 'i',\n            variableY: 'j',\n          },\n          [\n            configure('Ngon', {\n              radius1: '15',\n              radius2: '5',\n              vertices: '10',\n              x: '=15 + i * 30',\n              y: '=30 + j * 30',\n              fill: 'blue',\n            }),\n          ]),\n      ]),\n  ];\n}\n","export function load(key: string): any | undefined {\n  const rawValue = localStorage.getItem(key);\n  if (!rawValue) {\n    return undefined;\n  }\n  try {\n    return JSON.parse(rawValue);\n  } catch (e) {\n    return undefined;\n  }\n}\n\nexport function save(key: string, value: any) {\n  if (value === undefined || value === null) {\n    localStorage.removeItem(key);\n    return;\n  }\n  localStorage.setItem(key, JSON.stringify(value));\n}\n","import * as React from 'react';\nimport {TreeManager} from '../managers/TreeManager';\nimport {NodeConfig} from '../types';\nimport * as ReactDOMServer from 'react-dom/server';\n\ninterface FilePanelProps {\n  treeManager: TreeManager;\n  rendered: any;  // TODO: yigh\n}\n\ninterface FilePanelState {\n  serializedState: string;\n}\n\nexport default class FilePanel extends React.Component<FilePanelProps, FilePanelState> {\n\n  public state: FilePanelState = {\n    serializedState: '',\n  };\n\n  private dumpState = () => {\n    this.setState({\n      serializedState: JSON.stringify(this.props.treeManager.getTree(), null, 2),\n    });\n  }\n\n  private loadState = () => {\n    let stateJson;\n    try {\n      stateJson = JSON.parse(this.state.serializedState);\n    } catch (e) {\n      alert('Could not parse JSON: ' + e);\n      return;\n    }\n    if (!Array.isArray(stateJson)) {\n      alert('Input is not an array.');\n      return;\n    }\n    this.props.treeManager.replaceTree(stateJson as NodeConfig[]);\n  }\n\n  private saveSVG = () => {\n    const svgString = (\n      ReactDOMServer.renderToStaticMarkup(this.props.rendered)\n        .replace('<svg ', '<svg xmlns=\"http://www.w3.org/2000/svg\" ')\n    );\n    const blob = new Blob([svgString], {type: 'image/svg+xml'});\n    const url = URL.createObjectURL(blob);\n    const downloadLink = Object.assign(document.createElement('a'), {\n      download: `coil-svg-${+new Date()}.svg`,\n      href: url,\n    });\n    document.body.appendChild(downloadLink);\n    downloadLink.click();\n    setTimeout(() => {\n      downloadLink.parentNode!.removeChild(downloadLink);\n      URL.revokeObjectURL(url);\n    }, 100);\n  }\n\n  public render() {\n    const {treeManager, rendered} = this.props;\n    return (\n      <div id=\"file-panel\">\n        <div>\n          <button className=\"btn standalone\" onClick={this.dumpState}>Save state &darr;</button>\n          <button className=\"btn standalone\" onClick={this.loadState}>Load state &uarr;</button>\n          <textarea\n            value={this.state.serializedState}\n            onChange={(e) => this.setState({serializedState: e.target.value})}\n          />\n        </div>\n        <div>\n          <button className=\"btn standalone\" onClick={this.saveSVG}>Save rendered SVG...</button>\n        </div>\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport Dropdown, {DropdownContent, DropdownTrigger} from 'react-simple-dropdown';\nimport {NodeConfig} from '../types';\nimport registry from '../modules/registry';\nimport {TreeManager} from '../managers/TreeManager';\n\ntype ToolbarProps = {\n  treeManager: TreeManager,\n  selectedNode: NodeConfig | null,\n};\n\nfunction nodeAcceptsChildren(node: NodeConfig | null) {\n  return (node && registry[node.module] && registry[node.module].acceptsChildren);\n}\n\nexport default class TreeToolbar extends React.Component<ToolbarProps, any> {\n  private dropdowns: { [key: string]: Dropdown } = {};\n\n  private handleAddNode(method: 'wrap' | 'child' | 'sibling', module: string) {\n    const {treeManager, selectedNode} = this.props;\n    switch (method) {\n      case 'child':\n        treeManager.addChildNode((selectedNode ? selectedNode.id : null), module);\n        break;\n      case 'sibling':\n        treeManager.addSiblingNode(selectedNode!.id, module);\n        break;\n      case 'wrap':\n        treeManager.wrapNode(selectedNode!.id, module);\n    }\n    this.hideDropdowns();\n  }\n\n  private handleDeleteNode(withHierarchy: boolean) {\n    const {treeManager, selectedNode} = this.props;\n    treeManager.deleteNode(selectedNode!.id, withHierarchy);\n  }\n\n  hideDropdowns() {\n    Object.values(this.dropdowns).forEach((dropdown) => {\n      return dropdown.hide();\n    });\n  }\n\n  render() {\n    const {selectedNode} = this.props;\n    let childMode: string | null = null;\n    let childText: string = 'Node';\n    let allowAddSibling = false;\n    if (selectedNode === null) {\n      childMode = 'child';\n      childText = 'Node';\n    }\n    if (nodeAcceptsChildren(selectedNode)) {\n      childMode = 'child';\n      childText = 'Child';\n    }\n    if (selectedNode) {\n      const parent = this.props.treeManager.getNodeParentOrNull(selectedNode.id);\n      if (parent === null || nodeAcceptsChildren(parent)) {\n        allowAddSibling = true;\n      }\n    }\n    return (\n      <div id=\"tree-toolbar\" className=\"toolbar\">\n        <Dropdown\n          disabled={!selectedNode}\n          ref={(instance) => {\n            this.dropdowns.wrap = instance;\n          }}\n        >\n          <DropdownTrigger className=\"btn\">Wrap...</DropdownTrigger>\n          <DropdownContent className=\"node-select\">\n            {Object.keys(registry).filter((module) => registry[module].acceptsChildren).map((module) => (\n              <a href=\"#\" key={module} onClick={() => this.handleAddNode('wrap', module)}>{module}</a>\n            ))}\n          </DropdownContent>\n        </Dropdown>\n        <Dropdown\n          disabled={!childMode}\n          ref={(instance) => {\n            this.dropdowns.addChild = instance;\n          }}\n        >\n          <DropdownTrigger className=\"btn\">Add {childText}...</DropdownTrigger>\n          <DropdownContent className=\"node-select\">\n            {Object.keys(registry).map((module) => (\n              <a href=\"#\" key={module} onClick={() => this.handleAddNode('child', module)}>{module}</a>\n            ))}\n          </DropdownContent>\n        </Dropdown>\n        <Dropdown\n          disabled={!allowAddSibling}\n          ref={(instance) => {\n            this.dropdowns.addSibling = instance;\n          }}\n        >\n          <DropdownTrigger className=\"btn\">Add Sibling...</DropdownTrigger>\n          <DropdownContent className=\"node-select\">\n            {Object.keys(registry).map((module) => (\n              <a href=\"#\" key={module} onClick={() => this.handleAddNode('sibling', module)}>{module}</a>\n            ))}\n          </DropdownContent>\n        </Dropdown>\n        <div\n          className={'btn ' + (selectedNode ? '' : 'disabled')}\n          title=\"Shift-click to delete with hierarchy\"\n          onClick={(event) => {\n            this.handleDeleteNode(event.shiftKey);\n            event.preventDefault();\n          }}\n        >\n          Delete\n        </div>\n      </div>\n    );\n  }\n\n}\n","import * as React from 'react';\nimport {NodeConfig} from '../types';\nimport registry from '../modules/registry';\nimport Module, {UniversalVariables} from '../modules/Module';\nimport VariableDefinition from '../modules/VariableDefinition';\nimport Status from '../universe/Status';\nimport {groupBy} from 'lodash';\nimport {ChangeNodeConfigHandler} from '../types';\n\ntype NodeConfigViewProps = {\n  nodeConfig: NodeConfig,\n  onChange: ChangeNodeConfigHandler,\n  status: Status,\n};\n\ntype VariableConfigRowProps = {\n  variable: VariableDefinition,\n  nodeConfig: NodeConfig,\n  onChange: ChangeNodeConfigHandler,\n  status: Status,\n};\n\nconst VariableConfigRow = ({variable, nodeConfig, onChange, status}: VariableConfigRowProps) => {\n  let extraControls: React.ReactElement<any> | null = null;\n  let input: React.ReactElement<any> | null = null;\n\n  const handleChange = ((event) => onChange(\n    nodeConfig,\n    variable.name,\n    event.target.value.toString(),\n  ));\n  if (variable.choices) {\n    input = (\n      <select\n        value={nodeConfig.config[variable.name] || ''}\n        onChange={handleChange}\n      >\n        {variable.choices.map((c) => <option key={c} value={c}>{c}</option>)}\n      </select>\n    );\n  } else {\n    input = (\n      <input\n        type=\"text\"\n        value={nodeConfig.config[variable.name] || ''}\n        onChange={handleChange}\n      />\n    );\n  }\n  if (variable.type === 'color') {\n    extraControls = (\n      <input type=\"color\" value={nodeConfig.config[variable.name] || ''} onChange={handleChange} />\n    );\n  }\n\n  return (\n    <tr className=\"variable-config-row\">\n      <th>\n        {variable.name}\n      </th>\n      <td>\n        {input}\n      </td>\n      <td>\n        {extraControls}\n      </td>\n    </tr>\n  );\n};\n\nexport default class NodeConfigView extends React.Component<NodeConfigViewProps, any> {\n  render() {\n    const {nodeConfig, status} = this.props;\n    const moduleClass: Module = registry[nodeConfig.module];\n\n    if (!moduleClass) {\n      return (\n        <div>\n          The module {nodeConfig.module} is not available.\n          <textarea>{JSON.stringify(nodeConfig, null, 2)}</textarea>\n        </div>\n      );\n    }\n\n    const variableDefinitions = moduleClass.variables.concat(UniversalVariables);\n    const variablesByGroup = groupBy(variableDefinitions, (v) => (v.group || 'Other'));\n\n    return (\n      <div>\n        <table>\n          <tbody>\n            {Object.keys(variablesByGroup).sort().map((group) => <React.Fragment key={group}>\n                <tr key={`#${group}`} className=\"group-separator\">\n                  <th colSpan={3}>{group}</th>\n                </tr>\n                {variablesByGroup[group].map((variable: VariableDefinition) => (\n                  <VariableConfigRow\n                    key={variable.name}\n                    variable={variable}\n                    nodeConfig={nodeConfig}\n                    status={status}\n                    onChange={this.props.onChange}\n                  />\n                ))}\n              </React.Fragment>,\n            )}\n          </tbody>\n        </table>\n        <div className=\"debug\">\n          Variables last render: {status.getVariablesForNode(nodeConfig.id).join(', ')}\n        </div>\n        <ul className=\"errors\">\n          {status.getErrorsForNode(nodeConfig.id).map((err, i) => <li key={i}>{err}</li>)}\n        </ul>\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport {NodeConfig} from '../types';\nimport registry from '../modules/registry';\n\ntype TreeCommonProps = {\n  selectedNode: NodeConfig | null,\n  onSelectNode: (node: NodeConfig | null) => void,\n  onRepositionNode: (sourceNodeId: string, targetNodeId: string, copy: boolean) => void,\n};\n\ntype TreeNodeProps = TreeCommonProps & {\n  nodeConfig: NodeConfig,\n};\n\ntype TreeLevelProps = TreeCommonProps & {\n  nodeConfigs: ReadonlyArray<NodeConfig>,\n};\n\nconst DRAG_AND_DROP_DATA_ID = 'application/x-coil-nodeid';\n\nconst TreeNode = ({nodeConfig, selectedNode, onSelectNode, onRepositionNode}: TreeNodeProps) => (\n  <li className={selectedNode === nodeConfig ? 'selected' : ''}>\n    <a\n      href=\"#\"\n      draggable={true}\n      onClick={(e) => {\n        onSelectNode(nodeConfig);\n        e.preventDefault();\n        e.stopPropagation();\n      }}\n      onDragStart={(event) => {\n        event.dataTransfer.clearData();\n        event.dataTransfer.setData(DRAG_AND_DROP_DATA_ID, nodeConfig.id);\n        event.dataTransfer.effectAllowed = 'all';\n      }}\n      onDragOver={(event) => {\n        event.dataTransfer.dropEffect = 'none';\n        if (event.dataTransfer.types.indexOf(DRAG_AND_DROP_DATA_ID) > -1) {\n          if (registry[nodeConfig.module].acceptsChildren) {\n            event.dataTransfer.dropEffect = (event.altKey ? 'copy' : 'link');\n            event.preventDefault();\n          }\n        }\n      }}\n      onDrop={(event) => {\n        const sourceNodeId = event.dataTransfer.getData(DRAG_AND_DROP_DATA_ID);\n        event.dataTransfer.dropEffect = (event.altKey ? 'copy' : 'link');\n        const copy = (event.dataTransfer.dropEffect === 'copy');\n        onRepositionNode(sourceNodeId, nodeConfig.id, copy);\n      }}\n    >\n      {nodeConfig.module}\n    </a>\n    {nodeConfig.children.length ?\n      <TreeLevel\n        nodeConfigs={nodeConfig.children}\n        selectedNode={selectedNode}\n        onSelectNode={onSelectNode}\n        onRepositionNode={onRepositionNode}\n      />\n      : null\n    }\n  </li>\n);\n\nconst TreeLevel = ({nodeConfigs, selectedNode, onSelectNode, onRepositionNode}: TreeLevelProps) => (\n  <ul>\n    {nodeConfigs.map((nodeConfig: NodeConfig) => (\n      <TreeNode\n        key={nodeConfig.id}\n        nodeConfig={nodeConfig}\n        selectedNode={selectedNode}\n        onSelectNode={onSelectNode}\n        onRepositionNode={onRepositionNode}\n      />\n    ))}\n  </ul>\n);\n\nexport default ({nodeConfigs, selectedNode, onSelectNode, onRepositionNode}: TreeLevelProps) => {\n  return (\n    <div\n      id=\"tree\"\n      onClick={(e) => {\n        if (e.currentTarget.id === 'tree') {\n          onSelectNode(null);\n        }\n      }}\n    >\n      <TreeLevel\n        nodeConfigs={nodeConfigs}\n        selectedNode={selectedNode}\n        onSelectNode={onSelectNode}\n        onRepositionNode={onRepositionNode}\n      />\n    </div>\n  );\n};\n","import * as React from 'react';\nimport NodeTree from '../components/NodeTree';\nimport NodeConfigView from '../components/NodeConfigView';\nimport TreeToolbar from '../components/TreeToolbar';\nimport {TreeManager} from '../managers/TreeManager';\nimport Status from '../universe/Status';\nimport {NodeConfig} from '../types';\n\ninterface TreePanelProps {\n  treeManager: TreeManager;\n  status: Status;\n  selectedNodeId: string | null;\n  onSelectNode: (nodeConfig: NodeConfig | null) => void;\n}\n\nexport default class TreePanel extends React.Component<TreePanelProps, {}> {\n\n  private onChangeNodeVariable = (nodeConfig: NodeConfig, variableName: string, newValue: string) => {\n    this.props.treeManager.changeNodeVariable(nodeConfig.id, variableName, newValue);\n    this.forceUpdate();  // Avoid asynchronous input caret position problem :(\n  }\n\n  private onRepositionNode = (sourceNodeId: string, targetNodeId: string, copy: boolean) => {\n    if (copy) {\n      this.props.treeManager.copyNode(sourceNodeId, targetNodeId);\n    } else {\n      this.props.treeManager.moveNode(sourceNodeId, targetNodeId);\n    }\n  }\n\n  render() {\n    const {treeManager, selectedNodeId, status} = this.props;\n    const selectedNodeConfig = treeManager.getNodeOrNull(selectedNodeId!);\n    return (\n      <>\n        <div id=\"hierarchy\">\n          <TreeToolbar treeManager={treeManager} selectedNode={selectedNodeConfig} />\n          <NodeTree\n            nodeConfigs={treeManager.getTree()}\n            selectedNode={selectedNodeConfig}\n            onSelectNode={this.props.onSelectNode}\n            onRepositionNode={this.onRepositionNode}\n          />\n        </div>\n        <div id=\"props\">\n          {selectedNodeConfig ?\n            <NodeConfigView\n              nodeConfig={selectedNodeConfig!}\n              status={status}\n              onChange={this.onChangeNodeVariable}\n            />\n            : null\n          }\n        </div>\n      </>\n    );\n  }\n};\n","import * as React from 'react';\n\nexport default ({path, props}: { path: string, props?: object }) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" {...props}>\n    <path d={path} />\n  </svg>\n);\n","import * as React from 'react';\nimport Icon from './Icon';\nimport * as cx from 'classnames';\n\nconst GlobalToolbarIcons = {\n  fileTree: require('material-design-icons-svg/paths/file-tree'),\n  save: require('material-design-icons-svg/paths/content-save'),\n};\n\nexport default class GlobalToolbar extends React.Component<{\n  activeTab: string,\n  onChangeTab: (id: string) => void,\n}, any> {\n  render() {\n    const tabs = [\n      {id: 'tree', icon: GlobalToolbarIcons.fileTree},\n      {id: 'file', icon: GlobalToolbarIcons.save},\n    ];\n    return (\n      <div id=\"global-toolbar\" className=\"toolbar\">\n        {tabs.map((t) =>\n          <div\n            key={t.id}\n            className={cx('btn', {active: this.props.activeTab === t.id})}\n            title={t.id}\n            onClick={() => this.props.onChangeTab(t.id)}\n          >\n            <Icon path={t.icon} />\n          </div>,\n        )}\n      </div>\n    );\n  }\n\n}\n","import {VariableMap} from '../types';\n\nexport default class Status {\n  private nodeErrors: { [key: string]: string[] } = {};\n  private nodeVariables: { [key: string]: VariableMap[] } = {};\n\n  public addError(nodeId: string, error: string) {\n    if (!(nodeId in this.nodeErrors)) {\n      this.nodeErrors[nodeId] = [];\n    }\n    this.nodeErrors[nodeId].push(error);\n  }\n\n  public getErrorsForNode(nodeId: string): ReadonlyArray<string> {\n    return (nodeId in this.nodeErrors ? this.nodeErrors[nodeId] : []);\n  }\n\n  public addVariables(nodeId: string, variables: VariableMap) {\n    if (!(nodeId in this.nodeVariables)) {\n      this.nodeVariables[nodeId] = [];\n    }\n    this.nodeVariables[nodeId].push(Object.assign({}, variables));\n  }\n\n  public getVariablesForNode(nodeId: string): string[] {\n    if (!(nodeId in this.nodeVariables)) {\n      return [];\n    }\n    const variables = new Set();\n    this.nodeVariables[nodeId].forEach((map) => {\n      Object.keys(map).forEach((key) => {\n        return variables.add(key);\n      });\n    });\n    return Array.from(variables).sort();\n  }\n\n}\n","import {configure, duplicate} from '../universe/configure';\nimport {cloneDeep} from 'lodash';\nimport {NodeConfig} from '../types';\n\ntype NodeCacheEntry = {\n  node: NodeConfig,\n  parent: NodeConfig | null,\n};\nexport type NodeCacheType = {\n  [key: string]: NodeCacheEntry,\n};\nexport type UpdateListener = (root: NodeConfig[]) => void;\n\nexport class TreeManager {\n  private tree: NodeConfig[] = [];\n  private nodeCache: NodeCacheType = {};\n  private treeUpdateListeners: UpdateListener[] = [];\n\n  public replaceTree(newTree: NodeConfig[]) {\n    this.tree = cloneDeep(newTree);\n    this.updateNodeCache();\n    this.invokeTreeUpdateListeners();\n  }\n\n  private updateNodeCache() {\n    const newNodeCache: NodeCacheType = {};\n\n    function walk(node: NodeConfig, parent: NodeConfig | null) {\n      newNodeCache[node.id] = {node, parent};\n      node.children.forEach((child) => walk(child, node));\n    }\n\n    this.tree.forEach((node) => walk(node, null));\n    this.nodeCache = newNodeCache;\n  }\n\n  private invokeTreeUpdateListeners() {\n    setImmediate(() => {\n      this.treeUpdateListeners.forEach((listener) => {\n        listener(this.tree);\n      });\n    });\n  }\n\n  public getNodeOrNull(nodeId: string): NodeConfig | null {\n    const cacheEntry = this.getNodeCacheEntry(nodeId, false);\n    return (cacheEntry ? cacheEntry.node : null);\n  }\n\n  public getNodeParentOrNull(nodeId: string): NodeConfig | null {\n    const cacheEntry = this.getNodeCacheEntry(nodeId, false);\n    return (cacheEntry ? cacheEntry.parent : null);\n  }\n\n  private getNode(nodeId: string): NodeConfig {\n    return this.getNodeCacheEntry(nodeId)!.node;\n  }\n\n  private getNodeParent(nodeId: string): NodeConfig | null {\n    return this.getNodeCacheEntry(nodeId)!.parent;\n  }\n\n  private getNodeCacheEntry(nodeId: string, check: boolean = true): NodeCacheEntry | null {\n    const cacheEntry = this.nodeCache[nodeId];\n    if (check && !cacheEntry) {\n      throw new Error(`invalid node ${nodeId}`);\n    }\n    return (cacheEntry ? cacheEntry : null);\n  }\n\n  private replaceOrEmsiblingNode(\n    parent: NodeConfig | null,\n    nodeToReplace: NodeConfig,\n    newNodes: ReadonlyArray<NodeConfig>,\n    replace: boolean,\n  ) {\n    const childList = (parent === null ? this.tree : parent.children);\n    const childIndex = childList.indexOf(nodeToReplace);\n    if (childIndex > -1) {\n      const args = ([childIndex, (replace ? 1 : 0)] as any[]).concat(newNodes);\n      childList.splice.apply(childList, args);\n    }\n  }\n\n  public getTree(): ReadonlyArray<NodeConfig> {\n    return this.tree;\n  }\n\n  public addTreeUpdateListener(listener: UpdateListener) {\n    this.treeUpdateListeners.push(listener);\n  }\n\n  public changeNodeVariable(nodeId: string, variableName: string, value: any) {\n    const node = this.getNode(nodeId);\n    node.config[variableName] = value;\n    this.invokeTreeUpdateListeners();\n  }\n\n  public addChildNode(parentNodeId: string | null, module: string) {\n    const newNode = configure(module, {});\n    this.addChildInternal(parentNodeId, newNode);\n    this.updateNodeCache();\n    this.invokeTreeUpdateListeners();\n    return newNode;\n  }\n\n  private addChildInternal(parentNodeId: string | null, newNode) {\n    if (parentNodeId) {\n      const parentNode = this.getNode(parentNodeId);\n      parentNode.children.push(newNode);\n      return parentNode;\n    } else {\n      this.tree.push(newNode);\n      return null;\n    }\n  }\n\n  public wrapNode(parentNodeId: string, module: string) {\n    const wrappedNode = this.getNode(parentNodeId);\n    const wrappedNodeParent = this.getNodeParent(parentNodeId);\n    const wrapperNode = configure(module, {}, [wrappedNode]);\n    this.replaceOrEmsiblingNode(wrappedNodeParent, wrappedNode, [wrapperNode], true);\n    this.updateNodeCache();\n    this.invokeTreeUpdateListeners();\n    return wrapperNode;\n  }\n\n  public deleteNode(nodeId: string, withHierarchy: boolean) {\n    const doomedNode = this.getNode(nodeId);\n    const doomedNodeParent = this.getNodeParent(nodeId);\n    this.replaceOrEmsiblingNode(doomedNodeParent, doomedNode, (withHierarchy ? [] : doomedNode.children), true);\n    this.updateNodeCache();\n    this.invokeTreeUpdateListeners();\n  }\n\n  public addSiblingNode(nodeId: string, module: string) {\n    const newNode = configure(module, {});\n    const node = this.getNode(nodeId);\n    const nodeParent = this.getNodeParent(nodeId);\n    this.replaceOrEmsiblingNode(nodeParent, node, [newNode], false);\n    this.updateNodeCache();\n    this.invokeTreeUpdateListeners();\n  }\n\n  moveNode(sourceNodeId: string, newParentNodeId: string | null) {\n    if (sourceNodeId === newParentNodeId) {\n      return false;\n    }\n    const sourceNode = this.getNode(sourceNodeId);\n    const sourceNodeParent = this.getNodeParent(sourceNodeId);\n    // Remove from parent...\n    this.replaceOrEmsiblingNode(sourceNodeParent, sourceNode, [], true);\n    // Add to new parent.\n    this.addChildInternal(newParentNodeId, sourceNode);\n    this.updateNodeCache();\n    this.invokeTreeUpdateListeners();\n    return true;\n  }\n\n  copyNode(sourceNodeId: string, targetNodeId: string | null) {\n    const copiedNode = duplicate(this.getNode(sourceNodeId));\n    this.addChildInternal(targetNodeId, copiedNode);\n    this.updateNodeCache();\n    this.invokeTreeUpdateListeners();\n    return true;\n  }\n}\n","import * as React from 'react';\nimport Module from '../Module';\nimport Context from '../../universe/Context';\nimport TransformVariables from '../TransformVariables';\nimport {toSVG} from 'transformation-matrix';\nimport {splitMatrixAndProps} from '../MatrixUtils';\n\nexport default {\n  acceptsChildren: true,\n  variables: TransformVariables.concat([\n    {name: 'opacity', default: '1'},\n  ]),\n\n  render(context: Context) {\n    const nodes = context.renderChildren();\n    const {props, matrix} = splitMatrixAndProps(context.evaluateNodeConfig());\n    const {opacity} = props;\n    return [<g transform={toSVG(matrix)} opacity={opacity}>{nodes}</g>];\n  },\n} as Module;\n","import * as React from 'react';\nimport Module from '../Module';\nimport Context from '../../universe/Context';\nimport {renderNodesInto} from '../../universe/render';\n\nexport default {\n  acceptsChildren: true,\n  variables: [\n    {name: 'keep', default: '=rand() < .5'},\n    {name: 'indexVariable', default: 'i'},\n  ],\n\n  render(context: Context) {\n    const node = context.node;\n    const indexVariable = context.evaluateFromNodeConfig('indexVariable');\n    const nodes = [];\n    renderNodesInto(nodes, node.children, context);\n    const filterContext = context.subcontext(node);\n    const keepExpression = node.config.keep!;\n    return nodes.filter((child, index) => (\n      filterContext.evaluate(`keep ${index}`, keepExpression, {[indexVariable]: index})\n    ));\n  },\n} as Module;\n","import * as React from 'react';\nimport Module from '../Module';\nimport Context from '../../universe/Context';\nimport {renderNodesInto} from '../../universe/render';\n\nconst THREE_OVER_TWO = (3 / 2);\nconst SQRT_THREE = Math.sqrt(3);\nconst SQRT_THREE_OVER_TWO = SQRT_THREE / 2;\n\nfunction makeHex(hex: string, x: number, y: number): [number, number] {\n  if (hex === 'flat' || hex === 'flatRect') {\n    if (hex === 'flatRect') {\n      y -= (x >> 1);\n    }\n    return [\n      THREE_OVER_TWO * x,\n      SQRT_THREE_OVER_TWO * x + SQRT_THREE * y,\n    ];\n  } else if (hex === 'pointy' || hex === 'pointyRect') {\n    if (hex === 'pointyRect') {\n      x -= (y >> 1);\n    }\n    return [\n      SQRT_THREE * x + SQRT_THREE_OVER_TWO * y,\n      THREE_OVER_TWO * y,\n    ];\n  }\n  return [0, 0];\n}\n\nexport default {\n  acceptsChildren: true,\n  variables: [\n    {name: 'numberX', default: '5'},\n    {name: 'numberY', default: '5'},\n    {name: 'variableX', default: 'vx'},\n    {name: 'variableY', default: 'vy'},\n    {\n      name: 'hex',\n      default: 'none',\n      choices: [\n        'none',\n        'flat',\n        'flatRect',\n        'pointy',\n        'pointyRect',\n      ],\n    },\n  ],\n\n  render(context: Context) {\n    const {node} = context;\n    // tslint:disable-next-line:prefer-const\n    let {numberX, numberY, variableX, variableY, hex} = context.evaluateNodeConfig(node);\n    const nodes = [];\n\n    numberX = Math.round(parseFloat(numberX));\n    numberY = Math.round(parseFloat(numberY));\n    for (let y = 0; y < numberY; y++) {\n      for (let x = 0; x < numberX; x++) {\n        const newVariables = {\n          [variableX]: x,\n          [variableY]: y,\n          [`${variableX}F`]: x / (numberX - 1),\n          [`${variableY}F`]: y / (numberY - 1),\n        };\n        if (hex !== 'none') {\n          const [hexX, hexY] = makeHex(hex, x, y);\n          newVariables[`${variableX}Hex`] = hexX;\n          newVariables[`${variableY}Hex`] = hexY;\n        }\n        const subcontext = context.subcontext(node, newVariables, `${x}x${y}`);\n        renderNodesInto(nodes, node.children, subcontext);\n      }\n    }\n    return nodes;\n  },\n} as Module;\n","import * as React from 'react';\nimport Module from '../Module';\nimport Context from '../../universe/Context';\nimport {toSVG} from 'transformation-matrix';\nimport TransformVariables from '../TransformVariables';\nimport {splitMatrixAndProps} from '../MatrixUtils';\nimport PresentationVariables from '../PresentationVariables';\n\nexport default {\n  variables: TransformVariables.concat(PresentationVariables).concat([\n    {name: 'width', default: '20'},\n    {name: 'height', default: '20'},\n  ]),\n\n  render(context: Context) {\n    const {node} = context;\n    const {props, matrix} = splitMatrixAndProps(context.evaluateNodeConfig(node));\n    return [\n      <rect\n        x={-props.width / 2}\n        y={-props.height / 2}\n        transform={toSVG(matrix)}\n        key={context.getId()}\n        {...props}\n      />,\n    ];\n  },\n} as Module;\n","export default function dumbMemoize<T>(fn: (...args) => T): (...args) => T {\n  const memo: { [args: string]: T } = {};\n  const memoizedFn = (...args) => {\n    const argsStr = args.join('\\x01');\n    if (argsStr in memo) { return memo[argsStr]; }\n    return memo[argsStr] = fn(...args);\n  };\n  (memoizedFn as any).memo = memo;\n  return memoizedFn;\n}\n","import * as React from 'react';\nimport Context from '../../universe/Context';\nimport TransformVariables from '../TransformVariables';\nimport {splitMatrixAndProps} from '../MatrixUtils';\nimport PresentationVariables from '../PresentationVariables';\nimport Module from '../Module';\nimport {toSVG} from 'transformation-matrix';\nimport dumbMemoize from '../../utils/dumbMemoize';\n\nconst TWO_PI = Math.PI * 2;\n\nconst generatePathString = dumbMemoize(\n  (vertices, radius1, radius2, tilt1, tilt2) => {\n    const path: string[] = [];\n    radius1 = parseFloat(radius1);\n    radius2 = parseFloat(radius2);\n    tilt1 = parseFloat(tilt1);\n    tilt2 = parseFloat(tilt2);\n    for (let i = 0; i < vertices; i++) {\n      const f = i / vertices;\n      const radius = (i % 2 === 0 ? radius1 : radius2);\n      const angle = (f + (i % 2 === 0 ? tilt1 : tilt2)) * TWO_PI;\n      const x = Math.cos(angle) * radius;\n      const y = Math.sin(angle) * radius;\n      if (!(isNaN(x) || isNaN(y))) {\n        path.push(`${i === 0 ? 'M' : 'L'}${x.toFixed(3)},${y.toFixed(3)}`);\n      }\n    }\n    if (path.length > 0) {\n      path.push('z');\n    }\n    return path.join(' ');\n  },\n);\n\nexport default {\n  variables: TransformVariables.concat(PresentationVariables).concat([\n    {name: 'vertices', default: '5'},\n    {name: 'radius1', default: '5'},\n    {name: 'radius2', default: '5'},\n    {name: 'tilt1', default: '0'},\n    {name: 'tilt2', default: '0'},\n  ]),\n\n  render(context: Context) {\n    const {node} = context;\n    const {props, matrix} = splitMatrixAndProps(context.evaluateNodeConfig(node));\n    const path = generatePathString(props.vertices, props.radius1, props.radius2, props.tilt1, props.tilt2);\n\n    delete props.vertices;\n    delete props.radius1;\n    delete props.radius2;\n    delete props.tilt1;\n    delete props.tilt2;\n    return [<path\n      d={path}\n      {...props}\n      key={context.getId(node.id)}\n      transform={toSVG(matrix)}\n    />];\n  },\n} as Module;\n","import * as React from 'react';\nimport Module from '../Module';\nimport Context from '../../universe/Context';\nimport {renderNodesInto} from '../../universe/render';\n\nexport default {\n  acceptsChildren: true,\n  variables: [\n    {name: 'number', default: '5'},\n    {name: 'variable', default: 'i'},\n  ],\n\n  render(context: Context) {\n    // tslint:disable-next-line:variable-name\n    const {number, variable} = context.evaluateNodeConfig();\n    const nodes = [];\n    const nNumber = Math.round(parseFloat(number));\n    const node = context.node;\n    for (let i = 0; i < nNumber; i++) {\n      const subcontext = context.subcontext(node, {\n        [variable]: i,\n        [`${variable}F`]: i / (nNumber - 1),\n      }, `${i}`);\n      renderNodesInto(nodes, node.children, subcontext);\n    }\n    return nodes;\n  },\n} as Module;\n","import * as React from 'react';\nimport Module from '../Module';\nimport Context from '../../universe/Context';\nimport {toSVG} from 'transformation-matrix';\nimport TransformVariables from '../TransformVariables';\nimport {splitMatrixAndProps} from '../MatrixUtils';\n\nexport default {\n  variables: TransformVariables.concat([\n    {name: 'radiusX', default: '20'},\n    {name: 'radiusY', default: '20'},\n    {name: 'fill', default: '#333'},\n    {name: 'opacity', default: '1'},\n  ]),\n\n  render(context: Context) {\n    const {props, matrix} = splitMatrixAndProps(context.evaluateNodeConfig());\n    const {radiusX, radiusY, fill, opacity} = props;\n    return [\n      <ellipse\n        cx={0}\n        cy={0}\n        rx={radiusX}\n        ry={radiusY}\n        fill={fill}\n        opacity={opacity}\n        transform={toSVG(matrix)}\n        key={context.getId()}\n      />,\n    ];\n  },\n} as Module;\n","import * as React from 'react';\nimport Module from '../Module';\nimport Context from '../../universe/Context';\nimport { renderNodesInto } from '../../universe/render';\n\nexport default {\n  acceptsChildren: true,\n  variables: [\n    { name: 'childIndex', default: '0' },\n    { name: 'indexVariable', default: 'u' },\n  ],\n\n  render(context: Context) {\n    const { node } = context;\n    const { childIndex, indexVariable } = context.evaluateNodeConfig(node);\n    const index = parseInt(childIndex, 10);\n    const child = node.children[index % node.children.length];\n    const nodes = [];\n    if (child) {\n      const subcontext = context.subcontext(\n        node,\n        {\n          [indexVariable]: childIndex,\n        },\n        `child${childIndex}`,\n      );\n      renderNodesInto(nodes, [child], subcontext);\n    }\n    return nodes;\n  },\n} as Module;\n","import {VariableMap} from '../types';\n\nexport type NamespaceFn = () => VariableMap;\n\nconst expressionFnCache = {};\n\nexport function evaluateExpression(expression: string, namespace: NamespaceFn): any {\n  if (expression.startsWith('=')) {\n    const exprFun = (\n      expression in expressionFnCache ?\n        expressionFnCache[expression] :\n        expressionFnCache[expression] = new Function('namespace', `with(namespace) { return ${expression.slice(1)}}`)\n    );\n    return exprFun(namespace());\n  }\n  if (/[+-][0-9.]+/.test(expression)) {\n    return parseFloat(expression);\n  }\n  return `${expression}`;\n}\n","function hashString(string: String) {\n  let seed = 0;\n  for (let i = 0; i < string.length; i++) {\n    seed ^= (i % 16) << string.charCodeAt(i);\n  }\n  return seed;\n}\n\n// Based on https://gist.github.com/blixt/f17b47c62508be59987b\n// which is based on http://www.firstpr.com.au/dsp/rand31/\n\nexport type RandomGenerator = () => number;\n\nexport default function createRandomGenerator(seedString?: string): RandomGenerator {\n  let seed = (seedString ? hashString(seedString) : (Math.random() * 2147483647));\n\n  const next = () => {\n    return seed = seed * 16807 % 2147483647;\n  };\n\n  return function nextFloat() {\n    return (next() - 1) / 2147483646;\n  };\n}\n","import Status from './Status';\nimport {NodeConfig} from '../types';\nimport {ExpressionMap, VariableMap} from '../types';\nimport {default as createRandomGenerator, RandomGenerator} from '../utils/RandomGenerator';\nimport {evaluateExpression, NamespaceFn} from '../utils/evaluator';\nimport {renderNodesInto} from './render';\n\nfunction _evaluate(\n  status: Status,\n  node: NodeConfig,\n  tag: string,\n  expression: string,\n  namespace: NamespaceFn,\n  errorDefault: any = null,\n): any {\n  try {\n    return evaluateExpression(expression, namespace);\n  } catch (err) {\n    status.addError(node.id, `${tag}: ${err}`);\n    console.warn(err);\n    return errorDefault;\n  }\n}\n\nfunction memoizeOnFirstInvocation<T>(creator: () => T): () => T {\n  let t: T | undefined;\n  return () => {\n    if (t === undefined) {\n      t = creator();\n    }\n    return t;\n  };\n}\n\nexport default class Context {\n  private rng?: RandomGenerator;\n  private defaultNamespace: NamespaceFn;\n\n  constructor(\n    readonly status: Status,\n    readonly node: NodeConfig,\n    readonly parent: Context | null = null,\n    readonly variables: VariableMap = {},\n    readonly idPrefix: string = '',\n  ) {\n    this.defaultNamespace = this.prepareNamespace();\n  }\n\n  subcontext(\n    forNode: NodeConfig,\n    newVariables: VariableMap = {},\n    idPrefix: String = '',\n  ): Context {\n    const mergedVariables = Object.assign({}, this.variables, newVariables);\n    return new Context(\n      this.status,\n      forNode,\n      this,\n      mergedVariables,\n      `${this.idPrefix}.${idPrefix}`,\n    );\n  }\n\n  random(min?: number, max?: number) {\n    if (!this.rng) {\n      const seed = this.evaluateFromNodeConfig('seed');\n      this.rng = createRandomGenerator(seed);\n    }\n    const val = this.rng();\n    if (min !== undefined) {\n      if (max === undefined) {\n        return val * min;\n      }\n      return min + val * (max - min);\n    }\n    return val;\n  }\n\n  prepareNamespace(additionalVariables?: VariableMap): NamespaceFn {\n    return memoizeOnFirstInvocation(() => ({\n      rand: this.random.bind(this),\n      ...this.variables,\n      ...additionalVariables,\n    }));\n  }\n\n  evaluateFromNodeConfig(key: string): any {\n    const expression = this.node.config[key]!;\n    if (expression === undefined) { return null; }\n    return _evaluate(this.status, this.node, key, expression, this.defaultNamespace);\n  }\n\n  evaluate(tag: string, expression: string, additionalVariables?: VariableMap): any {\n    const namespace = this.prepareNamespace(additionalVariables);\n    return _evaluate(this.status, this.node, tag, expression, namespace);\n  }\n\n  evaluateAll(\n    node: NodeConfig,\n    expressionMap: ExpressionMap,\n    additionalVariables?: VariableMap,\n  ): VariableMap {\n    const evaluated = {};\n    const namespace = this.prepareNamespace(additionalVariables);\n    for (const tag in expressionMap) {\n      const expression = expressionMap[tag];\n      if (expression !== null) {\n        evaluated[tag] = _evaluate(this.status, this.node, tag, expression, namespace);\n      }\n    }\n    return evaluated;\n  }\n\n  evaluateNodeConfig(node: NodeConfig = this.node): VariableMap {\n    return this.evaluateAll(node, node.config);\n  }\n\n  getId(suffix: string = this.node.id) {\n    return this.idPrefix + suffix;\n  }\n\n  renderChildren(context: Context = this) {\n    const nodes: Element[] = [];\n    renderNodesInto(nodes, this.node.children, context);\n    return nodes;\n  }\n}\n","import * as React from 'react';\nimport Context from '../universe/Context';\nimport {TreeManager} from '../managers/TreeManager';\nimport Status from '../universe/Status';\nimport GlobalToolbar from '../components/GlobalToolbar';\nimport {NodeConfig} from '../types';\nimport TreePanel from '../sidebar-panels/TreePanel';\nimport FilePanel from '../sidebar-panels/FilePanel';\nimport * as storage from '../utils/storage';\nimport makeDefaultConfig from '../utils/defaultConfig';\n\ntype AppState = {\n  selectedNodeId: string | null,\n  rendered: any,\n  status: Status,\n  activeTab: 'tree' | 'file',\n};\n\nconst STORAGE_KEY = 'coilSave';\n\nexport default class App extends React.Component<{}, AppState> {\n\n  private treeManager: TreeManager = new TreeManager();\n\n  public state: AppState = {\n    selectedNodeId: null,\n    rendered: null,\n    status: new Status(),\n    activeTab: 'tree',\n  };\n\n  componentDidMount() {\n    this.treeManager.addTreeUpdateListener((tree) => {\n      this.renderDrawing(tree);\n    });\n    this.treeManager.addTreeUpdateListener((tree) => {\n      storage.save(STORAGE_KEY, tree);\n    });\n\n    const lTree = storage.load(STORAGE_KEY) || makeDefaultConfig();\n    this.treeManager.replaceTree(lTree);\n  }\n\n  private onSelectNode = (nodeConfig: NodeConfig | null): void => {\n    this.setState({\n      selectedNodeId: (nodeConfig ? nodeConfig.id : null),\n    });\n  }\n\n  renderDrawing(tree: NodeConfig[]) {\n    const status = new Status();\n    const rootPseudoNode = {id: 'root', module: 'root', config: {}, children: tree};\n    const context = new Context(status, rootPseudoNode);\n    const width = 800;\n    const height = 800;\n    let renderedChildren;\n    try {\n      renderedChildren = context.renderChildren();\n    } catch (e) {\n      renderedChildren = <text y={50} x={50}>{e.toString()}</text>;\n      console.error(renderedChildren);\n    }\n    const rendered = (\n      <svg width={width} height={height} viewBox={`0 0 ${width} ${height}`}>\n        {renderedChildren}\n      </svg>\n    );\n    this.setState({rendered, status});\n  }\n\n  onChangeTab = (tabId) => {\n    this.setState({activeTab: tabId});\n  }\n\n  render() {\n    const {selectedNodeId, rendered, status, activeTab} = this.state;\n    const {treeManager} = this;\n    const selectedNodeConfig = treeManager.getNodeOrNull(selectedNodeId!);\n    let configContent: React.ReactElement<any> | null = null;\n    switch (activeTab) {\n      case 'tree':\n        configContent = (\n          <TreePanel\n            treeManager={this.treeManager}\n            status={this.state.status}\n            selectedNodeId={this.state.selectedNodeId}\n            onSelectNode={this.onSelectNode}\n          />\n        );\n        break;\n      case 'file':\n        configContent = (\n          <FilePanel\n            treeManager={this.treeManager}\n            rendered={this.state.rendered}\n          />\n        );\n        break;\n    }\n    return (\n      <>\n        <div id=\"config\">\n          <GlobalToolbar activeTab={activeTab} onChangeTab={this.onChangeTab} />\n          {configContent}\n        </div>\n        <div id=\"drawing\">\n          {rendered}\n        </div>\n      </>\n    );\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './views/App';\nimport './style.scss';\n\nconst wrapper = document.createElement('div');\nwrapper.id = 'wrapper';\ndocument.body.appendChild(wrapper);\n\nReactDOM.render(<App />, wrapper);\n"],"sourceRoot":""}